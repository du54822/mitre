
/Pace-2024-ectf/component/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	1000e965 	.word	0x1000e965
1000e008:	1000e799 	.word	0x1000e799
1000e00c:	1000e9a3 	.word	0x1000e9a3
1000e010:	1000e9a5 	.word	0x1000e9a5
1000e014:	1000e9a7 	.word	0x1000e9a7
1000e018:	1000e9a9 	.word	0x1000e9a9
	...
1000e02c:	1000e9ab 	.word	0x1000e9ab
1000e030:	1000e9ad 	.word	0x1000e9ad
1000e034:	00000000 	.word	0x00000000
1000e038:	1000e9af 	.word	0x1000e9af
1000e03c:	1000e9b1 	.word	0x1000e9b1
1000e040:	1000e9b5 	.word	0x1000e9b5
1000e044:	1000e9b7 	.word	0x1000e9b7
1000e048:	1000e9b9 	.word	0x1000e9b9
1000e04c:	1000e9bb 	.word	0x1000e9bb
1000e050:	1000e9bd 	.word	0x1000e9bd
1000e054:	1000e9bf 	.word	0x1000e9bf
1000e058:	1000e9c1 	.word	0x1000e9c1
1000e05c:	1000e9c3 	.word	0x1000e9c3
1000e060:	1000e9c5 	.word	0x1000e9c5
1000e064:	1000e9c7 	.word	0x1000e9c7
1000e068:	1000e9c9 	.word	0x1000e9c9
1000e06c:	1000e9cb 	.word	0x1000e9cb
1000e070:	1000e9cd 	.word	0x1000e9cd
1000e074:	1000e9cf 	.word	0x1000e9cf
1000e078:	1000e9d1 	.word	0x1000e9d1
1000e07c:	1000e9d3 	.word	0x1000e9d3
1000e080:	1000e9d5 	.word	0x1000e9d5
1000e084:	1000e9d7 	.word	0x1000e9d7
1000e088:	1000e9d9 	.word	0x1000e9d9
1000e08c:	1000e9db 	.word	0x1000e9db
1000e090:	1000e9dd 	.word	0x1000e9dd
1000e094:	1000e9df 	.word	0x1000e9df
1000e098:	1000e9e1 	.word	0x1000e9e1
1000e09c:	1000e9e3 	.word	0x1000e9e3
1000e0a0:	1000e71d 	.word	0x1000e71d
1000e0a4:	1000e725 	.word	0x1000e725
1000e0a8:	1000e9e9 	.word	0x1000e9e9
1000e0ac:	1000e9eb 	.word	0x1000e9eb
1000e0b0:	1000e9ed 	.word	0x1000e9ed
1000e0b4:	1000e9ef 	.word	0x1000e9ef
1000e0b8:	1000e9f1 	.word	0x1000e9f1
1000e0bc:	1000e9f3 	.word	0x1000e9f3
1000e0c0:	1000e9f5 	.word	0x1000e9f5
1000e0c4:	1000e9f7 	.word	0x1000e9f7
1000e0c8:	1000e9f9 	.word	0x1000e9f9
1000e0cc:	1000e9fb 	.word	0x1000e9fb
1000e0d0:	1000e9fd 	.word	0x1000e9fd
1000e0d4:	1000e9ff 	.word	0x1000e9ff
1000e0d8:	1000ea01 	.word	0x1000ea01
1000e0dc:	1000ea03 	.word	0x1000ea03
1000e0e0:	1000ea05 	.word	0x1000ea05
1000e0e4:	1000ea07 	.word	0x1000ea07
1000e0e8:	1000ea09 	.word	0x1000ea09
1000e0ec:	1000ea0b 	.word	0x1000ea0b
1000e0f0:	1000ea0d 	.word	0x1000ea0d
1000e0f4:	1000ea0f 	.word	0x1000ea0f
1000e0f8:	1000ea11 	.word	0x1000ea11
1000e0fc:	1000ea13 	.word	0x1000ea13
1000e100:	1000ea15 	.word	0x1000ea15
1000e104:	1000ea17 	.word	0x1000ea17
1000e108:	1000ea19 	.word	0x1000ea19
1000e10c:	1000ea1b 	.word	0x1000ea1b
1000e110:	1000ea1d 	.word	0x1000ea1d
1000e114:	1000ea1f 	.word	0x1000ea1f
1000e118:	1000ea21 	.word	0x1000ea21
1000e11c:	1000ea23 	.word	0x1000ea23
1000e120:	1000ea25 	.word	0x1000ea25
1000e124:	1000ea27 	.word	0x1000ea27
1000e128:	1000ea29 	.word	0x1000ea29
1000e12c:	1000ea2b 	.word	0x1000ea2b
1000e130:	1000ea2d 	.word	0x1000ea2d
1000e134:	1000ea2f 	.word	0x1000ea2f
1000e138:	1000ea31 	.word	0x1000ea31
1000e13c:	1000ea33 	.word	0x1000ea33
1000e140:	1000ea35 	.word	0x1000ea35
1000e144:	1000ea37 	.word	0x1000ea37
1000e148:	1000ea39 	.word	0x1000ea39
1000e14c:	1000ea3b 	.word	0x1000ea3b
1000e150:	1000ea3d 	.word	0x1000ea3d
1000e154:	1000ea3f 	.word	0x1000ea3f
1000e158:	1000ea41 	.word	0x1000ea41
1000e15c:	1000ea43 	.word	0x1000ea43
1000e160:	1000ea45 	.word	0x1000ea45
1000e164:	1000ea47 	.word	0x1000ea47
1000e168:	1000ea49 	.word	0x1000ea49
1000e16c:	1000ea4b 	.word	0x1000ea4b
1000e170:	1000ea4d 	.word	0x1000ea4d
1000e174:	1000ea4f 	.word	0x1000ea4f
1000e178:	1000ea51 	.word	0x1000ea51
1000e17c:	1000ea53 	.word	0x1000ea53
1000e180:	1000ea55 	.word	0x1000ea55
1000e184:	1000ea57 	.word	0x1000ea57
1000e188:	1000ea59 	.word	0x1000ea59
1000e18c:	1000ea5b 	.word	0x1000ea5b
1000e190:	1000ea5d 	.word	0x1000ea5d
1000e194:	1000ea5f 	.word	0x1000ea5f
1000e198:	1000ea61 	.word	0x1000ea61
1000e19c:	1000ea63 	.word	0x1000ea63
1000e1a0:	1000ea65 	.word	0x1000ea65
1000e1a4:	1000ea67 	.word	0x1000ea67
1000e1a8:	1000ea69 	.word	0x1000ea69
1000e1ac:	1000ea6b 	.word	0x1000ea6b
1000e1b0:	1000ea6d 	.word	0x1000ea6d
1000e1b4:	1000ea6f 	.word	0x1000ea6f
1000e1b8:	1000ea71 	.word	0x1000ea71
1000e1bc:	1000ea73 	.word	0x1000ea73
1000e1c0:	1000ea75 	.word	0x1000ea75
1000e1c4:	1000ea77 	.word	0x1000ea77
1000e1c8:	1000ea79 	.word	0x1000ea79
1000e1cc:	1000ea7b 	.word	0x1000ea7b
1000e1d0:	1000ea7d 	.word	0x1000ea7d
1000e1d4:	1000ea7f 	.word	0x1000ea7f
1000e1d8:	1000ea81 	.word	0x1000ea81
1000e1dc:	1000ea83 	.word	0x1000ea83
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	1000e965 	.word	0x1000e965

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	200006f8 	.word	0x200006f8
1000e21c:	200006f8 	.word	0x200006f8
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	200006f8 	.word	0x200006f8
1000e240:	200006f8 	.word	0x200006f8
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	20000800 	.word	0x20000800
1000e268:	00000000 	.word	0x00000000
1000e26c:	10019530 	.word	0x10019530

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	20000804 	.word	0x20000804
1000e290:	10019530 	.word	0x10019530

1000e294 <board_link_init>:
 * @return int: negative if error, zero if successful
 *
 * Initialized the underlying i2c_simple interface
*/
int board_link_init(i2c_addr_t addr) {
    return i2c_simple_peripheral_init(addr);
1000e294:	f000 b9f4 	b.w	1000e680 <i2c_simple_peripheral_init>

1000e298 <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
1000e298:	b2c0      	uxtb	r0, r0
1000e29a:	4770      	bx	lr

1000e29c <send_packet_and_ack>:
 * @param message: uint8_t*, message to be sent
 * 
 * This function utilizes the simple_i2c_peripheral library to
 * send a packet to the AP and wait for the message to be received
*/
void send_packet_and_ack(uint8_t len, uint8_t* packet) {
1000e29c:	b510      	push	{r4, lr}
    I2C_REGS[TRANSMIT_LEN][0] = len;
1000e29e:	4c09      	ldr	r4, [pc, #36]	@ (1000e2c4 <send_packet_and_ack+0x28>)
1000e2a0:	6963      	ldr	r3, [r4, #20]
1000e2a2:	7018      	strb	r0, [r3, #0]
void send_packet_and_ack(uint8_t len, uint8_t* packet) {
1000e2a4:	4602      	mov	r2, r0
    memcpy((void*)I2C_REGS[TRANSMIT], (void*)packet, len);
1000e2a6:	68e0      	ldr	r0, [r4, #12]
1000e2a8:	f005 f8fa 	bl	100134a0 <memcpy>
    I2C_REGS[TRANSMIT_DONE][0] = false;
1000e2ac:	6923      	ldr	r3, [r4, #16]
1000e2ae:	2200      	movs	r2, #0
1000e2b0:	701a      	strb	r2, [r3, #0]

    // Wait for ack from AP
    while(!I2C_REGS[TRANSMIT_DONE][0]);
1000e2b2:	6922      	ldr	r2, [r4, #16]
1000e2b4:	7813      	ldrb	r3, [r2, #0]
1000e2b6:	2b00      	cmp	r3, #0
1000e2b8:	d0fc      	beq.n	1000e2b4 <send_packet_and_ack+0x18>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e2ba:	6863      	ldr	r3, [r4, #4]
1000e2bc:	2200      	movs	r2, #0
1000e2be:	701a      	strb	r2, [r3, #0]
}
1000e2c0:	bd10      	pop	{r4, pc}
1000e2c2:	bf00      	nop
1000e2c4:	20000018 	.word	0x20000018

1000e2c8 <wait_and_receive_packet>:
 * @param packet: uint8_t*, message received
 * 
 * This function waits for a new message to be available from the AP,
 * once the message is available it is returned in the buffer pointer to by packet 
*/
uint8_t wait_and_receive_packet(uint8_t* packet) {
1000e2c8:	b510      	push	{r4, lr}
    while(!I2C_REGS[RECEIVE_DONE][0]);
1000e2ca:	4907      	ldr	r1, [pc, #28]	@ (1000e2e8 <wait_and_receive_packet+0x20>)
1000e2cc:	684a      	ldr	r2, [r1, #4]
1000e2ce:	7813      	ldrb	r3, [r2, #0]
1000e2d0:	2b00      	cmp	r3, #0
1000e2d2:	d0fc      	beq.n	1000e2ce <wait_and_receive_packet+0x6>

    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e2d4:	688b      	ldr	r3, [r1, #8]
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e2d6:	6809      	ldr	r1, [r1, #0]
    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e2d8:	781c      	ldrb	r4, [r3, #0]
1000e2da:	b2e4      	uxtb	r4, r4
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e2dc:	4622      	mov	r2, r4
1000e2de:	f005 f8df 	bl	100134a0 <memcpy>

    return len;
}
1000e2e2:	4620      	mov	r0, r4
1000e2e4:	bd10      	pop	{r4, pc}
1000e2e6:	bf00      	nop
1000e2e8:	20000018 	.word	0x20000018

1000e2ec <boot>:

/******************************* FUNCTION DEFINITIONS *********************************/

// Example boot sequence
// Your design does not need to change this
void boot() {
1000e2ec:	b508      	push	{r3, lr}
    #ifdef POST_BOOT
        POST_BOOT
    #else
    // Anything after this macro can be changed by your design
    // but will not be run on provisioned systems
    LED_Off(LED1);
1000e2ee:	2000      	movs	r0, #0
1000e2f0:	f000 fafc 	bl	1000e8ec <LED_Off>
    LED_Off(LED2);
1000e2f4:	2001      	movs	r0, #1
1000e2f6:	f000 faf9 	bl	1000e8ec <LED_Off>
    LED_Off(LED3);
1000e2fa:	2002      	movs	r0, #2
1000e2fc:	f000 faf6 	bl	1000e8ec <LED_Off>
    // LED loop to show that boot occurred
    while (1) {
        LED_On(LED1);
        MXC_Delay(500000);
1000e300:	4c12      	ldr	r4, [pc, #72]	@ (1000e34c <boot+0x60>)
        LED_On(LED1);
1000e302:	2000      	movs	r0, #0
1000e304:	f000 fad2 	bl	1000e8ac <LED_On>
        MXC_Delay(500000);
1000e308:	4620      	mov	r0, r4
1000e30a:	f000 fced 	bl	1000ece8 <MXC_Delay>
        LED_On(LED2);
1000e30e:	2001      	movs	r0, #1
1000e310:	f000 facc 	bl	1000e8ac <LED_On>
        MXC_Delay(500000);
1000e314:	4620      	mov	r0, r4
1000e316:	f000 fce7 	bl	1000ece8 <MXC_Delay>
        LED_On(LED3);
1000e31a:	2002      	movs	r0, #2
1000e31c:	f000 fac6 	bl	1000e8ac <LED_On>
        MXC_Delay(500000);
1000e320:	4620      	mov	r0, r4
1000e322:	f000 fce1 	bl	1000ece8 <MXC_Delay>
        LED_Off(LED1);
1000e326:	2000      	movs	r0, #0
1000e328:	f000 fae0 	bl	1000e8ec <LED_Off>
        MXC_Delay(500000);
1000e32c:	4620      	mov	r0, r4
1000e32e:	f000 fcdb 	bl	1000ece8 <MXC_Delay>
        LED_Off(LED2);
1000e332:	2001      	movs	r0, #1
1000e334:	f000 fada 	bl	1000e8ec <LED_Off>
        MXC_Delay(500000);
1000e338:	4620      	mov	r0, r4
1000e33a:	f000 fcd5 	bl	1000ece8 <MXC_Delay>
        LED_Off(LED3);
1000e33e:	2002      	movs	r0, #2
1000e340:	f000 fad4 	bl	1000e8ec <LED_Off>
        MXC_Delay(500000);
1000e344:	4620      	mov	r0, r4
1000e346:	f000 fccf 	bl	1000ece8 <MXC_Delay>
    while (1) {
1000e34a:	e7da      	b.n	1000e302 <boot+0x16>
1000e34c:	0007a120 	.word	0x0007a120

1000e350 <process_boot>:

void process_boot() {
    // The AP requested a boot. Set `component_boot` for the main loop and
    // respond with the boot message
    uint8_t len = strlen(COMPONENT_BOOT_MSG) + 1;
    memcpy((void*)transmit_buffer, COMPONENT_BOOT_MSG, len);
1000e350:	4b06      	ldr	r3, [pc, #24]	@ (1000e36c <process_boot+0x1c>)
1000e352:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
void process_boot() {
1000e356:	b510      	push	{r4, lr}
    memcpy((void*)transmit_buffer, COMPONENT_BOOT_MSG, len);
1000e358:	4c05      	ldr	r4, [pc, #20]	@ (1000e370 <process_boot+0x20>)
1000e35a:	4623      	mov	r3, r4
1000e35c:	c303      	stmia	r3!, {r0, r1}
    send_packet_and_ack(len, transmit_buffer);
1000e35e:	4621      	mov	r1, r4
1000e360:	2009      	movs	r0, #9
    memcpy((void*)transmit_buffer, COMPONENT_BOOT_MSG, len);
1000e362:	701a      	strb	r2, [r3, #0]
    send_packet_and_ack(len, transmit_buffer);
1000e364:	f7ff ff9a 	bl	1000e29c <send_packet_and_ack>
    // Call the boot function
    boot();
1000e368:	f7ff ffc0 	bl	1000e2ec <boot>
1000e36c:	10018ea0 	.word	0x10018ea0
1000e370:	2000081c 	.word	0x2000081c

1000e374 <component_process_cmd>:
void component_process_cmd() {
1000e374:	b510      	push	{r4, lr}
    switch (command->opcode) {
1000e376:	4b15      	ldr	r3, [pc, #84]	@ (1000e3cc <component_process_cmd+0x58>)
1000e378:	7819      	ldrb	r1, [r3, #0]
1000e37a:	1e4b      	subs	r3, r1, #1
void component_process_cmd() {
1000e37c:	b082      	sub	sp, #8
    switch (command->opcode) {
1000e37e:	2b03      	cmp	r3, #3
1000e380:	d81d      	bhi.n	1000e3be <component_process_cmd+0x4a>
1000e382:	e8df f003 	tbb	[pc, r3]
1000e386:	0202      	.short	0x0202
1000e388:	0b1a      	.short	0x0b1a
}

void process_validate() {
    // The AP requested a validation. Respond with the Component ID
    validate_message* packet = (validate_message*) transmit_buffer;
    packet->component_id = COMPONENT_ID;
1000e38a:	4911      	ldr	r1, [pc, #68]	@ (1000e3d0 <component_process_cmd+0x5c>)
1000e38c:	4b11      	ldr	r3, [pc, #68]	@ (1000e3d4 <component_process_cmd+0x60>)
1000e38e:	600b      	str	r3, [r1, #0]
    send_packet_and_ack(sizeof(validate_message), transmit_buffer);
1000e390:	2004      	movs	r0, #4
}
1000e392:	b002      	add	sp, #8
1000e394:	e8bd 4010 	ldmia.w	sp!, {r4, lr}

void process_attest() {
    // The AP requested attestation. Respond with the attestation data
    uint8_t len = sprintf((char*)transmit_buffer, "LOC>%s\nDATE>%s\nCUST>%s\n",
                ATTESTATION_LOC, ATTESTATION_DATE, ATTESTATION_CUSTOMER) + 1;
    send_packet_and_ack(len, transmit_buffer);
1000e398:	f7ff bf80 	b.w	1000e29c <send_packet_and_ack>
    uint8_t len = sprintf((char*)transmit_buffer, "LOC>%s\nDATE>%s\nCUST>%s\n",
1000e39c:	4c0e      	ldr	r4, [pc, #56]	@ (1000e3d8 <component_process_cmd+0x64>)
1000e39e:	490f      	ldr	r1, [pc, #60]	@ (1000e3dc <component_process_cmd+0x68>)
1000e3a0:	4b0f      	ldr	r3, [pc, #60]	@ (1000e3e0 <component_process_cmd+0x6c>)
1000e3a2:	4a10      	ldr	r2, [pc, #64]	@ (1000e3e4 <component_process_cmd+0x70>)
1000e3a4:	9400      	str	r4, [sp, #0]
1000e3a6:	480a      	ldr	r0, [pc, #40]	@ (1000e3d0 <component_process_cmd+0x5c>)
1000e3a8:	f001 fd8c 	bl	1000fec4 <sprintf>
    send_packet_and_ack(len, transmit_buffer);
1000e3ac:	4908      	ldr	r1, [pc, #32]	@ (1000e3d0 <component_process_cmd+0x5c>)
1000e3ae:	2025      	movs	r0, #37	@ 0x25
}
1000e3b0:	b002      	add	sp, #8
1000e3b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    send_packet_and_ack(len, transmit_buffer);
1000e3b6:	f7ff bf71 	b.w	1000e29c <send_packet_and_ack>
        process_boot();
1000e3ba:	f7ff ffc9 	bl	1000e350 <process_boot>
        printf("Error: Unrecognized command received %d\n", command->opcode);
1000e3be:	480a      	ldr	r0, [pc, #40]	@ (1000e3e8 <component_process_cmd+0x74>)
}
1000e3c0:	b002      	add	sp, #8
1000e3c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        printf("Error: Unrecognized command received %d\n", command->opcode);
1000e3c6:	f003 bf0b 	b.w	100121e0 <printf>
1000e3ca:	bf00      	nop
1000e3cc:	2000091c 	.word	0x2000091c
1000e3d0:	2000081c 	.word	0x2000081c
1000e3d4:	99887720 	.word	0x99887720
1000e3d8:	10018ed8 	.word	0x10018ed8
1000e3dc:	10018ec0 	.word	0x10018ec0
1000e3e0:	10018eac 	.word	0x10018eac
1000e3e4:	10018eb4 	.word	0x10018eb4
1000e3e8:	10018ee0 	.word	0x10018ee0

1000e3ec <main>:
}

/*********************************** MAIN *************************************/

int main(void) {
1000e3ec:	b510      	push	{r4, lr}
    printf("Component Started\n");
1000e3ee:	4809      	ldr	r0, [pc, #36]	@ (1000e414 <main+0x28>)
1000e3f0:	f003 ff56 	bl	100122a0 <puts>
  \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
1000e3f4:	b662      	cpsie	i
    
    // Enable Global Interrupts
    __enable_irq();
    
    // Initialize Component
    i2c_addr_t addr = component_id_to_i2c_addr(COMPONENT_ID);
1000e3f6:	4808      	ldr	r0, [pc, #32]	@ (1000e418 <main+0x2c>)
    board_link_init(addr);
    
    LED_On(LED2);

    while (1) {
        wait_and_receive_packet(receive_buffer);
1000e3f8:	4c08      	ldr	r4, [pc, #32]	@ (1000e41c <main+0x30>)
    i2c_addr_t addr = component_id_to_i2c_addr(COMPONENT_ID);
1000e3fa:	f7ff ff4d 	bl	1000e298 <component_id_to_i2c_addr>
    board_link_init(addr);
1000e3fe:	f7ff ff49 	bl	1000e294 <board_link_init>
    LED_On(LED2);
1000e402:	2001      	movs	r0, #1
1000e404:	f000 fa52 	bl	1000e8ac <LED_On>
        wait_and_receive_packet(receive_buffer);
1000e408:	4620      	mov	r0, r4
1000e40a:	f7ff ff5d 	bl	1000e2c8 <wait_and_receive_packet>

        component_process_cmd();
1000e40e:	f7ff ffb1 	bl	1000e374 <component_process_cmd>
    while (1) {
1000e412:	e7f9      	b.n	1000e408 <main+0x1c>
1000e414:	10018f0c 	.word	0x10018f0c
1000e418:	99887720 	.word	0x99887720
1000e41c:	2000091c 	.word	0x2000091c

1000e420 <i2c_simple_isr>:
    static int READ_INDEX = 0;
    static int WRITE_INDEX = 0;
    static ECTF_I2C_REGS ACTIVE_REG = RECEIVE;

    // Read interrupt flags
    uint32_t Flags = I2C_INTERFACE->intfl0;
1000e420:	4890      	ldr	r0, [pc, #576]	@ (1000e664 <i2c_simple_isr+0x244>)
void i2c_simple_isr (void) {
1000e422:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t Flags = I2C_INTERFACE->intfl0;
1000e424:	6884      	ldr	r4, [r0, #8]
    
    // Transaction over interrupt
    if (Flags & MXC_F_I2C_INTFL0_STOP) {
1000e426:	0663      	lsls	r3, r4, #25
1000e428:	d549      	bpl.n	1000e4be <i2c_simple_isr+0x9e>
        
        // Ready any remaining data
        if (WRITE_START == true) {
1000e42a:	4e8f      	ldr	r6, [pc, #572]	@ (1000e668 <i2c_simple_isr+0x248>)
1000e42c:	7833      	ldrb	r3, [r6, #0]
1000e42e:	2b00      	cmp	r3, #0
1000e430:	f040 80cb 	bne.w	1000e5ca <i2c_simple_isr+0x1aa>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
            WRITE_START = false;
        }
        if (ACTIVE_REG <= MAX_REG) {
1000e434:	4d8d      	ldr	r5, [pc, #564]	@ (1000e66c <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e436:	488b      	ldr	r0, [pc, #556]	@ (1000e664 <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e438:	782b      	ldrb	r3, [r5, #0]
1000e43a:	2b05      	cmp	r3, #5
1000e43c:	d81b      	bhi.n	1000e476 <i2c_simple_isr+0x56>
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e43e:	f000 ffd3 	bl	1000f3e8 <MXC_I2C_GetRXFIFOAvailable>
            if (available < (I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX)) {
1000e442:	7829      	ldrb	r1, [r5, #0]
1000e444:	4b8a      	ldr	r3, [pc, #552]	@ (1000e670 <i2c_simple_isr+0x250>)
1000e446:	4d8b      	ldr	r5, [pc, #556]	@ (1000e674 <i2c_simple_isr+0x254>)
1000e448:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1000e44c:	682b      	ldr	r3, [r5, #0]
1000e44e:	1ad2      	subs	r2, r2, r3
1000e450:	4282      	cmp	r2, r0
1000e452:	f340 80da 	ble.w	1000e60a <i2c_simple_isr+0x1ea>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e456:	4a88      	ldr	r2, [pc, #544]	@ (1000e678 <i2c_simple_isr+0x258>)
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e458:	4882      	ldr	r0, [pc, #520]	@ (1000e664 <i2c_simple_isr+0x244>)
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e45a:	f852 7021 	ldr.w	r7, [r2, r1, lsl #2]
1000e45e:	441f      	add	r7, r3
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e460:	f000 ffc2 	bl	1000f3e8 <MXC_I2C_GetRXFIFOAvailable>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e464:	4639      	mov	r1, r7
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e466:	4602      	mov	r2, r0
            }
            else {
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e468:	487e      	ldr	r0, [pc, #504]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e46a:	f000 ffbb 	bl	1000f3e4 <MXC_I2C_ReadRXFIFO>
1000e46e:	682b      	ldr	r3, [r5, #0]
1000e470:	4403      	add	r3, r0
1000e472:	602b      	str	r3, [r5, #0]
1000e474:	e002      	b.n	1000e47c <i2c_simple_isr+0x5c>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
                    I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX);
            }
        } else {
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e476:	f000 ffbd 	bl	1000f3f4 <MXC_I2C_ClearRXFIFO>
1000e47a:	4d7e      	ldr	r5, [pc, #504]	@ (1000e674 <i2c_simple_isr+0x254>)
        }

        // Disable bulk send/receive interrupts
        MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e47c:	4879      	ldr	r0, [pc, #484]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e47e:	2200      	movs	r2, #0
1000e480:	2110      	movs	r1, #16
1000e482:	f000 ffbf 	bl	1000f404 <MXC_I2C_DisableInt>
        MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e486:	4877      	ldr	r0, [pc, #476]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e488:	2200      	movs	r2, #0
1000e48a:	2120      	movs	r1, #32
1000e48c:	f000 ffba 	bl	1000f404 <MXC_I2C_DisableInt>

        // Clear FIFOs if full
        if (MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE) != 0) {
1000e490:	4874      	ldr	r0, [pc, #464]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e492:	f000 ffa9 	bl	1000f3e8 <MXC_I2C_GetRXFIFOAvailable>
1000e496:	2800      	cmp	r0, #0
1000e498:	f040 80df 	bne.w	1000e65a <i2c_simple_isr+0x23a>
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
        }
        if (MXC_I2C_GetTXFIFOAvailable(I2C_INTERFACE) != 8) {
1000e49c:	4871      	ldr	r0, [pc, #452]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e49e:	f000 ffa7 	bl	1000f3f0 <MXC_I2C_GetTXFIFOAvailable>
1000e4a2:	2808      	cmp	r0, #8
1000e4a4:	d002      	beq.n	1000e4ac <i2c_simple_isr+0x8c>
            MXC_I2C_ClearTXFIFO(I2C_INTERFACE);
1000e4a6:	486f      	ldr	r0, [pc, #444]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e4a8:	f000 ffa6 	bl	1000f3f8 <MXC_I2C_ClearTXFIFO>
        }

        // Reset state
        READ_INDEX = 0;
1000e4ac:	4b73      	ldr	r3, [pc, #460]	@ (1000e67c <i2c_simple_isr+0x25c>)
        WRITE_INDEX = 0;
        WRITE_START = false;

        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e4ae:	486d      	ldr	r0, [pc, #436]	@ (1000e664 <i2c_simple_isr+0x244>)
        READ_INDEX = 0;
1000e4b0:	2200      	movs	r2, #0
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e4b2:	2140      	movs	r1, #64	@ 0x40
        WRITE_INDEX = 0;
1000e4b4:	602a      	str	r2, [r5, #0]
        READ_INDEX = 0;
1000e4b6:	601a      	str	r2, [r3, #0]
        WRITE_START = false;
1000e4b8:	7032      	strb	r2, [r6, #0]
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e4ba:	f000 ff9f 	bl	1000f3fc <MXC_I2C_ClearFlags>
    }

    // TX Fifo Threshold Met on Read
    if (Flags & MXC_F_I2C_INTEN0_TX_THD && (I2C_INTERFACE->inten0 & MXC_F_I2C_INTEN0_TX_THD)) {
1000e4be:	06a7      	lsls	r7, r4, #26
1000e4c0:	d503      	bpl.n	1000e4ca <i2c_simple_isr+0xaa>
1000e4c2:	4868      	ldr	r0, [pc, #416]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e4c4:	68c3      	ldr	r3, [r0, #12]
1000e4c6:	069e      	lsls	r6, r3, #26
1000e4c8:	d433      	bmi.n	1000e532 <i2c_simple_isr+0x112>
        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_THD, 0);
    }

    // Read from Peripheral from Controller Match
    if (Flags & MXC_F_I2C_INTFL0_WR_ADDR_MATCH) {
1000e4ca:	0220      	lsls	r0, r4, #8
1000e4cc:	d43f      	bmi.n	1000e54e <i2c_simple_isr+0x12e>
            }
        }
    }

    // Write to Peripheral from Controller Match
    if (Flags & MXC_F_I2C_INTFL0_RD_ADDR_MATCH) {
1000e4ce:	0262      	lsls	r2, r4, #9
1000e4d0:	d46c      	bmi.n	1000e5ac <i2c_simple_isr+0x18c>
        // Clear flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
    }

    // RX Fifo Threshold Met on Write
    if (Flags & MXC_F_I2C_INTEN0_RX_THD) {
1000e4d2:	06e3      	lsls	r3, r4, #27
1000e4d4:	d511      	bpl.n	1000e4fa <i2c_simple_isr+0xda>
        // We always write a register before writing data so select register
        if (WRITE_START == true) {
1000e4d6:	4c64      	ldr	r4, [pc, #400]	@ (1000e668 <i2c_simple_isr+0x248>)
1000e4d8:	7823      	ldrb	r3, [r4, #0]
1000e4da:	2b00      	cmp	r3, #0
1000e4dc:	d17c      	bne.n	1000e5d8 <i2c_simple_isr+0x1b8>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
            WRITE_START = false;
        }
        // Read remaining data
        if (ACTIVE_REG <= MAX_REG) {
1000e4de:	4c63      	ldr	r4, [pc, #396]	@ (1000e66c <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e4e0:	4860      	ldr	r0, [pc, #384]	@ (1000e664 <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e4e2:	7823      	ldrb	r3, [r4, #0]
1000e4e4:	2b05      	cmp	r3, #5
1000e4e6:	d909      	bls.n	1000e4fc <i2c_simple_isr+0xdc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
                    I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX);
            }
        // Clear out FIFO if invalid register specified
        } else {
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e4e8:	f000 ff84 	bl	1000f3f4 <MXC_I2C_ClearRXFIFO>
        }

        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RX_THD, 0);
    }
}
1000e4ec:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RX_THD, 0);
1000e4f0:	485c      	ldr	r0, [pc, #368]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e4f2:	2200      	movs	r2, #0
1000e4f4:	2110      	movs	r1, #16
1000e4f6:	f000 bf81 	b.w	1000f3fc <MXC_I2C_ClearFlags>
}
1000e4fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e4fc:	f000 ff74 	bl	1000f3e8 <MXC_I2C_GetRXFIFOAvailable>
            if (available < (I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX)) {
1000e500:	7821      	ldrb	r1, [r4, #0]
1000e502:	4a5b      	ldr	r2, [pc, #364]	@ (1000e670 <i2c_simple_isr+0x250>)
1000e504:	4c5b      	ldr	r4, [pc, #364]	@ (1000e674 <i2c_simple_isr+0x254>)
1000e506:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
1000e50a:	6823      	ldr	r3, [r4, #0]
1000e50c:	1ad2      	subs	r2, r2, r3
1000e50e:	4282      	cmp	r2, r0
1000e510:	dd70      	ble.n	1000e5f4 <i2c_simple_isr+0x1d4>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e512:	4a59      	ldr	r2, [pc, #356]	@ (1000e678 <i2c_simple_isr+0x258>)
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e514:	4853      	ldr	r0, [pc, #332]	@ (1000e664 <i2c_simple_isr+0x244>)
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e516:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
1000e51a:	441d      	add	r5, r3
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e51c:	f000 ff64 	bl	1000f3e8 <MXC_I2C_GetRXFIFOAvailable>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e520:	4629      	mov	r1, r5
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e522:	4602      	mov	r2, r0
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e524:	484f      	ldr	r0, [pc, #316]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e526:	f000 ff5d 	bl	1000f3e4 <MXC_I2C_ReadRXFIFO>
1000e52a:	6823      	ldr	r3, [r4, #0]
1000e52c:	4403      	add	r3, r0
1000e52e:	6023      	str	r3, [r4, #0]
1000e530:	e7dc      	b.n	1000e4ec <i2c_simple_isr+0xcc>
        if (Flags & MXC_F_I2C_INTFL0_TX_LOCKOUT) {
1000e532:	0425      	lsls	r5, r4, #16
1000e534:	f100 808b 	bmi.w	1000e64e <i2c_simple_isr+0x22e>
        if (ACTIVE_REG <= MAX_REG) {
1000e538:	4d4c      	ldr	r5, [pc, #304]	@ (1000e66c <i2c_simple_isr+0x24c>)
1000e53a:	782b      	ldrb	r3, [r5, #0]
1000e53c:	2b05      	cmp	r3, #5
1000e53e:	d969      	bls.n	1000e614 <i2c_simple_isr+0x1f4>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_THD, 0);
1000e540:	4848      	ldr	r0, [pc, #288]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e542:	2200      	movs	r2, #0
1000e544:	2120      	movs	r1, #32
1000e546:	f000 ff59 	bl	1000f3fc <MXC_I2C_ClearFlags>
    if (Flags & MXC_F_I2C_INTFL0_WR_ADDR_MATCH) {
1000e54a:	0220      	lsls	r0, r4, #8
1000e54c:	d5bf      	bpl.n	1000e4ce <i2c_simple_isr+0xae>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_WR_ADDR_MATCH, 0);
1000e54e:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
1000e552:	4844      	ldr	r0, [pc, #272]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e554:	2200      	movs	r2, #0
1000e556:	f000 ff51 	bl	1000f3fc <MXC_I2C_ClearFlags>
        if (Flags & MXC_F_I2C_INTFL0_TX_LOCKOUT) {
1000e55a:	0421      	lsls	r1, r4, #16
1000e55c:	d5b7      	bpl.n	1000e4ce <i2c_simple_isr+0xae>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e55e:	4d43      	ldr	r5, [pc, #268]	@ (1000e66c <i2c_simple_isr+0x24c>)
            MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_LOCKOUT, 0);
1000e560:	4840      	ldr	r0, [pc, #256]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e562:	2200      	movs	r2, #0
1000e564:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
1000e568:	f000 ff48 	bl	1000f3fc <MXC_I2C_ClearFlags>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e56c:	483d      	ldr	r0, [pc, #244]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e56e:	2201      	movs	r2, #1
1000e570:	4629      	mov	r1, r5
1000e572:	f000 ff37 	bl	1000f3e4 <MXC_I2C_ReadRXFIFO>
            if (ACTIVE_REG <= MAX_REG) {
1000e576:	782b      	ldrb	r3, [r5, #0]
1000e578:	2b05      	cmp	r3, #5
1000e57a:	d8a8      	bhi.n	1000e4ce <i2c_simple_isr+0xae>
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e57c:	4e3c      	ldr	r6, [pc, #240]	@ (1000e670 <i2c_simple_isr+0x250>)
1000e57e:	4a3e      	ldr	r2, [pc, #248]	@ (1000e678 <i2c_simple_isr+0x258>)
1000e580:	4838      	ldr	r0, [pc, #224]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e582:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
1000e586:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
1000e58a:	f000 ff2f 	bl	1000f3ec <MXC_I2C_WriteTXFIFO>
1000e58e:	4b3b      	ldr	r3, [pc, #236]	@ (1000e67c <i2c_simple_isr+0x25c>)
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e590:	782a      	ldrb	r2, [r5, #0]
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e592:	6819      	ldr	r1, [r3, #0]
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e594:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e598:	4408      	add	r0, r1
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e59a:	4290      	cmp	r0, r2
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e59c:	6018      	str	r0, [r3, #0]
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e59e:	da96      	bge.n	1000e4ce <i2c_simple_isr+0xae>
                    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e5a0:	4830      	ldr	r0, [pc, #192]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e5a2:	2200      	movs	r2, #0
1000e5a4:	2120      	movs	r1, #32
1000e5a6:	f000 ff2b 	bl	1000f400 <MXC_I2C_EnableInt>
1000e5aa:	e790      	b.n	1000e4ce <i2c_simple_isr+0xae>
        WRITE_START = true;
1000e5ac:	4b2e      	ldr	r3, [pc, #184]	@ (1000e668 <i2c_simple_isr+0x248>)
        MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e5ae:	482d      	ldr	r0, [pc, #180]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e5b0:	2200      	movs	r2, #0
1000e5b2:	2110      	movs	r1, #16
        WRITE_START = true;
1000e5b4:	2501      	movs	r5, #1
1000e5b6:	701d      	strb	r5, [r3, #0]
        MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e5b8:	f000 ff22 	bl	1000f400 <MXC_I2C_EnableInt>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
1000e5bc:	4829      	ldr	r0, [pc, #164]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e5be:	2200      	movs	r2, #0
1000e5c0:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
1000e5c4:	f000 ff1a 	bl	1000f3fc <MXC_I2C_ClearFlags>
1000e5c8:	e783      	b.n	1000e4d2 <i2c_simple_isr+0xb2>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e5ca:	4928      	ldr	r1, [pc, #160]	@ (1000e66c <i2c_simple_isr+0x24c>)
1000e5cc:	2201      	movs	r2, #1
1000e5ce:	f000 ff09 	bl	1000f3e4 <MXC_I2C_ReadRXFIFO>
            WRITE_START = false;
1000e5d2:	2300      	movs	r3, #0
1000e5d4:	7033      	strb	r3, [r6, #0]
1000e5d6:	e72d      	b.n	1000e434 <i2c_simple_isr+0x14>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e5d8:	4924      	ldr	r1, [pc, #144]	@ (1000e66c <i2c_simple_isr+0x24c>)
1000e5da:	4822      	ldr	r0, [pc, #136]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e5dc:	2201      	movs	r2, #1
1000e5de:	f000 ff01 	bl	1000f3e4 <MXC_I2C_ReadRXFIFO>
            WRITE_START = false;
1000e5e2:	2300      	movs	r3, #0
1000e5e4:	7023      	strb	r3, [r4, #0]
        if (ACTIVE_REG <= MAX_REG) {
1000e5e6:	4c21      	ldr	r4, [pc, #132]	@ (1000e66c <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e5e8:	481e      	ldr	r0, [pc, #120]	@ (1000e664 <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e5ea:	7823      	ldrb	r3, [r4, #0]
1000e5ec:	2b05      	cmp	r3, #5
1000e5ee:	f63f af7b 	bhi.w	1000e4e8 <i2c_simple_isr+0xc8>
1000e5f2:	e783      	b.n	1000e4fc <i2c_simple_isr+0xdc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e5f4:	4820      	ldr	r0, [pc, #128]	@ (1000e678 <i2c_simple_isr+0x258>)
1000e5f6:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e5fa:	481a      	ldr	r0, [pc, #104]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e5fc:	4419      	add	r1, r3
1000e5fe:	f000 fef1 	bl	1000f3e4 <MXC_I2C_ReadRXFIFO>
1000e602:	6823      	ldr	r3, [r4, #0]
1000e604:	4403      	add	r3, r0
1000e606:	6023      	str	r3, [r4, #0]
1000e608:	e770      	b.n	1000e4ec <i2c_simple_isr+0xcc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e60a:	481b      	ldr	r0, [pc, #108]	@ (1000e678 <i2c_simple_isr+0x258>)
1000e60c:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e610:	4419      	add	r1, r3
1000e612:	e729      	b.n	1000e468 <i2c_simple_isr+0x48>
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e614:	4e19      	ldr	r6, [pc, #100]	@ (1000e67c <i2c_simple_isr+0x25c>)
                I2C_REGS_LEN[ACTIVE_REG]-READ_INDEX);
1000e616:	4f16      	ldr	r7, [pc, #88]	@ (1000e670 <i2c_simple_isr+0x250>)
                (volatile unsigned char*)&I2C_REGS[ACTIVE_REG][READ_INDEX],
1000e618:	4917      	ldr	r1, [pc, #92]	@ (1000e678 <i2c_simple_isr+0x258>)
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e61a:	6832      	ldr	r2, [r6, #0]
                (volatile unsigned char*)&I2C_REGS[ACTIVE_REG][READ_INDEX],
1000e61c:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
                I2C_REGS_LEN[ACTIVE_REG]-READ_INDEX);
1000e620:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e624:	480f      	ldr	r0, [pc, #60]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e626:	4411      	add	r1, r2
1000e628:	1a9a      	subs	r2, r3, r2
1000e62a:	f000 fedf 	bl	1000f3ec <MXC_I2C_WriteTXFIFO>
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e62e:	782b      	ldrb	r3, [r5, #0]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e630:	6832      	ldr	r2, [r6, #0]
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e632:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e636:	4410      	add	r0, r2
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e638:	3b01      	subs	r3, #1
1000e63a:	4298      	cmp	r0, r3
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e63c:	6030      	str	r0, [r6, #0]
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e63e:	f47f af7f 	bne.w	1000e540 <i2c_simple_isr+0x120>
                MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e642:	4808      	ldr	r0, [pc, #32]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e644:	2200      	movs	r2, #0
1000e646:	2120      	movs	r1, #32
1000e648:	f000 fedc 	bl	1000f404 <MXC_I2C_DisableInt>
1000e64c:	e778      	b.n	1000e540 <i2c_simple_isr+0x120>
            MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_LOCKOUT, 0);
1000e64e:	2200      	movs	r2, #0
1000e650:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
1000e654:	f000 fed2 	bl	1000f3fc <MXC_I2C_ClearFlags>
1000e658:	e76e      	b.n	1000e538 <i2c_simple_isr+0x118>
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e65a:	4802      	ldr	r0, [pc, #8]	@ (1000e664 <i2c_simple_isr+0x244>)
1000e65c:	f000 feca 	bl	1000f3f4 <MXC_I2C_ClearRXFIFO>
1000e660:	e71c      	b.n	1000e49c <i2c_simple_isr+0x7c>
1000e662:	bf00      	nop
1000e664:	4001e000 	.word	0x4001e000
1000e668:	20000a25 	.word	0x20000a25
1000e66c:	20000a24 	.word	0x20000a24
1000e670:	20000000 	.word	0x20000000
1000e674:	20000a20 	.word	0x20000a20
1000e678:	20000018 	.word	0x20000018
1000e67c:	20000a1c 	.word	0x20000a1c

1000e680 <i2c_simple_peripheral_init>:
int i2c_simple_peripheral_init(uint8_t addr) {
1000e680:	b510      	push	{r4, lr}
1000e682:	4602      	mov	r2, r0
    error = MXC_I2C_Init(I2C_INTERFACE, false, addr);
1000e684:	2100      	movs	r1, #0
1000e686:	481b      	ldr	r0, [pc, #108]	@ (1000e6f4 <i2c_simple_peripheral_init+0x74>)
1000e688:	f000 fe5e 	bl	1000f348 <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
1000e68c:	4604      	mov	r4, r0
1000e68e:	bb60      	cbnz	r0, 1000e6ea <i2c_simple_peripheral_init+0x6a>
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
1000e690:	4919      	ldr	r1, [pc, #100]	@ (1000e6f8 <i2c_simple_peripheral_init+0x78>)
1000e692:	4818      	ldr	r0, [pc, #96]	@ (1000e6f4 <i2c_simple_peripheral_init+0x74>)
1000e694:	f000 fea2 	bl	1000f3dc <MXC_I2C_SetFrequency>
    MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e698:	4816      	ldr	r0, [pc, #88]	@ (1000e6f4 <i2c_simple_peripheral_init+0x74>)
1000e69a:	f000 feab 	bl	1000f3f4 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
1000e69e:	4622      	mov	r2, r4
1000e6a0:	4814      	ldr	r0, [pc, #80]	@ (1000e6f4 <i2c_simple_peripheral_init+0x74>)
1000e6a2:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
1000e6a6:	f000 feab 	bl	1000f400 <MXC_I2C_EnableInt>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_WR_ADDR_MATCH, 0);
1000e6aa:	4622      	mov	r2, r4
1000e6ac:	4811      	ldr	r0, [pc, #68]	@ (1000e6f4 <i2c_simple_peripheral_init+0x74>)
1000e6ae:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
1000e6b2:	f000 fea5 	bl	1000f400 <MXC_I2C_EnableInt>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e6b6:	4622      	mov	r2, r4
1000e6b8:	480e      	ldr	r0, [pc, #56]	@ (1000e6f4 <i2c_simple_peripheral_init+0x74>)
1000e6ba:	2140      	movs	r1, #64	@ 0x40
1000e6bc:	f000 fea0 	bl	1000f400 <MXC_I2C_EnableInt>
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), i2c_simple_isr);
1000e6c0:	490e      	ldr	r1, [pc, #56]	@ (1000e6fc <i2c_simple_peripheral_init+0x7c>)
1000e6c2:	2024      	movs	r0, #36	@ 0x24
1000e6c4:	f000 fb4a 	bl	1000ed5c <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000e6c8:	4b0d      	ldr	r3, [pc, #52]	@ (1000e700 <i2c_simple_peripheral_init+0x80>)
1000e6ca:	2210      	movs	r2, #16
1000e6cc:	605a      	str	r2, [r3, #4]
    MXC_I2C_ClearFlags(I2C_INTERFACE, 0xFFFFFFFF, 0xFFFFFFFF);
1000e6ce:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1000e6d2:	4611      	mov	r1, r2
1000e6d4:	4807      	ldr	r0, [pc, #28]	@ (1000e6f4 <i2c_simple_peripheral_init+0x74>)
1000e6d6:	f000 fe91 	bl	1000f3fc <MXC_I2C_ClearFlags>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e6da:	4b0a      	ldr	r3, [pc, #40]	@ (1000e704 <i2c_simple_peripheral_init+0x84>)
1000e6dc:	6859      	ldr	r1, [r3, #4]
1000e6de:	700c      	strb	r4, [r1, #0]
    I2C_REGS[TRANSMIT_DONE][0] = true;
1000e6e0:	691b      	ldr	r3, [r3, #16]
1000e6e2:	2201      	movs	r2, #1
1000e6e4:	701a      	strb	r2, [r3, #0]
}
1000e6e6:	4620      	mov	r0, r4
1000e6e8:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
1000e6ea:	4807      	ldr	r0, [pc, #28]	@ (1000e708 <i2c_simple_peripheral_init+0x88>)
1000e6ec:	f003 fdd8 	bl	100122a0 <puts>
}
1000e6f0:	4620      	mov	r0, r4
1000e6f2:	bd10      	pop	{r4, pc}
1000e6f4:	4001e000 	.word	0x4001e000
1000e6f8:	000186a0 	.word	0x000186a0
1000e6fc:	1000e421 	.word	0x1000e421
1000e700:	e000e100 	.word	0xe000e100
1000e704:	20000018 	.word	0x20000018
1000e708:	10018f20 	.word	0x10018f20

1000e70c <mxc_assert>:
};
const unsigned int num_leds = (sizeof(led_pin) / sizeof(mxc_gpio_cfg_t));

/******************************************************************************/
void mxc_assert(const char *expr, const char *file, int line)
{
1000e70c:	b508      	push	{r3, lr}
1000e70e:	4603      	mov	r3, r0
    printf("MXC_ASSERT %s #%d: (%s)\n", file, line, expr);
1000e710:	4801      	ldr	r0, [pc, #4]	@ (1000e718 <mxc_assert+0xc>)
1000e712:	f003 fd65 	bl	100121e0 <printf>

    while (1) {}
1000e716:	e7fe      	b.n	1000e716 <mxc_assert+0xa>
1000e718:	10018f3c 	.word	0x10018f3c

1000e71c <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
1000e71c:	2000      	movs	r0, #0
1000e71e:	f000 bd79 	b.w	1000f214 <MXC_GPIO_Handler>
1000e722:	bf00      	nop

1000e724 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
1000e724:	2001      	movs	r0, #1
1000e726:	f000 bd75 	b.w	1000f214 <MXC_GPIO_Handler>
1000e72a:	bf00      	nop

1000e72c <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
1000e72c:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000e72e:	2000      	movs	r0, #0
1000e730:	f000 fb5c 	bl	1000edec <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000e734:	2001      	movs	r0, #1
1000e736:	f000 fb59 	bl	1000edec <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000e73a:	2040      	movs	r0, #64	@ 0x40
1000e73c:	f000 fb56 	bl	1000edec <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
1000e740:	4b10      	ldr	r3, [pc, #64]	@ (1000e784 <Board_Init+0x58>)
1000e742:	2202      	movs	r2, #2
1000e744:	6818      	ldr	r0, [r3, #0]
1000e746:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
1000e74a:	f001 f891 	bl	1000f870 <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
1000e74e:	1e04      	subs	r4, r0, #0
1000e750:	db0c      	blt.n	1000e76c <Board_Init+0x40>
    if ((err = PB_Init()) != E_NO_ERROR) {
1000e752:	f000 f8eb 	bl	1000e92c <PB_Init>
1000e756:	b958      	cbnz	r0, 1000e770 <Board_Init+0x44>
    if ((err = LED_Init()) != E_NO_ERROR) {
1000e758:	f000 f888 	bl	1000e86c <LED_Init>
1000e75c:	4604      	mov	r4, r0
1000e75e:	b960      	cbnz	r0, 1000e77a <Board_Init+0x4e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000e760:	4b09      	ldr	r3, [pc, #36]	@ (1000e788 <Board_Init+0x5c>)
    MXC_Delay(200000);
1000e762:	480a      	ldr	r0, [pc, #40]	@ (1000e78c <Board_Init+0x60>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000e764:	2243      	movs	r2, #67	@ 0x43
1000e766:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
1000e768:	f000 fabe 	bl	1000ece8 <MXC_Delay>
}
1000e76c:	4620      	mov	r0, r4
1000e76e:	bd10      	pop	{r4, pc}
        MXC_ASSERT_FAIL();
1000e770:	4907      	ldr	r1, [pc, #28]	@ (1000e790 <Board_Init+0x64>)
1000e772:	4808      	ldr	r0, [pc, #32]	@ (1000e794 <Board_Init+0x68>)
1000e774:	226f      	movs	r2, #111	@ 0x6f
1000e776:	f7ff ffc9 	bl	1000e70c <mxc_assert>
        MXC_ASSERT_FAIL();
1000e77a:	4905      	ldr	r1, [pc, #20]	@ (1000e790 <Board_Init+0x64>)
1000e77c:	4805      	ldr	r0, [pc, #20]	@ (1000e794 <Board_Init+0x68>)
1000e77e:	2274      	movs	r2, #116	@ 0x74
1000e780:	f7ff ffc4 	bl	1000e70c <mxc_assert>
1000e784:	20000030 	.word	0x20000030
1000e788:	40004400 	.word	0x40004400
1000e78c:	00030d40 	.word	0x00030d40
1000e790:	10018f58 	.word	0x10018f58
1000e794:	10018fa0 	.word	0x10018fa0

1000e798 <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
1000e798:	bf00      	nop
}
1000e79a:	4770      	bx	lr

1000e79c <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
1000e79c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e7a0:	4770      	bx	lr
1000e7a2:	bf00      	nop

1000e7a4 <_isatty>:
int _isatty(int file)
1000e7a4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e7a8:	4770      	bx	lr
1000e7aa:	bf00      	nop

1000e7ac <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
1000e7ac:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e7b0:	4770      	bx	lr
1000e7b2:	bf00      	nop

1000e7b4 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
1000e7b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e7b8:	4770      	bx	lr
1000e7ba:	bf00      	nop

1000e7bc <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
1000e7bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
1000e7be:	b9e0      	cbnz	r0, 1000e7fa <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
1000e7c0:	2a00      	cmp	r2, #0
1000e7c2:	dd19      	ble.n	1000e7f8 <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000e7c4:	4d10      	ldr	r5, [pc, #64]	@ (1000e808 <_read+0x4c>)
1000e7c6:	460e      	mov	r6, r1
1000e7c8:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
1000e7ca:	460c      	mov	r4, r1
1000e7cc:	e002      	b.n	1000e7d4 <_read+0x18>
1000e7ce:	42bb      	cmp	r3, r7
1000e7d0:	d00f      	beq.n	1000e7f2 <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
1000e7d2:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000e7d4:	4628      	mov	r0, r5
1000e7d6:	f001 f943 	bl	1000fa60 <MXC_UART_ReadCharacter>
1000e7da:	b2c1      	uxtb	r1, r0
1000e7dc:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
1000e7de:	4628      	mov	r0, r5
1000e7e0:	f001 f940 	bl	1000fa64 <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
1000e7e4:	7822      	ldrb	r2, [r4, #0]
1000e7e6:	2a0d      	cmp	r2, #13
                ptr++;
1000e7e8:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
1000e7ec:	d1ef      	bne.n	1000e7ce <_read+0x12>
                *ptr = '\n';
1000e7ee:	230a      	movs	r3, #10
1000e7f0:	7023      	strb	r3, [r4, #0]
                num++;
1000e7f2:	f1c6 0601 	rsb	r6, r6, #1
1000e7f6:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
1000e7f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
1000e7fa:	f001 fb83 	bl	1000ff04 <__errno>
1000e7fe:	2309      	movs	r3, #9
1000e800:	6003      	str	r3, [r0, #0]
        return -1;
1000e802:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e806:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e808:	40042000 	.word	0x40042000

1000e80c <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
1000e80c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
1000e80e:	1e43      	subs	r3, r0, #1
1000e810:	2b01      	cmp	r3, #1
1000e812:	d821      	bhi.n	1000e858 <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
1000e814:	2a00      	cmp	r2, #0
1000e816:	4617      	mov	r7, r2
1000e818:	dd12      	ble.n	1000e840 <_write+0x34>
1000e81a:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e81c:	4e12      	ldr	r6, [pc, #72]	@ (1000e868 <_write+0x5c>)
1000e81e:	1e4c      	subs	r4, r1, #1
1000e820:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
1000e822:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1000e826:	2b0a      	cmp	r3, #10
1000e828:	d00c      	beq.n	1000e844 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e82a:	480f      	ldr	r0, [pc, #60]	@ (1000e868 <_write+0x5c>)
1000e82c:	f001 f91e 	bl	1000fa6c <MXC_UART_GetTXFIFOAvailable>
1000e830:	2800      	cmp	r0, #0
1000e832:	d0fa      	beq.n	1000e82a <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
1000e834:	7821      	ldrb	r1, [r4, #0]
1000e836:	4630      	mov	r0, r6
1000e838:	f001 f914 	bl	1000fa64 <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
1000e83c:	42ac      	cmp	r4, r5
1000e83e:	d1f0      	bne.n	1000e822 <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
1000e840:	4638      	mov	r0, r7
    }

    return len;
}
1000e842:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e844:	4808      	ldr	r0, [pc, #32]	@ (1000e868 <_write+0x5c>)
1000e846:	f001 f911 	bl	1000fa6c <MXC_UART_GetTXFIFOAvailable>
1000e84a:	2800      	cmp	r0, #0
1000e84c:	d0fa      	beq.n	1000e844 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
1000e84e:	210d      	movs	r1, #13
1000e850:	4630      	mov	r0, r6
1000e852:	f001 f907 	bl	1000fa64 <MXC_UART_WriteCharacter>
1000e856:	e7e8      	b.n	1000e82a <_write+0x1e>
        errno = EBADF;
1000e858:	f001 fb54 	bl	1000ff04 <__errno>
1000e85c:	2309      	movs	r3, #9
1000e85e:	6003      	str	r3, [r0, #0]
        return -1;
1000e860:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e864:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e866:	bf00      	nop
1000e868:	40042000 	.word	0x40042000

1000e86c <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
1000e86c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
1000e86e:	4b0d      	ldr	r3, [pc, #52]	@ (1000e8a4 <LED_Init+0x38>)
1000e870:	681f      	ldr	r7, [r3, #0]
1000e872:	b1a7      	cbz	r7, 1000e89e <LED_Init+0x32>
1000e874:	2500      	movs	r5, #0
1000e876:	4c0c      	ldr	r4, [pc, #48]	@ (1000e8a8 <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
1000e878:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000e87a:	e9d4 0100 	ldrd	r0, r1, [r4]
1000e87e:	f000 fc9b 	bl	1000f1b8 <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
1000e882:	4620      	mov	r0, r4
1000e884:	f000 fb92 	bl	1000efac <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
1000e888:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
1000e88a:	2800      	cmp	r0, #0
1000e88c:	bf18      	it	ne
1000e88e:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
1000e892:	42af      	cmp	r7, r5
1000e894:	f104 040c 	add.w	r4, r4, #12
1000e898:	d1ef      	bne.n	1000e87a <LED_Init+0xe>
}
1000e89a:	4630      	mov	r0, r6
1000e89c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000e89e:	463e      	mov	r6, r7
}
1000e8a0:	4630      	mov	r0, r6
1000e8a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e8a4:	10018fa8 	.word	0x10018fa8
1000e8a8:	10018fac 	.word	0x10018fac

1000e8ac <LED_On>:
    MXC_ASSERT(idx < num_leds);
1000e8ac:	4b0b      	ldr	r3, [pc, #44]	@ (1000e8dc <LED_On+0x30>)
1000e8ae:	681b      	ldr	r3, [r3, #0]
1000e8b0:	4283      	cmp	r3, r0
{
1000e8b2:	b510      	push	{r4, lr}
1000e8b4:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
1000e8b6:	d90b      	bls.n	1000e8d0 <LED_On+0x24>
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000e8b8:	4b09      	ldr	r3, [pc, #36]	@ (1000e8e0 <LED_On+0x34>)
1000e8ba:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000e8be:	eb03 0284 	add.w	r2, r3, r4, lsl #2
1000e8c2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1000e8c6:	6851      	ldr	r1, [r2, #4]
}
1000e8c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000e8cc:	f000 bc8a 	b.w	1000f1e4 <MXC_GPIO_OutClr>
    MXC_ASSERT(idx < num_leds);
1000e8d0:	4904      	ldr	r1, [pc, #16]	@ (1000e8e4 <LED_On+0x38>)
1000e8d2:	4805      	ldr	r0, [pc, #20]	@ (1000e8e8 <LED_On+0x3c>)
1000e8d4:	223b      	movs	r2, #59	@ 0x3b
1000e8d6:	f7ff ff19 	bl	1000e70c <mxc_assert>
1000e8da:	e7ed      	b.n	1000e8b8 <LED_On+0xc>
1000e8dc:	10018fa8 	.word	0x10018fa8
1000e8e0:	10018fac 	.word	0x10018fac
1000e8e4:	10018fec 	.word	0x10018fec
1000e8e8:	10019024 	.word	0x10019024

1000e8ec <LED_Off>:
    MXC_ASSERT(idx < num_leds);
1000e8ec:	4b0b      	ldr	r3, [pc, #44]	@ (1000e91c <LED_Off+0x30>)
1000e8ee:	681b      	ldr	r3, [r3, #0]
1000e8f0:	4283      	cmp	r3, r0
{
1000e8f2:	b510      	push	{r4, lr}
1000e8f4:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
1000e8f6:	d90b      	bls.n	1000e910 <LED_Off+0x24>
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000e8f8:	4b09      	ldr	r3, [pc, #36]	@ (1000e920 <LED_Off+0x34>)
1000e8fa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000e8fe:	eb03 0284 	add.w	r2, r3, r4, lsl #2
1000e902:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1000e906:	6851      	ldr	r1, [r2, #4]
#else
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
#endif
}
1000e908:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000e90c:	f000 bc54 	b.w	1000f1b8 <MXC_GPIO_OutSet>
    MXC_ASSERT(idx < num_leds);
1000e910:	4904      	ldr	r1, [pc, #16]	@ (1000e924 <LED_Off+0x38>)
1000e912:	4805      	ldr	r0, [pc, #20]	@ (1000e928 <LED_Off+0x3c>)
1000e914:	2246      	movs	r2, #70	@ 0x46
1000e916:	f7ff fef9 	bl	1000e70c <mxc_assert>
1000e91a:	e7ed      	b.n	1000e8f8 <LED_Off+0xc>
1000e91c:	10018fa8 	.word	0x10018fa8
1000e920:	10018fac 	.word	0x10018fac
1000e924:	10018fec 	.word	0x10018fec
1000e928:	10019024 	.word	0x10019024

1000e92c <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
1000e92c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
1000e92e:	4b0b      	ldr	r3, [pc, #44]	@ (1000e95c <PB_Init+0x30>)
1000e930:	681f      	ldr	r7, [r3, #0]
1000e932:	b187      	cbz	r7, 1000e956 <PB_Init+0x2a>
1000e934:	2400      	movs	r4, #0
1000e936:	4d0a      	ldr	r5, [pc, #40]	@ (1000e960 <PB_Init+0x34>)
    int retval = E_NO_ERROR;
1000e938:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
1000e93a:	4628      	mov	r0, r5
1000e93c:	f000 fb36 	bl	1000efac <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
1000e940:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
1000e942:	2800      	cmp	r0, #0
1000e944:	bf18      	it	ne
1000e946:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
1000e94a:	42bc      	cmp	r4, r7
1000e94c:	f105 050c 	add.w	r5, r5, #12
1000e950:	d1f3      	bne.n	1000e93a <PB_Init+0xe>
        }
    }

    return retval;
}
1000e952:	4630      	mov	r0, r6
1000e954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000e956:	463e      	mov	r6, r7
}
1000e958:	4630      	mov	r0, r6
1000e95a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e95c:	10018fd0 	.word	0x10018fd0
1000e960:	10018fd4 	.word	0x10018fd4

1000e964 <Reset_Handler>:
1000e964:	4847      	ldr	r0, [pc, #284]	@ (1000ea84 <LPCMP_IRQHandler+0x2>)
1000e966:	4685      	mov	sp, r0
1000e968:	4847      	ldr	r0, [pc, #284]	@ (1000ea88 <LPCMP_IRQHandler+0x6>)
1000e96a:	4780      	blx	r0
1000e96c:	b980      	cbnz	r0, 1000e990 <.SKIPRAMINIT>
1000e96e:	4947      	ldr	r1, [pc, #284]	@ (1000ea8c <LPCMP_IRQHandler+0xa>)
1000e970:	4a47      	ldr	r2, [pc, #284]	@ (1000ea90 <LPCMP_IRQHandler+0xe>)
1000e972:	4b48      	ldr	r3, [pc, #288]	@ (1000ea94 <LPCMP_IRQHandler+0x12>)
1000e974:	1a9b      	subs	r3, r3, r2
1000e976:	dd03      	ble.n	1000e980 <Reset_Handler+0x1c>
1000e978:	3b04      	subs	r3, #4
1000e97a:	58c8      	ldr	r0, [r1, r3]
1000e97c:	50d0      	str	r0, [r2, r3]
1000e97e:	dcfb      	bgt.n	1000e978 <Reset_Handler+0x14>
1000e980:	4945      	ldr	r1, [pc, #276]	@ (1000ea98 <LPCMP_IRQHandler+0x16>)
1000e982:	4a46      	ldr	r2, [pc, #280]	@ (1000ea9c <LPCMP_IRQHandler+0x1a>)
1000e984:	2000      	movs	r0, #0
1000e986:	4291      	cmp	r1, r2
1000e988:	bfbc      	itt	lt
1000e98a:	f841 0b04 	strlt.w	r0, [r1], #4
1000e98e:	e7fa      	blt.n	1000e986 <Reset_Handler+0x22>

1000e990 <.SKIPRAMINIT>:
1000e990:	4843      	ldr	r0, [pc, #268]	@ (1000eaa0 <LPCMP_IRQHandler+0x1e>)
1000e992:	4780      	blx	r0
1000e994:	4843      	ldr	r0, [pc, #268]	@ (1000eaa4 <LPCMP_IRQHandler+0x22>)
1000e996:	4780      	blx	r0
1000e998:	4843      	ldr	r0, [pc, #268]	@ (1000eaa8 <LPCMP_IRQHandler+0x26>)
1000e99a:	4780      	blx	r0

1000e99c <.SPIN>:
1000e99c:	f7ff fffe 	bl	1000e99c <.SPIN>
1000e9a0:	e7fe      	b.n	1000e9a0 <.SPIN+0x4>

1000e9a2 <HardFault_Handler>:
1000e9a2:	e7fe      	b.n	1000e9a2 <HardFault_Handler>

1000e9a4 <MemManage_Handler>:
1000e9a4:	e7fe      	b.n	1000e9a4 <MemManage_Handler>

1000e9a6 <BusFault_Handler>:
1000e9a6:	e7fe      	b.n	1000e9a6 <BusFault_Handler>

1000e9a8 <UsageFault_Handler>:
1000e9a8:	e7fe      	b.n	1000e9a8 <UsageFault_Handler>

1000e9aa <SVC_Handler>:
1000e9aa:	e7fe      	b.n	1000e9aa <SVC_Handler>

1000e9ac <DebugMon_Handler>:
1000e9ac:	e7fe      	b.n	1000e9ac <DebugMon_Handler>

1000e9ae <PendSV_Handler>:
1000e9ae:	e7fe      	b.n	1000e9ae <PendSV_Handler>

1000e9b0 <SysTick_Handler>:
1000e9b0:	e7fe      	b.n	1000e9b0 <SysTick_Handler>

1000e9b2 <Default_Handler>:
1000e9b2:	e7fe      	b.n	1000e9b2 <Default_Handler>

1000e9b4 <PF_IRQHandler>:
1000e9b4:	e7fe      	b.n	1000e9b4 <PF_IRQHandler>

1000e9b6 <WDT0_IRQHandler>:
1000e9b6:	e7fe      	b.n	1000e9b6 <WDT0_IRQHandler>

1000e9b8 <RSV02_IRQHandler>:
1000e9b8:	e7fe      	b.n	1000e9b8 <RSV02_IRQHandler>

1000e9ba <RTC_IRQHandler>:
1000e9ba:	e7fe      	b.n	1000e9ba <RTC_IRQHandler>

1000e9bc <TRNG_IRQHandler>:
1000e9bc:	e7fe      	b.n	1000e9bc <TRNG_IRQHandler>

1000e9be <TMR0_IRQHandler>:
1000e9be:	e7fe      	b.n	1000e9be <TMR0_IRQHandler>

1000e9c0 <TMR1_IRQHandler>:
1000e9c0:	e7fe      	b.n	1000e9c0 <TMR1_IRQHandler>

1000e9c2 <TMR2_IRQHandler>:
1000e9c2:	e7fe      	b.n	1000e9c2 <TMR2_IRQHandler>

1000e9c4 <TMR3_IRQHandler>:
1000e9c4:	e7fe      	b.n	1000e9c4 <TMR3_IRQHandler>

1000e9c6 <TMR4_IRQHandler>:
1000e9c6:	e7fe      	b.n	1000e9c6 <TMR4_IRQHandler>

1000e9c8 <TMR5_IRQHandler>:
1000e9c8:	e7fe      	b.n	1000e9c8 <TMR5_IRQHandler>

1000e9ca <RSV11_IRQHandler>:
1000e9ca:	e7fe      	b.n	1000e9ca <RSV11_IRQHandler>

1000e9cc <RSV12_IRQHandler>:
1000e9cc:	e7fe      	b.n	1000e9cc <RSV12_IRQHandler>

1000e9ce <I2C0_IRQHandler>:
1000e9ce:	e7fe      	b.n	1000e9ce <I2C0_IRQHandler>

1000e9d0 <UART0_IRQHandler>:
1000e9d0:	e7fe      	b.n	1000e9d0 <UART0_IRQHandler>

1000e9d2 <UART1_IRQHandler>:
1000e9d2:	e7fe      	b.n	1000e9d2 <UART1_IRQHandler>

1000e9d4 <SPI1_IRQHandler>:
1000e9d4:	e7fe      	b.n	1000e9d4 <SPI1_IRQHandler>

1000e9d6 <RSV17_IRQHandler>:
1000e9d6:	e7fe      	b.n	1000e9d6 <RSV17_IRQHandler>

1000e9d8 <RSV18_IRQHandler>:
1000e9d8:	e7fe      	b.n	1000e9d8 <RSV18_IRQHandler>

1000e9da <RSV19_IRQHandler>:
1000e9da:	e7fe      	b.n	1000e9da <RSV19_IRQHandler>

1000e9dc <ADC_IRQHandler>:
1000e9dc:	e7fe      	b.n	1000e9dc <ADC_IRQHandler>

1000e9de <RSV21_IRQHandler>:
1000e9de:	e7fe      	b.n	1000e9de <RSV21_IRQHandler>

1000e9e0 <RSV22_IRQHandler>:
1000e9e0:	e7fe      	b.n	1000e9e0 <RSV22_IRQHandler>

1000e9e2 <FLC0_IRQHandler>:
1000e9e2:	e7fe      	b.n	1000e9e2 <FLC0_IRQHandler>
1000e9e4:	e7fe      	b.n	1000e9e4 <FLC0_IRQHandler+0x2>
1000e9e6:	e7fe      	b.n	1000e9e6 <FLC0_IRQHandler+0x4>

1000e9e8 <GPIO2_IRQHandler>:
1000e9e8:	e7fe      	b.n	1000e9e8 <GPIO2_IRQHandler>

1000e9ea <RSV27_IRQHandler>:
1000e9ea:	e7fe      	b.n	1000e9ea <RSV27_IRQHandler>

1000e9ec <DMA0_IRQHandler>:
1000e9ec:	e7fe      	b.n	1000e9ec <DMA0_IRQHandler>

1000e9ee <DMA1_IRQHandler>:
1000e9ee:	e7fe      	b.n	1000e9ee <DMA1_IRQHandler>

1000e9f0 <DMA2_IRQHandler>:
1000e9f0:	e7fe      	b.n	1000e9f0 <DMA2_IRQHandler>

1000e9f2 <DMA3_IRQHandler>:
1000e9f2:	e7fe      	b.n	1000e9f2 <DMA3_IRQHandler>

1000e9f4 <RSV32_IRQHandler>:
1000e9f4:	e7fe      	b.n	1000e9f4 <RSV32_IRQHandler>

1000e9f6 <RSV33_IRQHandler>:
1000e9f6:	e7fe      	b.n	1000e9f6 <RSV33_IRQHandler>

1000e9f8 <UART2_IRQHandler>:
1000e9f8:	e7fe      	b.n	1000e9f8 <UART2_IRQHandler>

1000e9fa <RSV35_IRQHandler>:
1000e9fa:	e7fe      	b.n	1000e9fa <RSV35_IRQHandler>

1000e9fc <I2C1_IRQHandler>:
1000e9fc:	e7fe      	b.n	1000e9fc <I2C1_IRQHandler>

1000e9fe <RSV37_IRQHandler>:
1000e9fe:	e7fe      	b.n	1000e9fe <RSV37_IRQHandler>

1000ea00 <RSV38_IRQHandler>:
1000ea00:	e7fe      	b.n	1000ea00 <RSV38_IRQHandler>

1000ea02 <RSV39_IRQHandler>:
1000ea02:	e7fe      	b.n	1000ea02 <RSV39_IRQHandler>

1000ea04 <RSV40_IRQHandler>:
1000ea04:	e7fe      	b.n	1000ea04 <RSV40_IRQHandler>

1000ea06 <RSV41_IRQHandler>:
1000ea06:	e7fe      	b.n	1000ea06 <RSV41_IRQHandler>

1000ea08 <RSV42_IRQHandler>:
1000ea08:	e7fe      	b.n	1000ea08 <RSV42_IRQHandler>

1000ea0a <RSV43_IRQHandler>:
1000ea0a:	e7fe      	b.n	1000ea0a <RSV43_IRQHandler>

1000ea0c <RSV44_IRQHandler>:
1000ea0c:	e7fe      	b.n	1000ea0c <RSV44_IRQHandler>

1000ea0e <RSV45_IRQHandler>:
1000ea0e:	e7fe      	b.n	1000ea0e <RSV45_IRQHandler>

1000ea10 <RSV46_IRQHandler>:
1000ea10:	e7fe      	b.n	1000ea10 <RSV46_IRQHandler>

1000ea12 <RSV47_IRQHandler>:
1000ea12:	e7fe      	b.n	1000ea12 <RSV47_IRQHandler>

1000ea14 <RSV48_IRQHandler>:
1000ea14:	e7fe      	b.n	1000ea14 <RSV48_IRQHandler>

1000ea16 <RSV49_IRQHandler>:
1000ea16:	e7fe      	b.n	1000ea16 <RSV49_IRQHandler>

1000ea18 <RSV50_IRQHandler>:
1000ea18:	e7fe      	b.n	1000ea18 <RSV50_IRQHandler>

1000ea1a <RSV51_IRQHandler>:
1000ea1a:	e7fe      	b.n	1000ea1a <RSV51_IRQHandler>

1000ea1c <RSV52_IRQHandler>:
1000ea1c:	e7fe      	b.n	1000ea1c <RSV52_IRQHandler>

1000ea1e <WUT_IRQHandler>:
1000ea1e:	e7fe      	b.n	1000ea1e <WUT_IRQHandler>

1000ea20 <GPIOWAKE_IRQHandler>:
1000ea20:	e7fe      	b.n	1000ea20 <GPIOWAKE_IRQHandler>

1000ea22 <RSV55_IRQHandler>:
1000ea22:	e7fe      	b.n	1000ea22 <RSV55_IRQHandler>

1000ea24 <SPI0_IRQHandler>:
1000ea24:	e7fe      	b.n	1000ea24 <SPI0_IRQHandler>

1000ea26 <WDT1_IRQHandler>:
1000ea26:	e7fe      	b.n	1000ea26 <WDT1_IRQHandler>

1000ea28 <RSV58_IRQHandler>:
1000ea28:	e7fe      	b.n	1000ea28 <RSV58_IRQHandler>

1000ea2a <PT_IRQHandler>:
1000ea2a:	e7fe      	b.n	1000ea2a <PT_IRQHandler>

1000ea2c <RSV60_IRQHandler>:
1000ea2c:	e7fe      	b.n	1000ea2c <RSV60_IRQHandler>

1000ea2e <RSV61_IRQHandler>:
1000ea2e:	e7fe      	b.n	1000ea2e <RSV61_IRQHandler>

1000ea30 <I2C2_IRQHandler>:
1000ea30:	e7fe      	b.n	1000ea30 <I2C2_IRQHandler>

1000ea32 <RISCV_IRQHandler>:
1000ea32:	e7fe      	b.n	1000ea32 <RISCV_IRQHandler>

1000ea34 <RSV64_IRQHandler>:
1000ea34:	e7fe      	b.n	1000ea34 <RSV64_IRQHandler>

1000ea36 <RSV65_IRQHandler>:
1000ea36:	e7fe      	b.n	1000ea36 <RSV65_IRQHandler>

1000ea38 <RSV66_IRQHandler>:
1000ea38:	e7fe      	b.n	1000ea38 <RSV66_IRQHandler>

1000ea3a <OWM_IRQHandler>:
1000ea3a:	e7fe      	b.n	1000ea3a <OWM_IRQHandler>

1000ea3c <RSV68_IRQHandler>:
1000ea3c:	e7fe      	b.n	1000ea3c <RSV68_IRQHandler>

1000ea3e <RSV69_IRQHandler>:
1000ea3e:	e7fe      	b.n	1000ea3e <RSV69_IRQHandler>

1000ea40 <RSV70_IRQHandler>:
1000ea40:	e7fe      	b.n	1000ea40 <RSV70_IRQHandler>

1000ea42 <RSV71_IRQHandler>:
1000ea42:	e7fe      	b.n	1000ea42 <RSV71_IRQHandler>

1000ea44 <RSV72_IRQHandler>:
1000ea44:	e7fe      	b.n	1000ea44 <RSV72_IRQHandler>

1000ea46 <RSV73_IRQHandler>:
1000ea46:	e7fe      	b.n	1000ea46 <RSV73_IRQHandler>

1000ea48 <RSV74_IRQHandler>:
1000ea48:	e7fe      	b.n	1000ea48 <RSV74_IRQHandler>

1000ea4a <RSV75_IRQHandler>:
1000ea4a:	e7fe      	b.n	1000ea4a <RSV75_IRQHandler>

1000ea4c <RSV76_IRQHandler>:
1000ea4c:	e7fe      	b.n	1000ea4c <RSV76_IRQHandler>

1000ea4e <RSV77_IRQHandler>:
1000ea4e:	e7fe      	b.n	1000ea4e <RSV77_IRQHandler>

1000ea50 <RSV78_IRQHandler>:
1000ea50:	e7fe      	b.n	1000ea50 <RSV78_IRQHandler>

1000ea52 <RSV79_IRQHandler>:
1000ea52:	e7fe      	b.n	1000ea52 <RSV79_IRQHandler>

1000ea54 <RSV80_IRQHandler>:
1000ea54:	e7fe      	b.n	1000ea54 <RSV80_IRQHandler>

1000ea56 <RSV81_IRQHandler>:
1000ea56:	e7fe      	b.n	1000ea56 <RSV81_IRQHandler>

1000ea58 <ECC_IRQHandler>:
1000ea58:	e7fe      	b.n	1000ea58 <ECC_IRQHandler>

1000ea5a <DVS_IRQHandler>:
1000ea5a:	e7fe      	b.n	1000ea5a <DVS_IRQHandler>

1000ea5c <SIMO_IRQHandler>:
1000ea5c:	e7fe      	b.n	1000ea5c <SIMO_IRQHandler>

1000ea5e <RSV85_IRQHandler>:
1000ea5e:	e7fe      	b.n	1000ea5e <RSV85_IRQHandler>

1000ea60 <RSV86_IRQHandler>:
1000ea60:	e7fe      	b.n	1000ea60 <RSV86_IRQHandler>

1000ea62 <RSV87_IRQHandler>:
1000ea62:	e7fe      	b.n	1000ea62 <RSV87_IRQHandler>

1000ea64 <UART3_IRQHandler>:
1000ea64:	e7fe      	b.n	1000ea64 <UART3_IRQHandler>

1000ea66 <RSV89_IRQHandler>:
1000ea66:	e7fe      	b.n	1000ea66 <RSV89_IRQHandler>

1000ea68 <RSV90_IRQHandler>:
1000ea68:	e7fe      	b.n	1000ea68 <RSV90_IRQHandler>

1000ea6a <PCIF_IRQHandler>:
1000ea6a:	e7fe      	b.n	1000ea6a <PCIF_IRQHandler>

1000ea6c <RSV92_IRQHandler>:
1000ea6c:	e7fe      	b.n	1000ea6c <RSV92_IRQHandler>

1000ea6e <RSV93_IRQHandler>:
1000ea6e:	e7fe      	b.n	1000ea6e <RSV93_IRQHandler>

1000ea70 <RSV94_IRQHandler>:
1000ea70:	e7fe      	b.n	1000ea70 <RSV94_IRQHandler>

1000ea72 <RSV95_IRQHandler>:
1000ea72:	e7fe      	b.n	1000ea72 <RSV95_IRQHandler>

1000ea74 <RSV96_IRQHandler>:
1000ea74:	e7fe      	b.n	1000ea74 <RSV96_IRQHandler>

1000ea76 <AES_IRQHandler>:
1000ea76:	e7fe      	b.n	1000ea76 <AES_IRQHandler>

1000ea78 <RSV98_IRQHandler>:
1000ea78:	e7fe      	b.n	1000ea78 <RSV98_IRQHandler>

1000ea7a <I2S_IRQHandler>:
1000ea7a:	e7fe      	b.n	1000ea7a <I2S_IRQHandler>

1000ea7c <CNN_FIFO_IRQHandler>:
1000ea7c:	e7fe      	b.n	1000ea7c <CNN_FIFO_IRQHandler>

1000ea7e <CNN_IRQHandler>:
1000ea7e:	e7fe      	b.n	1000ea7e <CNN_IRQHandler>

1000ea80 <RSV102_IRQHandler>:
1000ea80:	e7fe      	b.n	1000ea80 <RSV102_IRQHandler>

1000ea82 <LPCMP_IRQHandler>:
1000ea82:	e7fe      	b.n	1000ea82 <LPCMP_IRQHandler>
1000ea84:	20020000 	.word	0x20020000
1000ea88:	1000eb51 	.word	0x1000eb51
1000ea8c:	100195f8 	.word	0x100195f8
1000ea90:	20000000 	.word	0x20000000
1000ea94:	200006f8 	.word	0x200006f8
1000ea98:	20000800 	.word	0x20000800
1000ea9c:	20001740 	.word	0x20001740
1000eaa0:	1000eb55 	.word	0x1000eb55
1000eaa4:	10012129 	.word	0x10012129
1000eaa8:	1000e3ed 	.word	0x1000e3ed

1000eaac <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
1000eaac:	4a0b      	ldr	r2, [pc, #44]	@ (1000eadc <_sbrk+0x30>)
{
1000eaae:	b508      	push	{r3, lr}
1000eab0:	4603      	mov	r3, r0
    if (heap_end == 0) {
1000eab2:	6810      	ldr	r0, [r2, #0]
1000eab4:	b128      	cbz	r0, 1000eac2 <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000eab6:	490a      	ldr	r1, [pc, #40]	@ (1000eae0 <_sbrk+0x34>)
1000eab8:	4403      	add	r3, r0
1000eaba:	428b      	cmp	r3, r1
1000eabc:	d807      	bhi.n	1000eace <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
1000eabe:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
1000eac0:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
1000eac2:	4808      	ldr	r0, [pc, #32]	@ (1000eae4 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000eac4:	4906      	ldr	r1, [pc, #24]	@ (1000eae0 <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
1000eac6:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000eac8:	4403      	add	r3, r0
1000eaca:	428b      	cmp	r3, r1
1000eacc:	d9f7      	bls.n	1000eabe <_sbrk+0x12>
        errno = ENOMEM;
1000eace:	f001 fa19 	bl	1000ff04 <__errno>
1000ead2:	230c      	movs	r3, #12
1000ead4:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
1000ead6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000eada:	bd08      	pop	{r3, pc}
1000eadc:	20000c38 	.word	0x20000c38
1000eae0:	2001f000 	.word	0x2001f000
1000eae4:	20001748 	.word	0x20001748

1000eae8 <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
1000eae8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1000eaec:	689a      	ldr	r2, [r3, #8]
1000eaee:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
1000eaf2:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
1000eaf6:	d020      	beq.n	1000eb3a <SystemCoreClockUpdate+0x52>
1000eaf8:	d911      	bls.n	1000eb1e <SystemCoreClockUpdate+0x36>
1000eafa:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
1000eafe:	d017      	beq.n	1000eb30 <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
1000eb00:	4b0f      	ldr	r3, [pc, #60]	@ (1000eb40 <SystemCoreClockUpdate+0x58>)
1000eb02:	4910      	ldr	r1, [pc, #64]	@ (1000eb44 <SystemCoreClockUpdate+0x5c>)
1000eb04:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
1000eb08:	bf18      	it	ne
1000eb0a:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000eb0c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
1000eb10:	490d      	ldr	r1, [pc, #52]	@ (1000eb48 <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000eb12:	6892      	ldr	r2, [r2, #8]
1000eb14:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
1000eb18:	40d3      	lsrs	r3, r2
1000eb1a:	600b      	str	r3, [r1, #0]
}
1000eb1c:	4770      	bx	lr
    switch (clk_src) {
1000eb1e:	b152      	cbz	r2, 1000eb36 <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
1000eb20:	4908      	ldr	r1, [pc, #32]	@ (1000eb44 <SystemCoreClockUpdate+0x5c>)
1000eb22:	f247 5330 	movw	r3, #30000	@ 0x7530
1000eb26:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
1000eb2a:	bf18      	it	ne
1000eb2c:	460b      	movne	r3, r1
1000eb2e:	e7ed      	b.n	1000eb0c <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
1000eb30:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
1000eb34:	e7ea      	b.n	1000eb0c <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
1000eb36:	4b05      	ldr	r3, [pc, #20]	@ (1000eb4c <SystemCoreClockUpdate+0x64>)
1000eb38:	e7e8      	b.n	1000eb0c <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
1000eb3a:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1000eb3e:	e7e5      	b.n	1000eb0c <SystemCoreClockUpdate+0x24>
1000eb40:	047868c0 	.word	0x047868c0
1000eb44:	05f5e100 	.word	0x05f5e100
1000eb48:	20001740 	.word	0x20001740
1000eb4c:	03938700 	.word	0x03938700

1000eb50 <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
1000eb50:	2000      	movs	r0, #0
1000eb52:	4770      	bx	lr

1000eb54 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
1000eb54:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
1000eb56:	4c0a      	ldr	r4, [pc, #40]	@ (1000eb80 <SystemInit+0x2c>)
1000eb58:	4b0a      	ldr	r3, [pc, #40]	@ (1000eb84 <SystemInit+0x30>)
1000eb5a:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
1000eb5c:	480a      	ldr	r0, [pc, #40]	@ (1000eb88 <SystemInit+0x34>)
1000eb5e:	f000 fe37 	bl	1000f7d0 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
1000eb62:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
1000eb66:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
1000eb6a:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
1000eb6e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
1000eb72:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
1000eb76:	f7ff ffb7 	bl	1000eae8 <SystemCoreClockUpdate>

    Board_Init();
1000eb7a:	f7ff fdd7 	bl	1000e72c <Board_Init>
}
1000eb7e:	bd10      	pop	{r4, pc}
1000eb80:	e000ed00 	.word	0xe000ed00
1000eb84:	1000e000 	.word	0x1000e000
1000eb88:	4002a000 	.word	0x4002a000

1000eb8c <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
1000eb8c:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
1000eb8e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000eb92:	4918      	ldr	r1, [pc, #96]	@ (1000ebf4 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
1000eb94:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000eb96:	691a      	ldr	r2, [r3, #16]
1000eb98:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
1000eb9c:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
1000eb9e:	691a      	ldr	r2, [r3, #16]
1000eba0:	07d2      	lsls	r2, r2, #31
1000eba2:	d41f      	bmi.n	1000ebe4 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000eba4:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000eba8:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000ebaa:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
1000ebac:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
1000ebb0:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000ebb2:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
1000ebb4:	4b10      	ldr	r3, [pc, #64]	@ (1000ebf8 <MXC_DelayInit+0x6c>)
1000ebb6:	4a11      	ldr	r2, [pc, #68]	@ (1000ebfc <MXC_DelayInit+0x70>)
1000ebb8:	6819      	ldr	r1, [r3, #0]
1000ebba:	2300      	movs	r3, #0
1000ebbc:	fba0 0101 	umull	r0, r1, r0, r1
1000ebc0:	f009 fff6 	bl	10018bb0 <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
1000ebc4:	4b0e      	ldr	r3, [pc, #56]	@ (1000ec00 <MXC_DelayInit+0x74>)
1000ebc6:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
1000ebca:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
1000ebce:	4284      	cmp	r4, r0
    overflows = ticks / reload;
1000ebd0:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
1000ebd2:	d80a      	bhi.n	1000ebea <MXC_DelayInit+0x5e>
        overflows++;
1000ebd4:	681a      	ldr	r2, [r3, #0]
1000ebd6:	3201      	adds	r2, #1
1000ebd8:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
1000ebda:	4425      	add	r5, r4
1000ebdc:	4b09      	ldr	r3, [pc, #36]	@ (1000ec04 <MXC_DelayInit+0x78>)
1000ebde:	1a28      	subs	r0, r5, r0
1000ebe0:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
1000ebe2:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
1000ebe4:	695d      	ldr	r5, [r3, #20]
1000ebe6:	3501      	adds	r5, #1
1000ebe8:	e7e4      	b.n	1000ebb4 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
1000ebea:	4b06      	ldr	r3, [pc, #24]	@ (1000ec04 <MXC_DelayInit+0x78>)
1000ebec:	1a20      	subs	r0, r4, r0
1000ebee:	6018      	str	r0, [r3, #0]
}
1000ebf0:	bd38      	pop	{r3, r4, r5, pc}
1000ebf2:	bf00      	nop
1000ebf4:	20000c40 	.word	0x20000c40
1000ebf8:	20001740 	.word	0x20001740
1000ebfc:	000f4240 	.word	0x000f4240
1000ec00:	20000034 	.word	0x20000034
1000ec04:	20000c44 	.word	0x20000c44

1000ec08 <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
1000ec08:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
1000ec0a:	4c0c      	ldr	r4, [pc, #48]	@ (1000ec3c <MXC_DelayAsync+0x34>)
    cbFunc = callback;
1000ec0c:	4b0c      	ldr	r3, [pc, #48]	@ (1000ec40 <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
1000ec0e:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
1000ec10:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
1000ec12:	2a00      	cmp	r2, #0
1000ec14:	dc0e      	bgt.n	1000ec34 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000ec16:	b908      	cbnz	r0, 1000ec1c <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
1000ec18:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
1000ec1a:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
1000ec1c:	f7ff ffb6 	bl	1000eb8c <MXC_DelayInit>
    if (overflows > 0) {
1000ec20:	6823      	ldr	r3, [r4, #0]
1000ec22:	2b00      	cmp	r3, #0
1000ec24:	ddf8      	ble.n	1000ec18 <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
1000ec26:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000ec2a:	6913      	ldr	r3, [r2, #16]
1000ec2c:	f043 0302 	orr.w	r3, r3, #2
1000ec30:	6113      	str	r3, [r2, #16]
1000ec32:	e7f1      	b.n	1000ec18 <MXC_DelayAsync+0x10>
        return E_BUSY;
1000ec34:	f06f 0005 	mvn.w	r0, #5
}
1000ec38:	bd10      	pop	{r4, pc}
1000ec3a:	bf00      	nop
1000ec3c:	20000034 	.word	0x20000034
1000ec40:	20000c3c 	.word	0x20000c3c

1000ec44 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
1000ec44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
1000ec46:	4c17      	ldr	r4, [pc, #92]	@ (1000eca4 <MXC_DelayCheck+0x60>)
1000ec48:	6823      	ldr	r3, [r4, #0]
1000ec4a:	2b00      	cmp	r3, #0
1000ec4c:	db1e      	blt.n	1000ec8c <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
1000ec4e:	6826      	ldr	r6, [r4, #0]
1000ec50:	bb2e      	cbnz	r6, 1000ec9e <MXC_DelayCheck+0x5a>
1000ec52:	4b15      	ldr	r3, [pc, #84]	@ (1000eca8 <MXC_DelayCheck+0x64>)
1000ec54:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
1000ec58:	681b      	ldr	r3, [r3, #0]
1000ec5a:	69aa      	ldr	r2, [r5, #24]
1000ec5c:	429a      	cmp	r2, r3
1000ec5e:	d81e      	bhi.n	1000ec9e <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
1000ec60:	4f12      	ldr	r7, [pc, #72]	@ (1000ecac <MXC_DelayCheck+0x68>)
1000ec62:	683b      	ldr	r3, [r7, #0]
1000ec64:	b15b      	cbz	r3, 1000ec7e <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
1000ec66:	f06f 000f 	mvn.w	r0, #15
1000ec6a:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
1000ec6c:	4b10      	ldr	r3, [pc, #64]	@ (1000ecb0 <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
1000ec6e:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
1000ec70:	681a      	ldr	r2, [r3, #0]
1000ec72:	612a      	str	r2, [r5, #16]
    overflows = -1;
1000ec74:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1000ec78:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
1000ec7a:	2000      	movs	r0, #0
}
1000ec7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
1000ec7e:	4a0c      	ldr	r2, [pc, #48]	@ (1000ecb0 <MXC_DelayCheck+0x6c>)
    overflows = -1;
1000ec80:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1000ec84:	6812      	ldr	r2, [r2, #0]
1000ec86:	612a      	str	r2, [r5, #16]
    overflows = -1;
1000ec88:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
1000ec8a:	e7f6      	b.n	1000ec7a <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
1000ec8c:	4c07      	ldr	r4, [pc, #28]	@ (1000ecac <MXC_DelayCheck+0x68>)
1000ec8e:	6823      	ldr	r3, [r4, #0]
1000ec90:	2b00      	cmp	r3, #0
1000ec92:	d0f2      	beq.n	1000ec7a <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
1000ec94:	2000      	movs	r0, #0
1000ec96:	4798      	blx	r3
            cbFunc = NULL;
1000ec98:	2300      	movs	r3, #0
1000ec9a:	6023      	str	r3, [r4, #0]
1000ec9c:	e7ed      	b.n	1000ec7a <MXC_DelayCheck+0x36>
    return E_BUSY;
1000ec9e:	f06f 0005 	mvn.w	r0, #5
}
1000eca2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000eca4:	20000034 	.word	0x20000034
1000eca8:	20000c44 	.word	0x20000c44
1000ecac:	20000c3c 	.word	0x20000c3c
1000ecb0:	20000c40 	.word	0x20000c40

1000ecb4 <MXC_DelayAbort>:
{
1000ecb4:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
1000ecb6:	4c09      	ldr	r4, [pc, #36]	@ (1000ecdc <MXC_DelayAbort+0x28>)
1000ecb8:	6823      	ldr	r3, [r4, #0]
1000ecba:	b123      	cbz	r3, 1000ecc6 <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
1000ecbc:	f06f 000f 	mvn.w	r0, #15
1000ecc0:	4798      	blx	r3
        cbFunc = NULL;
1000ecc2:	2300      	movs	r3, #0
1000ecc4:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
1000ecc6:	4a06      	ldr	r2, [pc, #24]	@ (1000ece0 <MXC_DelayAbort+0x2c>)
    overflows = -1;
1000ecc8:	4b06      	ldr	r3, [pc, #24]	@ (1000ece4 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
1000ecca:	6810      	ldr	r0, [r2, #0]
1000eccc:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
1000ecd0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1000ecd4:	6108      	str	r0, [r1, #16]
    overflows = -1;
1000ecd6:	601a      	str	r2, [r3, #0]
}
1000ecd8:	bd10      	pop	{r4, pc}
1000ecda:	bf00      	nop
1000ecdc:	20000c3c 	.word	0x20000c3c
1000ece0:	20000c40 	.word	0x20000c40
1000ece4:	20000034 	.word	0x20000034

1000ece8 <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
1000ece8:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
1000ecea:	4c18      	ldr	r4, [pc, #96]	@ (1000ed4c <MXC_Delay+0x64>)
1000ecec:	6822      	ldr	r2, [r4, #0]
1000ecee:	2a00      	cmp	r2, #0
1000ecf0:	dc29      	bgt.n	1000ed46 <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000ecf2:	b908      	cbnz	r0, 1000ecf8 <MXC_Delay+0x10>
        return E_NO_ERROR;
1000ecf4:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
1000ecf6:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
1000ecf8:	f7ff ff48 	bl	1000eb8c <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1000ecfc:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
1000ed00:	e002      	b.n	1000ed08 <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1000ed02:	6913      	ldr	r3, [r2, #16]
1000ed04:	03db      	lsls	r3, r3, #15
1000ed06:	d41a      	bmi.n	1000ed3e <MXC_Delay+0x56>
    while (overflows > 0) {
1000ed08:	6823      	ldr	r3, [r4, #0]
1000ed0a:	2b00      	cmp	r3, #0
1000ed0c:	dcf9      	bgt.n	1000ed02 <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
1000ed0e:	4b10      	ldr	r3, [pc, #64]	@ (1000ed50 <MXC_Delay+0x68>)
1000ed10:	681a      	ldr	r2, [r3, #0]
1000ed12:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
1000ed16:	698b      	ldr	r3, [r1, #24]
1000ed18:	4293      	cmp	r3, r2
1000ed1a:	d8fc      	bhi.n	1000ed16 <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
1000ed1c:	4d0d      	ldr	r5, [pc, #52]	@ (1000ed54 <MXC_Delay+0x6c>)
1000ed1e:	682b      	ldr	r3, [r5, #0]
1000ed20:	b123      	cbz	r3, 1000ed2c <MXC_Delay+0x44>
        cbFunc(E_ABORT);
1000ed22:	f06f 000f 	mvn.w	r0, #15
1000ed26:	4798      	blx	r3
        cbFunc = NULL;
1000ed28:	2300      	movs	r3, #0
1000ed2a:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
1000ed2c:	4b0a      	ldr	r3, [pc, #40]	@ (1000ed58 <MXC_Delay+0x70>)
1000ed2e:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000ed32:	6819      	ldr	r1, [r3, #0]
1000ed34:	6111      	str	r1, [r2, #16]
    overflows = -1;
1000ed36:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1000ed3a:	6023      	str	r3, [r4, #0]
}
1000ed3c:	e7da      	b.n	1000ecf4 <MXC_Delay+0xc>
            overflows--;
1000ed3e:	6823      	ldr	r3, [r4, #0]
1000ed40:	3b01      	subs	r3, #1
1000ed42:	6023      	str	r3, [r4, #0]
1000ed44:	e7e0      	b.n	1000ed08 <MXC_Delay+0x20>
        return E_BUSY;
1000ed46:	f06f 0005 	mvn.w	r0, #5
}
1000ed4a:	bd38      	pop	{r3, r4, r5, pc}
1000ed4c:	20000034 	.word	0x20000034
1000ed50:	20000c44 	.word	0x20000c44
1000ed54:	20000c3c 	.word	0x20000c3c
1000ed58:	20000c40 	.word	0x20000c40

1000ed5c <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
1000ed5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1000ed5e:	4e0f      	ldr	r6, [pc, #60]	@ (1000ed9c <MXC_NVIC_SetVector+0x40>)
1000ed60:	4b0f      	ldr	r3, [pc, #60]	@ (1000eda0 <MXC_NVIC_SetVector+0x44>)
1000ed62:	68b2      	ldr	r2, [r6, #8]
1000ed64:	429a      	cmp	r2, r3
{
1000ed66:	4604      	mov	r4, r0
1000ed68:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
1000ed6a:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1000ed6e:	d007      	beq.n	1000ed80 <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
1000ed70:	4618      	mov	r0, r3
1000ed72:	490c      	ldr	r1, [pc, #48]	@ (1000eda4 <MXC_NVIC_SetVector+0x48>)
1000ed74:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
1000ed78:	f004 fb92 	bl	100134a0 <memcpy>
1000ed7c:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
1000ed7e:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
1000ed80:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
1000ed82:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
1000ed86:	db07      	blt.n	1000ed98 <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000ed88:	4a07      	ldr	r2, [pc, #28]	@ (1000eda8 <MXC_NVIC_SetVector+0x4c>)
1000ed8a:	0961      	lsrs	r1, r4, #5
1000ed8c:	2301      	movs	r3, #1
1000ed8e:	f004 041f 	and.w	r4, r4, #31
1000ed92:	40a3      	lsls	r3, r4
1000ed94:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
1000ed98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000ed9a:	bf00      	nop
1000ed9c:	e000ed00 	.word	0xe000ed00
1000eda0:	20000e00 	.word	0x20000e00
1000eda4:	1000e000 	.word	0x1000e000
1000eda8:	e000e100 	.word	0xe000e100

1000edac <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
1000edac:	283f      	cmp	r0, #63	@ 0x3f
1000edae:	d908      	bls.n	1000edc2 <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1000edb0:	4a0d      	ldr	r2, [pc, #52]	@ (1000ede8 <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
1000edb2:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1000edb4:	68d1      	ldr	r1, [r2, #12]
1000edb6:	b2c0      	uxtb	r0, r0
1000edb8:	2301      	movs	r3, #1
1000edba:	4083      	lsls	r3, r0
1000edbc:	430b      	orrs	r3, r1
1000edbe:	60d3      	str	r3, [r2, #12]
1000edc0:	4770      	bx	lr
    } else if (clock > 31) {
1000edc2:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
1000edc4:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1000edc8:	d907      	bls.n	1000edda <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
1000edca:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
1000edcc:	6c91      	ldr	r1, [r2, #72]	@ 0x48
1000edce:	b2c0      	uxtb	r0, r0
1000edd0:	2301      	movs	r3, #1
1000edd2:	4083      	lsls	r3, r0
1000edd4:	430b      	orrs	r3, r1
1000edd6:	6493      	str	r3, [r2, #72]	@ 0x48
1000edd8:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
1000edda:	6a51      	ldr	r1, [r2, #36]	@ 0x24
1000eddc:	2301      	movs	r3, #1
1000edde:	4083      	lsls	r3, r0
1000ede0:	430b      	orrs	r3, r1
1000ede2:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
1000ede4:	4770      	bx	lr
1000ede6:	bf00      	nop
1000ede8:	40080000 	.word	0x40080000

1000edec <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
1000edec:	283f      	cmp	r0, #63	@ 0x3f
1000edee:	d909      	bls.n	1000ee04 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1000edf0:	490e      	ldr	r1, [pc, #56]	@ (1000ee2c <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
1000edf2:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1000edf4:	68cb      	ldr	r3, [r1, #12]
1000edf6:	b2c0      	uxtb	r0, r0
1000edf8:	2201      	movs	r2, #1
1000edfa:	4082      	lsls	r2, r0
1000edfc:	ea23 0302 	bic.w	r3, r3, r2
1000ee00:	60cb      	str	r3, [r1, #12]
1000ee02:	4770      	bx	lr
    } else if (clock > 31) {
1000ee04:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1000ee06:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1000ee0a:	d908      	bls.n	1000ee1e <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
1000ee0c:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1000ee0e:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
1000ee10:	b2c0      	uxtb	r0, r0
1000ee12:	2201      	movs	r2, #1
1000ee14:	4082      	lsls	r2, r0
1000ee16:	ea23 0302 	bic.w	r3, r3, r2
1000ee1a:	648b      	str	r3, [r1, #72]	@ 0x48
1000ee1c:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
1000ee1e:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1000ee20:	2201      	movs	r2, #1
1000ee22:	4082      	lsls	r2, r0
1000ee24:	ea23 0302 	bic.w	r3, r3, r2
1000ee28:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
1000ee2a:	4770      	bx	lr
1000ee2c:	40080000 	.word	0x40080000

1000ee30 <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
1000ee30:	b510      	push	{r4, lr}
    switch (clock) {
1000ee32:	2807      	cmp	r0, #7
1000ee34:	d80a      	bhi.n	1000ee4c <MXC_SYS_ClockSourceEnable+0x1c>
1000ee36:	e8df f000 	tbb	[pc, r0]
1000ee3a:	090c      	.short	0x090c
1000ee3c:	47332309 	.word	0x47332309
1000ee40:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
1000ee42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
1000ee46:	4836      	ldr	r0, [pc, #216]	@ (1000ef20 <MXC_SYS_ClockSourceEnable+0xf0>)
1000ee48:	f000 b8b0 	b.w	1000efac <MXC_GPIO_Config>
    switch (clock) {
1000ee4c:	f06f 0002 	mvn.w	r0, #2
}
1000ee50:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000ee52:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ee56:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000ee58:	68a3      	ldr	r3, [r4, #8]
1000ee5a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
1000ee5e:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ee60:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ee64:	f7ff fed0 	bl	1000ec08 <MXC_DelayAsync>
1000ee68:	e003      	b.n	1000ee72 <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
1000ee6a:	f7ff feeb 	bl	1000ec44 <MXC_DelayCheck>
1000ee6e:	3006      	adds	r0, #6
1000ee70:	d152      	bne.n	1000ef18 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ee72:	68a3      	ldr	r3, [r4, #8]
1000ee74:	0159      	lsls	r1, r3, #5
1000ee76:	d5f8      	bpl.n	1000ee6a <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
1000ee78:	f7ff ff1c 	bl	1000ecb4 <MXC_DelayAbort>
            return E_NO_ERROR;
1000ee7c:	2000      	movs	r0, #0
}
1000ee7e:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ee80:	2100      	movs	r1, #0
1000ee82:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ee86:	f7ff febf 	bl	1000ec08 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
1000ee8a:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000ee8e:	e003      	b.n	1000ee98 <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
1000ee90:	f7ff fed8 	bl	1000ec44 <MXC_DelayCheck>
1000ee94:	3006      	adds	r0, #6
1000ee96:	d13f      	bne.n	1000ef18 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ee98:	68a3      	ldr	r3, [r4, #8]
1000ee9a:	009a      	lsls	r2, r3, #2
1000ee9c:	d4ec      	bmi.n	1000ee78 <MXC_SYS_ClockSourceEnable+0x48>
1000ee9e:	e7f7      	b.n	1000ee90 <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000eea0:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eea4:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000eea6:	68a3      	ldr	r3, [r4, #8]
1000eea8:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
1000eeac:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eeae:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000eeb2:	f7ff fea9 	bl	1000ec08 <MXC_DelayAsync>
1000eeb6:	e003      	b.n	1000eec0 <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
1000eeb8:	f7ff fec4 	bl	1000ec44 <MXC_DelayCheck>
1000eebc:	3006      	adds	r0, #6
1000eebe:	d12b      	bne.n	1000ef18 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000eec0:	68a3      	ldr	r3, [r4, #8]
1000eec2:	011b      	lsls	r3, r3, #4
1000eec4:	d5f8      	bpl.n	1000eeb8 <MXC_SYS_ClockSourceEnable+0x88>
1000eec6:	e7d7      	b.n	1000ee78 <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000eec8:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eecc:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000eece:	68a3      	ldr	r3, [r4, #8]
1000eed0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1000eed4:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eed6:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000eeda:	f7ff fe95 	bl	1000ec08 <MXC_DelayAsync>
1000eede:	e003      	b.n	1000eee8 <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
1000eee0:	f7ff feb0 	bl	1000ec44 <MXC_DelayCheck>
1000eee4:	3006      	adds	r0, #6
1000eee6:	d117      	bne.n	1000ef18 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000eee8:	68a3      	ldr	r3, [r4, #8]
1000eeea:	00d8      	lsls	r0, r3, #3
1000eeec:	d4c4      	bmi.n	1000ee78 <MXC_SYS_ClockSourceEnable+0x48>
1000eeee:	e7f7      	b.n	1000eee0 <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000eef0:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eef4:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000eef6:	68a3      	ldr	r3, [r4, #8]
1000eef8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
1000eefc:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eefe:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ef02:	f7ff fe81 	bl	1000ec08 <MXC_DelayAsync>
1000ef06:	e003      	b.n	1000ef10 <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
1000ef08:	f7ff fe9c 	bl	1000ec44 <MXC_DelayCheck>
1000ef0c:	3006      	adds	r0, #6
1000ef0e:	d103      	bne.n	1000ef18 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ef10:	68a3      	ldr	r3, [r4, #8]
1000ef12:	019b      	lsls	r3, r3, #6
1000ef14:	d4b0      	bmi.n	1000ee78 <MXC_SYS_ClockSourceEnable+0x48>
1000ef16:	e7f7      	b.n	1000ef08 <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
1000ef18:	f06f 0009 	mvn.w	r0, #9
}
1000ef1c:	bd10      	pop	{r4, pc}
1000ef1e:	bf00      	nop
1000ef20:	10019088 	.word	0x10019088

1000ef24 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
1000ef24:	283f      	cmp	r0, #63	@ 0x3f
1000ef26:	d909      	bls.n	1000ef3c <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
1000ef28:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
1000ef2a:	490f      	ldr	r1, [pc, #60]	@ (1000ef68 <MXC_SYS_Reset_Periph+0x44>)
1000ef2c:	b2c0      	uxtb	r0, r0
1000ef2e:	2201      	movs	r2, #1
1000ef30:	4082      	lsls	r2, r0
1000ef32:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
1000ef34:	688b      	ldr	r3, [r1, #8]
1000ef36:	421a      	tst	r2, r3
1000ef38:	d1fc      	bne.n	1000ef34 <MXC_SYS_Reset_Periph+0x10>
1000ef3a:	4770      	bx	lr
    } else if (reset > 31) {
1000ef3c:	281f      	cmp	r0, #31
1000ef3e:	d90a      	bls.n	1000ef56 <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
1000ef40:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
1000ef42:	b2c0      	uxtb	r0, r0
1000ef44:	2201      	movs	r2, #1
1000ef46:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
1000ef4a:	4082      	lsls	r2, r0
1000ef4c:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
1000ef4e:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
1000ef50:	421a      	tst	r2, r3
1000ef52:	d1fc      	bne.n	1000ef4e <MXC_SYS_Reset_Periph+0x2a>
1000ef54:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
1000ef56:	2201      	movs	r2, #1
1000ef58:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
1000ef5c:	4082      	lsls	r2, r0
1000ef5e:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
1000ef60:	684b      	ldr	r3, [r1, #4]
1000ef62:	421a      	tst	r2, r3
1000ef64:	d1fc      	bne.n	1000ef60 <MXC_SYS_Reset_Periph+0x3c>
    }
}
1000ef66:	4770      	bx	lr
1000ef68:	40080000 	.word	0x40080000

1000ef6c <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
1000ef6c:	07c1      	lsls	r1, r0, #31
{
1000ef6e:	b510      	push	{r4, lr}
1000ef70:	4604      	mov	r4, r0
    if (portmask & 0x1) {
1000ef72:	d408      	bmi.n	1000ef86 <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
1000ef74:	07a2      	lsls	r2, r4, #30
1000ef76:	d40b      	bmi.n	1000ef90 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
1000ef78:	0763      	lsls	r3, r4, #29
1000ef7a:	d40e      	bmi.n	1000ef9a <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
1000ef7c:	4620      	mov	r0, r4
}
1000ef7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1000ef82:	f000 bf53 	b.w	1000fe2c <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000ef86:	2000      	movs	r0, #0
1000ef88:	f7ff ff30 	bl	1000edec <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
1000ef8c:	07a2      	lsls	r2, r4, #30
1000ef8e:	d5f3      	bpl.n	1000ef78 <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000ef90:	2001      	movs	r0, #1
1000ef92:	f7ff ff2b 	bl	1000edec <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
1000ef96:	0763      	lsls	r3, r4, #29
1000ef98:	d5f0      	bpl.n	1000ef7c <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000ef9a:	2040      	movs	r0, #64	@ 0x40
1000ef9c:	f7ff ff26 	bl	1000edec <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
1000efa0:	4620      	mov	r0, r4
}
1000efa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1000efa6:	f000 bf41 	b.w	1000fe2c <MXC_GPIO_Common_Init>
1000efaa:	bf00      	nop

1000efac <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
1000efac:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
1000efae:	4b7f      	ldr	r3, [pc, #508]	@ (1000f1ac <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
1000efb0:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
1000efb2:	429d      	cmp	r5, r3
{
1000efb4:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
1000efb6:	d037      	beq.n	1000f028 <MXC_GPIO_Config+0x7c>
1000efb8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000efbc:	429d      	cmp	r5, r3
1000efbe:	d020      	beq.n	1000f002 <MXC_GPIO_Config+0x56>
1000efc0:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
1000efc4:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
1000efc8:	429d      	cmp	r5, r3
1000efca:	d07f      	beq.n	1000f0cc <MXC_GPIO_Config+0x120>
1000efcc:	4878      	ldr	r0, [pc, #480]	@ (1000f1b0 <MXC_GPIO_Config+0x204>)
1000efce:	1a28      	subs	r0, r5, r0
1000efd0:	fab0 f080 	clz	r0, r0
1000efd4:	0940      	lsrs	r0, r0, #5
1000efd6:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
1000efd8:	f7ff ffc8 	bl	1000ef6c <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
1000efdc:	4b74      	ldr	r3, [pc, #464]	@ (1000f1b0 <MXC_GPIO_Config+0x204>)
1000efde:	6822      	ldr	r2, [r4, #0]
1000efe0:	429a      	cmp	r2, r3
1000efe2:	d015      	beq.n	1000f010 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
1000efe4:	6862      	ldr	r2, [r4, #4]
1000efe6:	7a21      	ldrb	r1, [r4, #8]
1000efe8:	4628      	mov	r0, r5
1000efea:	f000 f94b 	bl	1000f284 <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
1000efee:	b9d0      	cbnz	r0, 1000f026 <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
1000eff0:	7a63      	ldrb	r3, [r4, #9]
1000eff2:	2b04      	cmp	r3, #4
1000eff4:	f200 80d7 	bhi.w	1000f1a6 <MXC_GPIO_Config+0x1fa>
1000eff8:	e8df f003 	tbb	[pc, r3]
1000effc:	2f3e4c5a 	.word	0x2f3e4c5a
1000f000:	18          	.byte	0x18
1000f001:	00          	.byte	0x00
1000f002:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
1000f004:	f7ff ffb2 	bl	1000ef6c <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
1000f008:	4b69      	ldr	r3, [pc, #420]	@ (1000f1b0 <MXC_GPIO_Config+0x204>)
1000f00a:	6822      	ldr	r2, [r4, #0]
1000f00c:	429a      	cmp	r2, r3
1000f00e:	d1e9      	bne.n	1000efe4 <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
1000f010:	7a23      	ldrb	r3, [r4, #8]
1000f012:	2b01      	cmp	r3, #1
1000f014:	f000 80bb 	beq.w	1000f18e <MXC_GPIO_Config+0x1e2>
1000f018:	2b02      	cmp	r3, #2
1000f01a:	f000 80a5 	beq.w	1000f168 <MXC_GPIO_Config+0x1bc>
1000f01e:	2b00      	cmp	r3, #0
1000f020:	d056      	beq.n	1000f0d0 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
1000f022:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
1000f026:	bd70      	pop	{r4, r5, r6, pc}
1000f028:	2001      	movs	r0, #1
1000f02a:	e7d5      	b.n	1000efd8 <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
1000f02c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f02e:	6862      	ldr	r2, [r4, #4]
1000f030:	ea23 0302 	bic.w	r3, r3, r2
1000f034:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1000f036:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f038:	4313      	orrs	r3, r2
1000f03a:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1000f03c:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f040:	ea23 0302 	bic.w	r3, r3, r2
1000f044:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
1000f048:	4b59      	ldr	r3, [pc, #356]	@ (1000f1b0 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
1000f04a:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
1000f04c:	429d      	cmp	r5, r3
1000f04e:	d039      	beq.n	1000f0c4 <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1000f050:	4628      	mov	r0, r5
}
1000f052:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1000f056:	f000 b8ff 	b.w	1000f258 <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
1000f05a:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f05c:	6862      	ldr	r2, [r4, #4]
1000f05e:	4313      	orrs	r3, r2
1000f060:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f062:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f064:	ea23 0302 	bic.w	r3, r3, r2
1000f068:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1000f06a:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f06e:	ea23 0302 	bic.w	r3, r3, r2
1000f072:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f076:	e7e7      	b.n	1000f048 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1000f078:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f07a:	6862      	ldr	r2, [r4, #4]
1000f07c:	ea23 0302 	bic.w	r3, r3, r2
1000f080:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1000f082:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f084:	4313      	orrs	r3, r2
1000f086:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1000f088:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f08c:	4313      	orrs	r3, r2
1000f08e:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f092:	e7d9      	b.n	1000f048 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
1000f094:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f096:	6862      	ldr	r2, [r4, #4]
1000f098:	4313      	orrs	r3, r2
1000f09a:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f09c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f09e:	ea23 0302 	bic.w	r3, r3, r2
1000f0a2:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1000f0a4:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f0a8:	4313      	orrs	r3, r2
1000f0aa:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f0ae:	e7cb      	b.n	1000f048 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1000f0b0:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f0b2:	6862      	ldr	r2, [r4, #4]
1000f0b4:	ea23 0302 	bic.w	r3, r3, r2
1000f0b8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f0ba:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f0bc:	ea23 0302 	bic.w	r3, r3, r2
1000f0c0:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
1000f0c2:	e7c1      	b.n	1000f048 <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
1000f0c4:	2900      	cmp	r1, #0
1000f0c6:	d0ac      	beq.n	1000f022 <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
1000f0c8:	2000      	movs	r0, #0
}
1000f0ca:	bd70      	pop	{r4, r5, r6, pc}
1000f0cc:	2004      	movs	r0, #4
1000f0ce:	e783      	b.n	1000efd8 <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
1000f0d0:	6863      	ldr	r3, [r4, #4]
1000f0d2:	4938      	ldr	r1, [pc, #224]	@ (1000f1b4 <MXC_GPIO_Config+0x208>)
1000f0d4:	0058      	lsls	r0, r3, #1
1000f0d6:	011a      	lsls	r2, r3, #4
1000f0d8:	6a0e      	ldr	r6, [r1, #32]
1000f0da:	f000 0002 	and.w	r0, r0, #2
1000f0de:	f002 0220 	and.w	r2, r2, #32
1000f0e2:	4302      	orrs	r2, r0
1000f0e4:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f0e8:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
1000f0ea:	688a      	ldr	r2, [r1, #8]
1000f0ec:	f3c3 0340 	ubfx	r3, r3, #1, #1
1000f0f0:	4303      	orrs	r3, r0
1000f0f2:	ea22 0303 	bic.w	r3, r2, r3
1000f0f6:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
1000f0f8:	7a63      	ldrb	r3, [r4, #9]
1000f0fa:	2b04      	cmp	r3, #4
1000f0fc:	d891      	bhi.n	1000f022 <MXC_GPIO_Config+0x76>
1000f0fe:	e8df f003 	tbb	[pc, r3]
1000f102:	1b26      	.short	0x1b26
1000f104:	1b03      	.short	0x1b03
1000f106:	03          	.byte	0x03
1000f107:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
1000f108:	6862      	ldr	r2, [r4, #4]
1000f10a:	492a      	ldr	r1, [pc, #168]	@ (1000f1b4 <MXC_GPIO_Config+0x208>)
1000f10c:	00d3      	lsls	r3, r2, #3
1000f10e:	6a08      	ldr	r0, [r1, #32]
1000f110:	f003 0310 	and.w	r3, r3, #16
1000f114:	f002 0601 	and.w	r6, r2, #1
1000f118:	4333      	orrs	r3, r6
1000f11a:	ea20 0303 	bic.w	r3, r0, r3
1000f11e:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
1000f120:	0156      	lsls	r6, r2, #5
1000f122:	0093      	lsls	r3, r2, #2
1000f124:	6a08      	ldr	r0, [r1, #32]
1000f126:	f003 0304 	and.w	r3, r3, #4
1000f12a:	f006 0640 	and.w	r6, r6, #64	@ 0x40
1000f12e:	4333      	orrs	r3, r6
1000f130:	ea20 0303 	bic.w	r3, r0, r3
1000f134:	620b      	str	r3, [r1, #32]
            break;
1000f136:	e787      	b.n	1000f048 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
1000f138:	491e      	ldr	r1, [pc, #120]	@ (1000f1b4 <MXC_GPIO_Config+0x208>)
1000f13a:	6862      	ldr	r2, [r4, #4]
1000f13c:	6a0e      	ldr	r6, [r1, #32]
1000f13e:	00d3      	lsls	r3, r2, #3
1000f140:	f002 0001 	and.w	r0, r2, #1
1000f144:	f003 0310 	and.w	r3, r3, #16
1000f148:	4330      	orrs	r0, r6
1000f14a:	4303      	orrs	r3, r0
1000f14c:	e7e7      	b.n	1000f11e <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
1000f14e:	6862      	ldr	r2, [r4, #4]
1000f150:	4818      	ldr	r0, [pc, #96]	@ (1000f1b4 <MXC_GPIO_Config+0x208>)
1000f152:	0093      	lsls	r3, r2, #2
1000f154:	0151      	lsls	r1, r2, #5
1000f156:	6a06      	ldr	r6, [r0, #32]
1000f158:	f003 0304 	and.w	r3, r3, #4
1000f15c:	f001 0140 	and.w	r1, r1, #64	@ 0x40
1000f160:	430b      	orrs	r3, r1
1000f162:	4333      	orrs	r3, r6
1000f164:	6203      	str	r3, [r0, #32]
            break;
1000f166:	e76f      	b.n	1000f048 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f168:	6863      	ldr	r3, [r4, #4]
1000f16a:	4912      	ldr	r1, [pc, #72]	@ (1000f1b4 <MXC_GPIO_Config+0x208>)
1000f16c:	0058      	lsls	r0, r3, #1
1000f16e:	011a      	lsls	r2, r3, #4
1000f170:	6a0e      	ldr	r6, [r1, #32]
1000f172:	f000 0002 	and.w	r0, r0, #2
1000f176:	f002 0220 	and.w	r2, r2, #32
1000f17a:	4302      	orrs	r2, r0
1000f17c:	4332      	orrs	r2, r6
1000f17e:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
1000f180:	688a      	ldr	r2, [r1, #8]
1000f182:	f3c3 0340 	ubfx	r3, r3, #1, #1
1000f186:	4303      	orrs	r3, r0
1000f188:	4313      	orrs	r3, r2
1000f18a:	608b      	str	r3, [r1, #8]
            break;
1000f18c:	e7b4      	b.n	1000f0f8 <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f18e:	6863      	ldr	r3, [r4, #4]
1000f190:	4908      	ldr	r1, [pc, #32]	@ (1000f1b4 <MXC_GPIO_Config+0x208>)
1000f192:	0058      	lsls	r0, r3, #1
1000f194:	011a      	lsls	r2, r3, #4
1000f196:	6a0e      	ldr	r6, [r1, #32]
1000f198:	f000 0002 	and.w	r0, r0, #2
1000f19c:	f002 0220 	and.w	r2, r2, #32
1000f1a0:	4302      	orrs	r2, r0
1000f1a2:	4332      	orrs	r2, r6
1000f1a4:	e7a0      	b.n	1000f0e8 <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
1000f1a6:	f06f 0002 	mvn.w	r0, #2
}
1000f1aa:	bd70      	pop	{r4, r5, r6, pc}
1000f1ac:	40008000 	.word	0x40008000
1000f1b0:	40080600 	.word	0x40080600
1000f1b4:	40006c00 	.word	0x40006c00

1000f1b8 <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
1000f1b8:	4a08      	ldr	r2, [pc, #32]	@ (1000f1dc <MXC_GPIO_OutSet+0x24>)
1000f1ba:	4290      	cmp	r0, r2
1000f1bc:	d001      	beq.n	1000f1c2 <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
1000f1be:	f000 b843 	b.w	1000f248 <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f1c2:	4807      	ldr	r0, [pc, #28]	@ (1000f1e0 <MXC_GPIO_OutSet+0x28>)
{
1000f1c4:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f1c6:	6a04      	ldr	r4, [r0, #32]
1000f1c8:	00ca      	lsls	r2, r1, #3
1000f1ca:	f001 0101 	and.w	r1, r1, #1
1000f1ce:	4321      	orrs	r1, r4
1000f1d0:	f002 0310 	and.w	r3, r2, #16
1000f1d4:	430b      	orrs	r3, r1
}
1000f1d6:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f1d8:	6203      	str	r3, [r0, #32]
}
1000f1da:	4770      	bx	lr
1000f1dc:	40080600 	.word	0x40080600
1000f1e0:	40006c00 	.word	0x40006c00

1000f1e4 <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
1000f1e4:	4a09      	ldr	r2, [pc, #36]	@ (1000f20c <MXC_GPIO_OutClr+0x28>)
1000f1e6:	4290      	cmp	r0, r2
1000f1e8:	d001      	beq.n	1000f1ee <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
1000f1ea:	f000 b82f 	b.w	1000f24c <MXC_GPIO_RevA_OutClr>
{
1000f1ee:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
1000f1f0:	4c07      	ldr	r4, [pc, #28]	@ (1000f210 <MXC_GPIO_OutClr+0x2c>)
1000f1f2:	00ca      	lsls	r2, r1, #3
1000f1f4:	6a20      	ldr	r0, [r4, #32]
1000f1f6:	f002 0210 	and.w	r2, r2, #16
1000f1fa:	f001 0101 	and.w	r1, r1, #1
1000f1fe:	ea42 0301 	orr.w	r3, r2, r1
1000f202:	ea20 0303 	bic.w	r3, r0, r3
1000f206:	6223      	str	r3, [r4, #32]
}
1000f208:	bc10      	pop	{r4}
1000f20a:	4770      	bx	lr
1000f20c:	40080600 	.word	0x40080600
1000f210:	40006c00 	.word	0x40006c00

1000f214 <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
1000f214:	f000 be1c 	b.w	1000fe50 <MXC_GPIO_Common_Handler>

1000f218 <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
1000f218:	4a03      	ldr	r2, [pc, #12]	@ (1000f228 <MXC_GPIO_ClearFlags+0x10>)
1000f21a:	4290      	cmp	r0, r2
1000f21c:	d001      	beq.n	1000f222 <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
1000f21e:	f000 b817 	b.w	1000f250 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
1000f222:	4a02      	ldr	r2, [pc, #8]	@ (1000f22c <MXC_GPIO_ClearFlags+0x14>)
1000f224:	61d1      	str	r1, [r2, #28]
}
1000f226:	4770      	bx	lr
1000f228:	40080600 	.word	0x40080600
1000f22c:	40006800 	.word	0x40006800

1000f230 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
1000f230:	4b03      	ldr	r3, [pc, #12]	@ (1000f240 <MXC_GPIO_GetFlags+0x10>)
1000f232:	4298      	cmp	r0, r3
1000f234:	d001      	beq.n	1000f23a <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
1000f236:	f000 b80d 	b.w	1000f254 <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
1000f23a:	4b02      	ldr	r3, [pc, #8]	@ (1000f244 <MXC_GPIO_GetFlags+0x14>)
1000f23c:	69d8      	ldr	r0, [r3, #28]
}
1000f23e:	4770      	bx	lr
1000f240:	40080600 	.word	0x40080600
1000f244:	40006800 	.word	0x40006800

1000f248 <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
1000f248:	61c1      	str	r1, [r0, #28]
}
1000f24a:	4770      	bx	lr

1000f24c <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
1000f24c:	6201      	str	r1, [r0, #32]
}
1000f24e:	4770      	bx	lr

1000f250 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
1000f250:	6481      	str	r1, [r0, #72]	@ 0x48
}
1000f252:	4770      	bx	lr

1000f254 <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
1000f254:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
1000f256:	4770      	bx	lr

1000f258 <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
1000f258:	b159      	cbz	r1, 1000f272 <MXC_GPIO_RevA_SetVSSEL+0x1a>
1000f25a:	2901      	cmp	r1, #1
1000f25c:	d106      	bne.n	1000f26c <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
1000f25e:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1000f262:	4313      	orrs	r3, r2
1000f264:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f268:	2000      	movs	r0, #0
}
1000f26a:	4770      	bx	lr
    switch (vssel) {
1000f26c:	f06f 0002 	mvn.w	r0, #2
1000f270:	4770      	bx	lr
        port->vssel &= ~mask;
1000f272:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1000f276:	ea23 0302 	bic.w	r3, r3, r2
1000f27a:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
1000f27e:	2000      	movs	r0, #0
}
1000f280:	4770      	bx	lr
1000f282:	bf00      	nop

1000f284 <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
1000f284:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000f286:	4313      	orrs	r3, r2
1000f288:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
1000f28a:	6042      	str	r2, [r0, #4]

    switch (func) {
1000f28c:	2905      	cmp	r1, #5
1000f28e:	d82c      	bhi.n	1000f2ea <MXC_GPIO_RevA_SetAF+0x66>
1000f290:	e8df f001 	tbb	[pc, r1]
1000f294:	1f19120a 	.word	0x1f19120a
1000f298:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
1000f29a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1000f29e:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
1000f2a0:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1000f2a2:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f2a4:	2000      	movs	r0, #0
1000f2a6:	4770      	bx	lr
        port->outen_clr = mask;
1000f2a8:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
1000f2aa:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
1000f2ac:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1000f2ae:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1000f2b0:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
1000f2b4:	2000      	movs	r0, #0
1000f2b6:	4770      	bx	lr
        port->outen_set = mask;
1000f2b8:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
1000f2ba:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
1000f2bc:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1000f2be:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1000f2c0:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
1000f2c4:	e7ee      	b.n	1000f2a4 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f2c6:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1000f2ca:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
1000f2cc:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1000f2ce:	6082      	str	r2, [r0, #8]
        break;
1000f2d0:	e7e8      	b.n	1000f2a4 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f2d2:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1000f2d6:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
1000f2d8:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1000f2da:	6082      	str	r2, [r0, #8]
        break;
1000f2dc:	e7e2      	b.n	1000f2a4 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f2de:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1000f2e2:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
1000f2e4:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1000f2e6:	6082      	str	r2, [r0, #8]
        break;
1000f2e8:	e7dc      	b.n	1000f2a4 <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
1000f2ea:	f06f 0002 	mvn.w	r0, #2
}
1000f2ee:	4770      	bx	lr

1000f2f0 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
1000f2f0:	f000 b8f6 	b.w	1000f4e0 <MXC_I2C_RevA_SetSlaveAddr>

1000f2f4 <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
1000f2f4:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
1000f2f6:	4b11      	ldr	r3, [pc, #68]	@ (1000f33c <MXC_I2C_Shutdown+0x48>)
1000f2f8:	4298      	cmp	r0, r3
1000f2fa:	d00d      	beq.n	1000f318 <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
1000f2fc:	4b10      	ldr	r3, [pc, #64]	@ (1000f340 <MXC_I2C_Shutdown+0x4c>)
1000f2fe:	4298      	cmp	r0, r3
1000f300:	d011      	beq.n	1000f326 <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
1000f302:	4b10      	ldr	r3, [pc, #64]	@ (1000f344 <MXC_I2C_Shutdown+0x50>)
1000f304:	4298      	cmp	r0, r3
1000f306:	d115      	bne.n	1000f334 <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
1000f308:	2038      	movs	r0, #56	@ 0x38
1000f30a:	f7ff fd4f 	bl	1000edac <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
1000f30e:	2034      	movs	r0, #52	@ 0x34
1000f310:	f7ff fe08 	bl	1000ef24 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
1000f314:	2000      	movs	r0, #0
}
1000f316:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
1000f318:	200d      	movs	r0, #13
1000f31a:	f7ff fd47 	bl	1000edac <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
1000f31e:	2010      	movs	r0, #16
1000f320:	f7ff fe00 	bl	1000ef24 <MXC_SYS_Reset_Periph>
1000f324:	e7f6      	b.n	1000f314 <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
1000f326:	201c      	movs	r0, #28
1000f328:	f7ff fd40 	bl	1000edac <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
1000f32c:	2020      	movs	r0, #32
1000f32e:	f7ff fdf9 	bl	1000ef24 <MXC_SYS_Reset_Periph>
1000f332:	e7ef      	b.n	1000f314 <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
1000f334:	f06f 0001 	mvn.w	r0, #1
}
1000f338:	bd08      	pop	{r3, pc}
1000f33a:	bf00      	nop
1000f33c:	4001d000 	.word	0x4001d000
1000f340:	4001e000 	.word	0x4001e000
1000f344:	4001f000 	.word	0x4001f000

1000f348 <MXC_I2C_Init>:
    if (i2c == NULL) {
1000f348:	b3c0      	cbz	r0, 1000f3bc <MXC_I2C_Init+0x74>
{
1000f34a:	b570      	push	{r4, r5, r6, lr}
1000f34c:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
1000f34e:	460d      	mov	r5, r1
1000f350:	4616      	mov	r6, r2
1000f352:	f7ff ffcf 	bl	1000f2f4 <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
1000f356:	4b1b      	ldr	r3, [pc, #108]	@ (1000f3c4 <MXC_I2C_Init+0x7c>)
1000f358:	429c      	cmp	r4, r3
1000f35a:	d012      	beq.n	1000f382 <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
1000f35c:	4b1a      	ldr	r3, [pc, #104]	@ (1000f3c8 <MXC_I2C_Init+0x80>)
1000f35e:	429c      	cmp	r4, r3
1000f360:	d01c      	beq.n	1000f39c <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
1000f362:	4b1a      	ldr	r3, [pc, #104]	@ (1000f3cc <MXC_I2C_Init+0x84>)
1000f364:	429c      	cmp	r4, r3
1000f366:	d126      	bne.n	1000f3b6 <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
1000f368:	2038      	movs	r0, #56	@ 0x38
1000f36a:	f7ff fd3f 	bl	1000edec <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
1000f36e:	4818      	ldr	r0, [pc, #96]	@ (1000f3d0 <MXC_I2C_Init+0x88>)
1000f370:	f7ff fe1c 	bl	1000efac <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f374:	4632      	mov	r2, r6
1000f376:	4629      	mov	r1, r5
1000f378:	4620      	mov	r0, r4
}
1000f37a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f37e:	f000 b849 	b.w	1000f414 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
1000f382:	200d      	movs	r0, #13
1000f384:	f7ff fd32 	bl	1000edec <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
1000f388:	4812      	ldr	r0, [pc, #72]	@ (1000f3d4 <MXC_I2C_Init+0x8c>)
1000f38a:	f7ff fe0f 	bl	1000efac <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f38e:	4632      	mov	r2, r6
1000f390:	4629      	mov	r1, r5
1000f392:	4620      	mov	r0, r4
}
1000f394:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f398:	f000 b83c 	b.w	1000f414 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
1000f39c:	201c      	movs	r0, #28
1000f39e:	f7ff fd25 	bl	1000edec <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
1000f3a2:	480d      	ldr	r0, [pc, #52]	@ (1000f3d8 <MXC_I2C_Init+0x90>)
1000f3a4:	f7ff fe02 	bl	1000efac <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f3a8:	4632      	mov	r2, r6
1000f3aa:	4629      	mov	r1, r5
1000f3ac:	4620      	mov	r0, r4
}
1000f3ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f3b2:	f000 b82f 	b.w	1000f414 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
1000f3b6:	f06f 0001 	mvn.w	r0, #1
}
1000f3ba:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
1000f3bc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f3c0:	4770      	bx	lr
1000f3c2:	bf00      	nop
1000f3c4:	4001d000 	.word	0x4001d000
1000f3c8:	4001e000 	.word	0x4001e000
1000f3cc:	4001f000 	.word	0x4001f000
1000f3d0:	10019064 	.word	0x10019064
1000f3d4:	1001907c 	.word	0x1001907c
1000f3d8:	10019070 	.word	0x10019070

1000f3dc <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
1000f3dc:	f000 b89a 	b.w	1000f514 <MXC_I2C_RevA_SetFrequency>

1000f3e0 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
1000f3e0:	f000 b8e8 	b.w	1000f5b4 <MXC_I2C_RevA_GetFrequency>

1000f3e4 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
1000f3e4:	f000 b8f6 	b.w	1000f5d4 <MXC_I2C_RevA_ReadRXFIFO>

1000f3e8 <MXC_I2C_GetRXFIFOAvailable>:
                                      (mxc_i2c_reva_dma_complete_cb_t)callback, config, MXC_DMA);
}

int MXC_I2C_GetRXFIFOAvailable(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
1000f3e8:	f000 b912 	b.w	1000f610 <MXC_I2C_RevA_GetRXFIFOAvailable>

1000f3ec <MXC_I2C_WriteTXFIFO>:
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
1000f3ec:	f000 b918 	b.w	1000f620 <MXC_I2C_RevA_WriteTXFIFO>

1000f3f0 <MXC_I2C_GetTXFIFOAvailable>:
                                       (mxc_i2c_reva_dma_complete_cb_t)callback, config, MXC_DMA);
}

int MXC_I2C_GetTXFIFOAvailable(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
1000f3f0:	f000 b92e 	b.w	1000f650 <MXC_I2C_RevA_GetTXFIFOAvailable>

1000f3f4 <MXC_I2C_ClearRXFIFO>:
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
1000f3f4:	f000 b938 	b.w	1000f668 <MXC_I2C_RevA_ClearRXFIFO>

1000f3f8 <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
1000f3f8:	f000 b93e 	b.w	1000f678 <MXC_I2C_RevA_ClearTXFIFO>

1000f3fc <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1000f3fc:	f000 b944 	b.w	1000f688 <MXC_I2C_RevA_ClearFlags>

1000f400 <MXC_I2C_EnableInt>:
}

void MXC_I2C_EnableInt(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_EnableInt((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1000f400:	f000 b946 	b.w	1000f690 <MXC_I2C_RevA_EnableInt>

1000f404 <MXC_I2C_DisableInt>:
}

void MXC_I2C_DisableInt(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_DisableInt((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1000f404:	f000 b94c 	b.w	1000f6a0 <MXC_I2C_RevA_DisableInt>

1000f408 <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
1000f408:	f000 b954 	b.w	1000f6b4 <MXC_I2C_RevA_Recover>

1000f40c <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1000f40c:	f000 b9be 	b.w	1000f78c <MXC_I2C_RevA_SetRXThreshold>

1000f410 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1000f410:	f000 b9cc 	b.w	1000f7ac <MXC_I2C_RevA_SetTXThreshold>

1000f414 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
1000f414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
1000f416:	2800      	cmp	r0, #0
1000f418:	d057      	beq.n	1000f4ca <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
1000f41a:	460f      	mov	r7, r1
1000f41c:	2110      	movs	r1, #16
1000f41e:	4615      	mov	r5, r2
1000f420:	4604      	mov	r4, r0
1000f422:	f7ff fff1 	bl	1000f408 <MXC_I2C_Recover>
1000f426:	4606      	mov	r6, r0
1000f428:	b108      	cbz	r0, 1000f42e <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
1000f42a:	4630      	mov	r0, r6
1000f42c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f42e:	6823      	ldr	r3, [r4, #0]
1000f430:	f043 0301 	orr.w	r3, r3, #1
1000f434:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
1000f436:	4620      	mov	r0, r4
1000f438:	f7ff ffdc 	bl	1000f3f4 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
1000f43c:	4620      	mov	r0, r4
1000f43e:	f7ff ffdb 	bl	1000f3f8 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
1000f442:	2102      	movs	r1, #2
1000f444:	4620      	mov	r0, r4
1000f446:	f7ff ffe3 	bl	1000f410 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
1000f44a:	2106      	movs	r1, #6
1000f44c:	4620      	mov	r0, r4
1000f44e:	f7ff ffdd 	bl	1000f40c <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
1000f452:	b1df      	cbz	r7, 1000f48c <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f454:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f456:	4a1e      	ldr	r2, [pc, #120]	@ (1000f4d0 <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f458:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f45c:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f45e:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f460:	d02f      	beq.n	1000f4c2 <MXC_I2C_RevA_Init+0xae>
1000f462:	4b1c      	ldr	r3, [pc, #112]	@ (1000f4d4 <MXC_I2C_RevA_Init+0xc0>)
1000f464:	429c      	cmp	r4, r3
1000f466:	d00f      	beq.n	1000f488 <MXC_I2C_RevA_Init+0x74>
1000f468:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f46c:	429c      	cmp	r4, r3
1000f46e:	bf14      	ite	ne
1000f470:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
1000f474:	2402      	moveq	r4, #2
1000f476:	4b18      	ldr	r3, [pc, #96]	@ (1000f4d8 <MXC_I2C_RevA_Init+0xc4>)
1000f478:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000f47c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
1000f480:	2201      	movs	r2, #1
1000f482:	605a      	str	r2, [r3, #4]
}
1000f484:	4630      	mov	r0, r6
1000f486:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f488:	2401      	movs	r4, #1
1000f48a:	e7f4      	b.n	1000f476 <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
1000f48c:	463a      	mov	r2, r7
1000f48e:	4629      	mov	r1, r5
1000f490:	4620      	mov	r0, r4
1000f492:	f7ff ff2d 	bl	1000f2f0 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1000f496:	4b0e      	ldr	r3, [pc, #56]	@ (1000f4d0 <MXC_I2C_RevA_Init+0xbc>)
1000f498:	429c      	cmp	r4, r3
1000f49a:	d009      	beq.n	1000f4b0 <MXC_I2C_RevA_Init+0x9c>
1000f49c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f4a0:	429c      	cmp	r4, r3
1000f4a2:	d010      	beq.n	1000f4c6 <MXC_I2C_RevA_Init+0xb2>
1000f4a4:	4f0d      	ldr	r7, [pc, #52]	@ (1000f4dc <MXC_I2C_RevA_Init+0xc8>)
1000f4a6:	42bc      	cmp	r4, r7
1000f4a8:	bf14      	ite	ne
1000f4aa:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
1000f4ae:	2702      	moveq	r7, #2
1000f4b0:	4b09      	ldr	r3, [pc, #36]	@ (1000f4d8 <MXC_I2C_RevA_Init+0xc4>)
1000f4b2:	eb07 0147 	add.w	r1, r7, r7, lsl #1
1000f4b6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1000f4ba:	2200      	movs	r2, #0
1000f4bc:	605a      	str	r2, [r3, #4]
}
1000f4be:	4630      	mov	r0, r6
1000f4c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f4c2:	4634      	mov	r4, r6
1000f4c4:	e7d7      	b.n	1000f476 <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1000f4c6:	2701      	movs	r7, #1
1000f4c8:	e7f2      	b.n	1000f4b0 <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
1000f4ca:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
1000f4ce:	e7ac      	b.n	1000f42a <MXC_I2C_RevA_Init+0x16>
1000f4d0:	4001d000 	.word	0x4001d000
1000f4d4:	4001e000 	.word	0x4001e000
1000f4d8:	20000fe0 	.word	0x20000fe0
1000f4dc:	4001f000 	.word	0x4001f000

1000f4e0 <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
1000f4e0:	4603      	mov	r3, r0
1000f4e2:	b1a0      	cbz	r0, 1000f50e <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
1000f4e4:	b96a      	cbnz	r2, 1000f502 <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
1000f4e6:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
1000f4ea:	d20d      	bcs.n	1000f508 <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
1000f4ec:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
1000f4ee:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
1000f4f0:	bf84      	itt	hi
1000f4f2:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
1000f4f6:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
1000f4f8:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
1000f4fa:	430a      	orrs	r2, r1

    return E_NO_ERROR;
1000f4fc:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
1000f4fe:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
1000f500:	4770      	bx	lr
        return E_NOT_SUPPORTED;
1000f502:	f06f 0010 	mvn.w	r0, #16
1000f506:	4770      	bx	lr
        return E_BAD_PARAM;
1000f508:	f06f 0002 	mvn.w	r0, #2
}
1000f50c:	4770      	bx	lr
        return E_NULL_PTR;
1000f50e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000f512:	4770      	bx	lr

1000f514 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
1000f514:	2800      	cmp	r0, #0
1000f516:	d03f      	beq.n	1000f598 <MXC_I2C_RevA_SetFrequency+0x84>
{
1000f518:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
1000f51a:	4a21      	ldr	r2, [pc, #132]	@ (1000f5a0 <MXC_I2C_RevA_SetFrequency+0x8c>)
1000f51c:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
1000f520:	f46f 7410 	mvn.w	r4, #576	@ 0x240
1000f524:	4423      	add	r3, r4
1000f526:	4293      	cmp	r3, r2
1000f528:	d313      	bcc.n	1000f552 <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
1000f52a:	4b1e      	ldr	r3, [pc, #120]	@ (1000f5a4 <MXC_I2C_RevA_SetFrequency+0x90>)
1000f52c:	4299      	cmp	r1, r3
1000f52e:	d82f      	bhi.n	1000f590 <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
1000f530:	4b1d      	ldr	r3, [pc, #116]	@ (1000f5a8 <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
1000f532:	681b      	ldr	r3, [r3, #0]
1000f534:	085b      	lsrs	r3, r3, #1
1000f536:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
1000f53a:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1000f53c:	1e9a      	subs	r2, r3, #2
1000f53e:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
1000f542:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1000f546:	d823      	bhi.n	1000f590 <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
1000f548:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
1000f54a:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
1000f54c:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
1000f54e:	f7ff bf47 	b.w	1000f3e0 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
1000f552:	4b15      	ldr	r3, [pc, #84]	@ (1000f5a8 <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f554:	4c15      	ldr	r4, [pc, #84]	@ (1000f5ac <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
1000f556:	681b      	ldr	r3, [r3, #0]
1000f558:	085b      	lsrs	r3, r3, #1
1000f55a:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f55e:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
1000f560:	fba4 c101 	umull	ip, r1, r4, r1
1000f564:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f566:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
1000f56a:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f56c:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1000f56e:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f570:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1000f574:	dc0c      	bgt.n	1000f590 <MXC_I2C_RevA_SetFrequency+0x7c>
1000f576:	2a0f      	cmp	r2, #15
1000f578:	dc0a      	bgt.n	1000f590 <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
1000f57a:	0209      	lsls	r1, r1, #8
1000f57c:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
1000f57e:	b2d2      	uxtb	r2, r2
1000f580:	430a      	orrs	r2, r1
1000f582:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1000f584:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1000f586:	490a      	ldr	r1, [pc, #40]	@ (1000f5b0 <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1000f588:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
1000f58c:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1000f58e:	e7d2      	b.n	1000f536 <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
1000f590:	f06f 0002 	mvn.w	r0, #2
}
1000f594:	bc10      	pop	{r4}
1000f596:	4770      	bx	lr
        return E_NULL_PTR;
1000f598:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f59c:	4770      	bx	lr
1000f59e:	bf00      	nop
1000f5a0:	00249f00 	.word	0x00249f00
1000f5a4:	0033e140 	.word	0x0033e140
1000f5a8:	20001740 	.word	0x20001740
1000f5ac:	aaaaaaab 	.word	0xaaaaaaab
1000f5b0:	00061a80 	.word	0x00061a80

1000f5b4 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
1000f5b4:	4906      	ldr	r1, [pc, #24]	@ (1000f5d0 <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1000f5b6:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1000f5b8:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
1000f5ba:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1000f5bc:	f3c2 0208 	ubfx	r2, r2, #0, #9
1000f5c0:	f3c3 0308 	ubfx	r3, r3, #0, #9
1000f5c4:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
1000f5c6:	0840      	lsrs	r0, r0, #1
}
1000f5c8:	fbb0 f0f3 	udiv	r0, r0, r3
1000f5cc:	4770      	bx	lr
1000f5ce:	bf00      	nop
1000f5d0:	20001740 	.word	0x20001740

1000f5d4 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
1000f5d4:	b1c8      	cbz	r0, 1000f60a <MXC_I2C_RevA_ReadRXFIFO+0x36>
1000f5d6:	b1c1      	cbz	r1, 1000f60a <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f5d8:	b1aa      	cbz	r2, 1000f606 <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
1000f5da:	b500      	push	{lr}
    unsigned read = 0;
1000f5dc:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
1000f5de:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
1000f5e2:	e007      	b.n	1000f5f4 <MXC_I2C_RevA_ReadRXFIFO+0x20>
1000f5e4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000f5e6:	3301      	adds	r3, #1
1000f5e8:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f5ec:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
1000f5ee:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f5f2:	d005      	beq.n	1000f600 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
1000f5f4:	6841      	ldr	r1, [r0, #4]
1000f5f6:	0789      	lsls	r1, r1, #30
1000f5f8:	d5f4      	bpl.n	1000f5e4 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
1000f5fa:	4618      	mov	r0, r3
}
1000f5fc:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
1000f600:	4610      	mov	r0, r2
}
1000f602:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f606:	4610      	mov	r0, r2
1000f608:	4770      	bx	lr
        return E_NULL_PTR;
1000f60a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f60e:	4770      	bx	lr

1000f610 <MXC_I2C_RevA_GetRXFIFOAvailable>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_GetRXFIFOAvailable(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1000f610:	b118      	cbz	r0, 1000f61a <MXC_I2C_RevA_GetRXFIFOAvailable+0xa>
        return E_NULL_PTR;
    }

    return (i2c->rxctrl1 & MXC_F_I2C_REVA_RXCTRL1_LVL) >> MXC_F_I2C_REVA_RXCTRL1_LVL_POS;
1000f612:	6a00      	ldr	r0, [r0, #32]
1000f614:	f3c0 2003 	ubfx	r0, r0, #8, #4
1000f618:	4770      	bx	lr
        return E_NULL_PTR;
1000f61a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f61e:	4770      	bx	lr

1000f620 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
1000f620:	b198      	cbz	r0, 1000f64a <MXC_I2C_RevA_WriteTXFIFO+0x2a>
1000f622:	b191      	cbz	r1, 1000f64a <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f624:	b17a      	cbz	r2, 1000f646 <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
1000f626:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
1000f628:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
1000f62c:	e006      	b.n	1000f63c <MXC_I2C_RevA_WriteTXFIFO+0x1c>
1000f62e:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f630:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
1000f632:	f81c 1003 	ldrb.w	r1, [ip, r3]
1000f636:	b2c9      	uxtb	r1, r1
1000f638:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f63a:	d004      	beq.n	1000f646 <MXC_I2C_RevA_WriteTXFIFO+0x26>
1000f63c:	6841      	ldr	r1, [r0, #4]
1000f63e:	06c9      	lsls	r1, r1, #27
1000f640:	d5f5      	bpl.n	1000f62e <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
1000f642:	4618      	mov	r0, r3
1000f644:	4770      	bx	lr
1000f646:	4610      	mov	r0, r2
1000f648:	4770      	bx	lr
        return E_NULL_PTR;
1000f64a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f64e:	4770      	bx	lr

1000f650 <MXC_I2C_RevA_GetTXFIFOAvailable>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_GetTXFIFOAvailable(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1000f650:	b138      	cbz	r0, 1000f662 <MXC_I2C_RevA_GetTXFIFOAvailable+0x12>
        return E_NULL_PTR;
    }

    int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
1000f652:	6983      	ldr	r3, [r0, #24]
                    MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;
    return txFIFOlen -
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
1000f654:	6a82      	ldr	r2, [r0, #40]	@ 0x28
    return txFIFOlen -
1000f656:	f3c3 2007 	ubfx	r0, r3, #8, #8
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
1000f65a:	f3c2 2303 	ubfx	r3, r2, #8, #4
    return txFIFOlen -
1000f65e:	1ac0      	subs	r0, r0, r3
1000f660:	4770      	bx	lr
        return E_NULL_PTR;
1000f662:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f666:	4770      	bx	lr

1000f668 <MXC_I2C_RevA_ClearRXFIFO>:

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
1000f668:	69c3      	ldr	r3, [r0, #28]
1000f66a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f66e:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
1000f670:	69c3      	ldr	r3, [r0, #28]
1000f672:	061b      	lsls	r3, r3, #24
1000f674:	d4fc      	bmi.n	1000f670 <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
1000f676:	4770      	bx	lr

1000f678 <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
1000f678:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1000f67a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f67e:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
1000f680:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1000f682:	061b      	lsls	r3, r3, #24
1000f684:	d4fc      	bmi.n	1000f680 <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
1000f686:	4770      	bx	lr

1000f688 <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
1000f688:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
1000f68a:	6102      	str	r2, [r0, #16]
}
1000f68c:	4770      	bx	lr
1000f68e:	bf00      	nop

1000f690 <MXC_I2C_RevA_EnableInt>:

void MXC_I2C_RevA_EnableInt(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->inten0 |= flags0;
1000f690:	68c3      	ldr	r3, [r0, #12]
1000f692:	430b      	orrs	r3, r1
1000f694:	60c3      	str	r3, [r0, #12]
    i2c->inten1 |= flags1;
1000f696:	6943      	ldr	r3, [r0, #20]
1000f698:	4313      	orrs	r3, r2
1000f69a:	6143      	str	r3, [r0, #20]
}
1000f69c:	4770      	bx	lr
1000f69e:	bf00      	nop

1000f6a0 <MXC_I2C_RevA_DisableInt>:

void MXC_I2C_RevA_DisableInt(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->inten0 &= ~flags0;
1000f6a0:	68c3      	ldr	r3, [r0, #12]
1000f6a2:	ea23 0301 	bic.w	r3, r3, r1
1000f6a6:	60c3      	str	r3, [r0, #12]
    i2c->inten1 &= ~flags1;
1000f6a8:	6943      	ldr	r3, [r0, #20]
1000f6aa:	ea23 0302 	bic.w	r3, r3, r2
1000f6ae:	6143      	str	r3, [r0, #20]
}
1000f6b0:	4770      	bx	lr
1000f6b2:	bf00      	nop

1000f6b4 <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
1000f6b4:	2800      	cmp	r0, #0
1000f6b6:	d065      	beq.n	1000f784 <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f6b8:	6803      	ldr	r3, [r0, #0]
1000f6ba:	f043 0301 	orr.w	r3, r3, #1
{
1000f6be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f6c2:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f6c4:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f6c6:	6803      	ldr	r3, [r0, #0]
1000f6c8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
1000f6cc:	460e      	mov	r6, r1
1000f6ce:	4604      	mov	r4, r0
1000f6d0:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
1000f6d4:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
1000f6d6:	2900      	cmp	r1, #0
1000f6d8:	d043      	beq.n	1000f762 <MXC_I2C_RevA_Recover+0xae>
1000f6da:	2500      	movs	r5, #0
1000f6dc:	e02b      	b.n	1000f736 <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f6de:	f7ff fb03 	bl	1000ece8 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f6e2:	6823      	ldr	r3, [r4, #0]
1000f6e4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1000f6e8:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f6ea:	200a      	movs	r0, #10
1000f6ec:	f7ff fafc 	bl	1000ece8 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
1000f6f0:	6823      	ldr	r3, [r4, #0]
1000f6f2:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f6f6:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
1000f6fa:	d12b      	bne.n	1000f754 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
1000f6fc:	f7ff faf4 	bl	1000ece8 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f700:	6823      	ldr	r3, [r4, #0]
1000f702:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f706:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f708:	200a      	movs	r0, #10
1000f70a:	f7ff faed 	bl	1000ece8 <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
1000f70e:	6823      	ldr	r3, [r4, #0]
1000f710:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f712:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
1000f716:	d51d      	bpl.n	1000f754 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
1000f718:	f7ff fae6 	bl	1000ece8 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
1000f71c:	6823      	ldr	r3, [r4, #0]
1000f71e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000f722:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f724:	200a      	movs	r0, #10
1000f726:	f7ff fadf 	bl	1000ece8 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f72a:	6823      	ldr	r3, [r4, #0]
1000f72c:	05db      	lsls	r3, r3, #23
1000f72e:	d425      	bmi.n	1000f77c <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
1000f730:	3501      	adds	r5, #1
1000f732:	42ae      	cmp	r6, r5
1000f734:	d015      	beq.n	1000f762 <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
1000f736:	200a      	movs	r0, #10
1000f738:	f7ff fad6 	bl	1000ece8 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
1000f73c:	6823      	ldr	r3, [r4, #0]
1000f73e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000f742:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
1000f744:	200a      	movs	r0, #10
1000f746:	f7ff facf 	bl	1000ece8 <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f74a:	6823      	ldr	r3, [r4, #0]
1000f74c:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
1000f74e:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f752:	d5c4      	bpl.n	1000f6de <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f754:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
1000f756:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f758:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
1000f75c:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f75e:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
1000f760:	d1e9      	bne.n	1000f736 <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
1000f762:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
1000f766:	b91f      	cbnz	r7, 1000f770 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f768:	6823      	ldr	r3, [r4, #0]
1000f76a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1000f76e:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
1000f770:	6823      	ldr	r3, [r4, #0]
1000f772:	f023 0301 	bic.w	r3, r3, #1
1000f776:	6023      	str	r3, [r4, #0]

    return err;
}
1000f778:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
1000f77c:	4640      	mov	r0, r8
    if (swBit == 0) {
1000f77e:	2f00      	cmp	r7, #0
1000f780:	d1f6      	bne.n	1000f770 <MXC_I2C_RevA_Recover+0xbc>
1000f782:	e7f1      	b.n	1000f768 <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
1000f784:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f788:	4770      	bx	lr
1000f78a:	bf00      	nop

1000f78c <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
1000f78c:	6982      	ldr	r2, [r0, #24]
1000f78e:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
1000f790:	428a      	cmp	r2, r1
{
1000f792:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
1000f794:	d307      	bcc.n	1000f7a6 <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1000f796:	69c2      	ldr	r2, [r0, #28]
1000f798:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
1000f79c:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
1000f7a0:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1000f7a2:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
1000f7a4:	4770      	bx	lr
        return E_BAD_PARAM;
1000f7a6:	f06f 0002 	mvn.w	r0, #2
}
1000f7aa:	4770      	bx	lr

1000f7ac <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
1000f7ac:	6982      	ldr	r2, [r0, #24]
1000f7ae:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
1000f7b2:	428a      	cmp	r2, r1
{
1000f7b4:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
1000f7b6:	d307      	bcc.n	1000f7c8 <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
1000f7b8:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000f7ba:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
1000f7be:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
1000f7c2:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
1000f7c4:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
1000f7c6:	4770      	bx	lr
        return E_BAD_PARAM;
1000f7c8:	f06f 0002 	mvn.w	r0, #2
}
1000f7cc:	4770      	bx	lr
1000f7ce:	bf00      	nop

1000f7d0 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
1000f7d0:	f000 b800 	b.w	1000f7d4 <MXC_ICC_RevA_Enable>

1000f7d4 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
1000f7d4:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1000f7d8:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
1000f7da:	f023 0301 	bic.w	r3, r3, #1
1000f7de:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1000f7e2:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
1000f7e6:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
1000f7ea:	03da      	lsls	r2, r3, #15
1000f7ec:	d5fb      	bpl.n	1000f7e6 <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
1000f7ee:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
1000f7f2:	f043 0301 	orr.w	r3, r3, #1
1000f7f6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
1000f7fa:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
1000f7fe:	03db      	lsls	r3, r3, #15
1000f800:	d5fb      	bpl.n	1000f7fa <MXC_ICC_RevA_Enable+0x26>
}
1000f802:	4770      	bx	lr

1000f804 <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
1000f804:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
1000f806:	4b16      	ldr	r3, [pc, #88]	@ (1000f860 <MXC_UART_Shutdown+0x5c>)
1000f808:	4298      	cmp	r0, r3
1000f80a:	d010      	beq.n	1000f82e <MXC_UART_Shutdown+0x2a>
1000f80c:	4b15      	ldr	r3, [pc, #84]	@ (1000f864 <MXC_UART_Shutdown+0x60>)
1000f80e:	4298      	cmp	r0, r3
1000f810:	d014      	beq.n	1000f83c <MXC_UART_Shutdown+0x38>
1000f812:	4b15      	ldr	r3, [pc, #84]	@ (1000f868 <MXC_UART_Shutdown+0x64>)
1000f814:	4298      	cmp	r0, r3
1000f816:	d018      	beq.n	1000f84a <MXC_UART_Shutdown+0x46>
1000f818:	4b14      	ldr	r3, [pc, #80]	@ (1000f86c <MXC_UART_Shutdown+0x68>)
1000f81a:	4298      	cmp	r0, r3
1000f81c:	d11c      	bne.n	1000f858 <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
1000f81e:	2044      	movs	r0, #68	@ 0x44
1000f820:	f7ff fb80 	bl	1000ef24 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
1000f824:	2044      	movs	r0, #68	@ 0x44
1000f826:	f7ff fac1 	bl	1000edac <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f82a:	2000      	movs	r0, #0
}
1000f82c:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
1000f82e:	200b      	movs	r0, #11
1000f830:	f7ff fb78 	bl	1000ef24 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
1000f834:	2009      	movs	r0, #9
1000f836:	f7ff fab9 	bl	1000edac <MXC_SYS_ClockDisable>
        break;
1000f83a:	e7f6      	b.n	1000f82a <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
1000f83c:	200c      	movs	r0, #12
1000f83e:	f7ff fb71 	bl	1000ef24 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
1000f842:	200a      	movs	r0, #10
1000f844:	f7ff fab2 	bl	1000edac <MXC_SYS_ClockDisable>
        break;
1000f848:	e7ef      	b.n	1000f82a <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
1000f84a:	201c      	movs	r0, #28
1000f84c:	f7ff fb6a 	bl	1000ef24 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
1000f850:	2021      	movs	r0, #33	@ 0x21
1000f852:	f7ff faab 	bl	1000edac <MXC_SYS_ClockDisable>
        break;
1000f856:	e7e8      	b.n	1000f82a <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
1000f858:	f06f 0002 	mvn.w	r0, #2
}
1000f85c:	bd08      	pop	{r3, pc}
1000f85e:	bf00      	nop
1000f860:	40042000 	.word	0x40042000
1000f864:	40043000 	.word	0x40043000
1000f868:	40044000 	.word	0x40044000
1000f86c:	40081400 	.word	0x40081400

1000f870 <MXC_UART_Init>:
{
1000f870:	b570      	push	{r4, r5, r6, lr}
1000f872:	4604      	mov	r4, r0
1000f874:	460e      	mov	r6, r1
1000f876:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
1000f878:	f7ff ffc4 	bl	1000f804 <MXC_UART_Shutdown>
    if (retval) {
1000f87c:	bba8      	cbnz	r0, 1000f8ea <MXC_UART_Init+0x7a>
    switch (clock) {
1000f87e:	2d02      	cmp	r5, #2
1000f880:	d02d      	beq.n	1000f8de <MXC_UART_Init+0x6e>
1000f882:	2d04      	cmp	r5, #4
1000f884:	d018      	beq.n	1000f8b8 <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
1000f886:	4b20      	ldr	r3, [pc, #128]	@ (1000f908 <MXC_UART_Init+0x98>)
1000f888:	429c      	cmp	r4, r3
1000f88a:	d01b      	beq.n	1000f8c4 <MXC_UART_Init+0x54>
1000f88c:	4b1f      	ldr	r3, [pc, #124]	@ (1000f90c <MXC_UART_Init+0x9c>)
1000f88e:	429c      	cmp	r4, r3
1000f890:	d02c      	beq.n	1000f8ec <MXC_UART_Init+0x7c>
1000f892:	4b1f      	ldr	r3, [pc, #124]	@ (1000f910 <MXC_UART_Init+0xa0>)
1000f894:	429c      	cmp	r4, r3
1000f896:	d030      	beq.n	1000f8fa <MXC_UART_Init+0x8a>
1000f898:	4b1e      	ldr	r3, [pc, #120]	@ (1000f914 <MXC_UART_Init+0xa4>)
1000f89a:	429c      	cmp	r4, r3
1000f89c:	d123      	bne.n	1000f8e6 <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
1000f89e:	481e      	ldr	r0, [pc, #120]	@ (1000f918 <MXC_UART_Init+0xa8>)
1000f8a0:	f7ff fb84 	bl	1000efac <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
1000f8a4:	2044      	movs	r0, #68	@ 0x44
1000f8a6:	f7ff faa1 	bl	1000edec <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f8aa:	462a      	mov	r2, r5
1000f8ac:	4631      	mov	r1, r6
1000f8ae:	4620      	mov	r0, r4
}
1000f8b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f8b4:	f000 b8f8 	b.w	1000faa8 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
1000f8b8:	2006      	movs	r0, #6
1000f8ba:	f7ff fab9 	bl	1000ee30 <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
1000f8be:	4b12      	ldr	r3, [pc, #72]	@ (1000f908 <MXC_UART_Init+0x98>)
1000f8c0:	429c      	cmp	r4, r3
1000f8c2:	d1e3      	bne.n	1000f88c <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
1000f8c4:	4815      	ldr	r0, [pc, #84]	@ (1000f91c <MXC_UART_Init+0xac>)
1000f8c6:	f7ff fb71 	bl	1000efac <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
1000f8ca:	2009      	movs	r0, #9
1000f8cc:	f7ff fa8e 	bl	1000edec <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f8d0:	462a      	mov	r2, r5
1000f8d2:	4631      	mov	r1, r6
1000f8d4:	4620      	mov	r0, r4
}
1000f8d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f8da:	f000 b8e5 	b.w	1000faa8 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
1000f8de:	2005      	movs	r0, #5
1000f8e0:	f7ff faa6 	bl	1000ee30 <MXC_SYS_ClockSourceEnable>
        break;
1000f8e4:	e7cf      	b.n	1000f886 <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
1000f8e6:	f06f 0002 	mvn.w	r0, #2
}
1000f8ea:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
1000f8ec:	480c      	ldr	r0, [pc, #48]	@ (1000f920 <MXC_UART_Init+0xb0>)
1000f8ee:	f7ff fb5d 	bl	1000efac <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
1000f8f2:	200a      	movs	r0, #10
1000f8f4:	f7ff fa7a 	bl	1000edec <MXC_SYS_ClockEnable>
        break;
1000f8f8:	e7d7      	b.n	1000f8aa <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
1000f8fa:	480a      	ldr	r0, [pc, #40]	@ (1000f924 <MXC_UART_Init+0xb4>)
1000f8fc:	f7ff fb56 	bl	1000efac <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
1000f900:	2021      	movs	r0, #33	@ 0x21
1000f902:	f7ff fa73 	bl	1000edec <MXC_SYS_ClockEnable>
        break;
1000f906:	e7d0      	b.n	1000f8aa <MXC_UART_Init+0x3a>
1000f908:	40042000 	.word	0x40042000
1000f90c:	40043000 	.word	0x40043000
1000f910:	40044000 	.word	0x40044000
1000f914:	40081400 	.word	0x40081400
1000f918:	10019034 	.word	0x10019034
1000f91c:	10019058 	.word	0x10019058
1000f920:	1001904c 	.word	0x1001904c
1000f924:	10019040 	.word	0x10019040

1000f928 <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f928:	4b31      	ldr	r3, [pc, #196]	@ (1000f9f0 <MXC_UART_SetFrequency+0xc8>)
1000f92a:	4298      	cmp	r0, r3
{
1000f92c:	b510      	push	{r4, lr}
1000f92e:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f930:	d015      	beq.n	1000f95e <MXC_UART_SetFrequency+0x36>
1000f932:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f936:	4298      	cmp	r0, r3
1000f938:	d011      	beq.n	1000f95e <MXC_UART_SetFrequency+0x36>
1000f93a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f93e:	4298      	cmp	r0, r3
1000f940:	d00d      	beq.n	1000f95e <MXC_UART_SetFrequency+0x36>
1000f942:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000f946:	4298      	cmp	r0, r3
1000f948:	d106      	bne.n	1000f958 <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
1000f94a:	2305      	movs	r3, #5

        switch (clock) {
1000f94c:	2a02      	cmp	r2, #2
        uart->osr = 5;
1000f94e:	6143      	str	r3, [r0, #20]
        switch (clock) {
1000f950:	d014      	beq.n	1000f97c <MXC_UART_SetFrequency+0x54>
1000f952:	2a04      	cmp	r2, #4
1000f954:	d032      	beq.n	1000f9bc <MXC_UART_SetFrequency+0x94>
1000f956:	b18a      	cbz	r2, 1000f97c <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
1000f958:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
1000f95c:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
1000f95e:	2a04      	cmp	r2, #4
1000f960:	d0fa      	beq.n	1000f958 <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f962:	4620      	mov	r0, r4
1000f964:	f000 f8d8 	bl	1000fb18 <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
1000f968:	2800      	cmp	r0, #0
1000f96a:	ddf7      	ble.n	1000f95c <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
1000f96c:	6823      	ldr	r3, [r4, #0]
1000f96e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
1000f972:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
1000f974:	6823      	ldr	r3, [r4, #0]
1000f976:	031b      	lsls	r3, r3, #12
1000f978:	d5fc      	bpl.n	1000f974 <MXC_UART_SetFrequency+0x4c>
}
1000f97a:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
1000f97c:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1000f980:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
1000f984:	fb01 f203 	mul.w	r2, r1, r3
1000f988:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
1000f98c:	b113      	cbz	r3, 1000f994 <MXC_UART_SetFrequency+0x6c>
1000f98e:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1000f992:	d900      	bls.n	1000f996 <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
1000f994:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
1000f996:	4a17      	ldr	r2, [pc, #92]	@ (1000f9f4 <MXC_UART_SetFrequency+0xcc>)
1000f998:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
1000f99a:	6810      	ldr	r0, [r2, #0]
1000f99c:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
1000f9a0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1000f9a4:	d005      	beq.n	1000f9b2 <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1000f9a6:	6813      	ldr	r3, [r2, #0]
1000f9a8:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000f9ac:	d1d4      	bne.n	1000f958 <MXC_UART_SetFrequency+0x30>
1000f9ae:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
1000f9b2:	4b10      	ldr	r3, [pc, #64]	@ (1000f9f4 <MXC_UART_SetFrequency+0xcc>)
1000f9b4:	691b      	ldr	r3, [r3, #16]
1000f9b6:	fbb0 f0f3 	udiv	r0, r0, r3
1000f9ba:	e7d5      	b.n	1000f968 <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000f9bc:	6803      	ldr	r3, [r0, #0]
1000f9be:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
1000f9c2:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
1000f9c4:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
1000f9c6:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
1000f9ca:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
1000f9ce:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
1000f9d0:	d90a      	bls.n	1000f9e8 <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
1000f9d2:	2300      	movs	r3, #0
1000f9d4:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
1000f9d6:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
1000f9da:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
1000f9de:	fb01 f203 	mul.w	r2, r1, r3
1000f9e2:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
1000f9e6:	e7d1      	b.n	1000f98c <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
1000f9e8:	2301      	movs	r3, #1
1000f9ea:	6143      	str	r3, [r0, #20]
1000f9ec:	e7f3      	b.n	1000f9d6 <MXC_UART_SetFrequency+0xae>
1000f9ee:	bf00      	nop
1000f9f0:	40042000 	.word	0x40042000
1000f9f4:	40081400 	.word	0x40081400

1000f9f8 <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f9f8:	4b12      	ldr	r3, [pc, #72]	@ (1000fa44 <MXC_UART_GetFrequency+0x4c>)
1000f9fa:	4298      	cmp	r0, r3
1000f9fc:	d01c      	beq.n	1000fa38 <MXC_UART_GetFrequency+0x40>
1000f9fe:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fa02:	4298      	cmp	r0, r3
1000fa04:	d018      	beq.n	1000fa38 <MXC_UART_GetFrequency+0x40>
1000fa06:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fa0a:	4298      	cmp	r0, r3
1000fa0c:	d014      	beq.n	1000fa38 <MXC_UART_GetFrequency+0x40>
1000fa0e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fa12:	4298      	cmp	r0, r3
1000fa14:	d112      	bne.n	1000fa3c <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
1000fa16:	6803      	ldr	r3, [r0, #0]
1000fa18:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000fa1c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
1000fa20:	d005      	beq.n	1000fa2e <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1000fa22:	6803      	ldr	r3, [r0, #0]
1000fa24:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000fa28:	d108      	bne.n	1000fa3c <MXC_UART_GetFrequency+0x44>
1000fa2a:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
1000fa2e:	4a06      	ldr	r2, [pc, #24]	@ (1000fa48 <MXC_UART_GetFrequency+0x50>)
1000fa30:	6910      	ldr	r0, [r2, #16]
1000fa32:	fbb3 f0f0 	udiv	r0, r3, r0
1000fa36:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
1000fa38:	f000 b8ba 	b.w	1000fbb0 <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
1000fa3c:	f06f 0002 	mvn.w	r0, #2
    }
}
1000fa40:	4770      	bx	lr
1000fa42:	bf00      	nop
1000fa44:	40042000 	.word	0x40042000
1000fa48:	40081400 	.word	0x40081400

1000fa4c <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
1000fa4c:	f000 b8f0 	b.w	1000fc30 <MXC_UART_RevB_SetDataSize>

1000fa50 <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
1000fa50:	f000 b90e 	b.w	1000fc70 <MXC_UART_RevB_SetStopBits>

1000fa54 <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
1000fa54:	f000 b930 	b.w	1000fcb8 <MXC_UART_RevB_SetParity>

1000fa58 <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
1000fa58:	f000 b984 	b.w	1000fd64 <MXC_UART_RevB_ReadCharacterRaw>

1000fa5c <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
1000fa5c:	f000 b99e 	b.w	1000fd9c <MXC_UART_RevB_WriteCharacterRaw>

1000fa60 <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
1000fa60:	f000 b808 	b.w	1000fa74 <MXC_UART_Common_ReadCharacter>

1000fa64 <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
1000fa64:	f000 b812 	b.w	1000fa8c <MXC_UART_Common_WriteCharacter>

1000fa68 <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
1000fa68:	f000 b9b6 	b.w	1000fdd8 <MXC_UART_RevB_GetRXFIFOAvailable>

1000fa6c <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
1000fa6c:	f000 b9b8 	b.w	1000fde0 <MXC_UART_RevB_GetTXFIFOAvailable>

1000fa70 <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
1000fa70:	f000 b9bc 	b.w	1000fdec <MXC_UART_RevB_SetRXThreshold>

1000fa74 <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
1000fa74:	b510      	push	{r4, lr}
1000fa76:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
1000fa78:	4620      	mov	r0, r4
1000fa7a:	f7ff fff5 	bl	1000fa68 <MXC_UART_GetRXFIFOAvailable>
1000fa7e:	2800      	cmp	r0, #0
1000fa80:	d0fa      	beq.n	1000fa78 <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
1000fa82:	4620      	mov	r0, r4
}
1000fa84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
1000fa88:	f7ff bfe6 	b.w	1000fa58 <MXC_UART_ReadCharacterRaw>

1000fa8c <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
1000fa8c:	b538      	push	{r3, r4, r5, lr}
1000fa8e:	4604      	mov	r4, r0
1000fa90:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
1000fa92:	4620      	mov	r0, r4
1000fa94:	f7ff ffea 	bl	1000fa6c <MXC_UART_GetTXFIFOAvailable>
1000fa98:	2800      	cmp	r0, #0
1000fa9a:	d0fa      	beq.n	1000fa92 <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
1000fa9c:	4629      	mov	r1, r5
1000fa9e:	4620      	mov	r0, r4
}
1000faa0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
1000faa4:	f7ff bfda 	b.w	1000fa5c <MXC_UART_WriteCharacterRaw>

1000faa8 <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000faa8:	4b1a      	ldr	r3, [pc, #104]	@ (1000fb14 <MXC_UART_RevB_Init+0x6c>)
1000faaa:	4298      	cmp	r0, r3
{
1000faac:	b570      	push	{r4, r5, r6, lr}
1000faae:	4604      	mov	r4, r0
1000fab0:	460d      	mov	r5, r1
1000fab2:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fab4:	d00b      	beq.n	1000face <MXC_UART_RevB_Init+0x26>
1000fab6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000faba:	4298      	cmp	r0, r3
1000fabc:	d007      	beq.n	1000face <MXC_UART_RevB_Init+0x26>
1000fabe:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fac2:	4298      	cmp	r0, r3
1000fac4:	d003      	beq.n	1000face <MXC_UART_RevB_Init+0x26>
1000fac6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000faca:	4298      	cmp	r0, r3
1000facc:	d11f      	bne.n	1000fb0e <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
1000face:	2101      	movs	r1, #1
1000fad0:	4620      	mov	r0, r4
1000fad2:	f7ff ffcd 	bl	1000fa70 <MXC_UART_SetRXThreshold>
1000fad6:	b100      	cbz	r0, 1000fada <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
1000fad8:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
1000fada:	2108      	movs	r1, #8
1000fadc:	4620      	mov	r0, r4
1000fade:	f7ff ffb5 	bl	1000fa4c <MXC_UART_SetDataSize>
1000fae2:	2800      	cmp	r0, #0
1000fae4:	d1f8      	bne.n	1000fad8 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
1000fae6:	4601      	mov	r1, r0
1000fae8:	4620      	mov	r0, r4
1000faea:	f7ff ffb3 	bl	1000fa54 <MXC_UART_SetParity>
1000faee:	2800      	cmp	r0, #0
1000faf0:	d1f2      	bne.n	1000fad8 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
1000faf2:	4601      	mov	r1, r0
1000faf4:	4620      	mov	r0, r4
1000faf6:	f7ff ffab 	bl	1000fa50 <MXC_UART_SetStopBits>
1000fafa:	2800      	cmp	r0, #0
1000fafc:	d1ec      	bne.n	1000fad8 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
1000fafe:	4632      	mov	r2, r6
1000fb00:	4629      	mov	r1, r5
1000fb02:	4620      	mov	r0, r4
1000fb04:	f7ff ff10 	bl	1000f928 <MXC_UART_SetFrequency>
1000fb08:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
1000fb0c:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
1000fb0e:	f06f 0002 	mvn.w	r0, #2
}
1000fb12:	bd70      	pop	{r4, r5, r6, pc}
1000fb14:	40042000 	.word	0x40042000

1000fb18 <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fb18:	4b22      	ldr	r3, [pc, #136]	@ (1000fba4 <MXC_UART_RevB_SetFrequency+0x8c>)
1000fb1a:	4298      	cmp	r0, r3
1000fb1c:	d00b      	beq.n	1000fb36 <MXC_UART_RevB_SetFrequency+0x1e>
1000fb1e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fb22:	4298      	cmp	r0, r3
1000fb24:	d007      	beq.n	1000fb36 <MXC_UART_RevB_SetFrequency+0x1e>
1000fb26:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fb2a:	4298      	cmp	r0, r3
1000fb2c:	d003      	beq.n	1000fb36 <MXC_UART_RevB_SetFrequency+0x1e>
1000fb2e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fb32:	4298      	cmp	r0, r3
1000fb34:	d132      	bne.n	1000fb9c <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
1000fb36:	2305      	movs	r3, #5

    switch (clock) {
1000fb38:	2a01      	cmp	r2, #1
{
1000fb3a:	b410      	push	{r4}
    uart->osr = 5;
1000fb3c:	6143      	str	r3, [r0, #20]
    switch (clock) {
1000fb3e:	d023      	beq.n	1000fb88 <MXC_UART_RevB_SetFrequency+0x70>
1000fb40:	2a02      	cmp	r2, #2
1000fb42:	d014      	beq.n	1000fb6e <MXC_UART_RevB_SetFrequency+0x56>
1000fb44:	b11a      	cbz	r2, 1000fb4e <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
1000fb46:	f06f 0002 	mvn.w	r0, #2
1000fb4a:	bc10      	pop	{r4}
1000fb4c:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
1000fb4e:	4b16      	ldr	r3, [pc, #88]	@ (1000fba8 <MXC_UART_RevB_SetFrequency+0x90>)
1000fb50:	681a      	ldr	r2, [r3, #0]
1000fb52:	0852      	lsrs	r2, r2, #1
1000fb54:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
1000fb58:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
1000fb5c:	b113      	cbz	r3, 1000fb64 <MXC_UART_RevB_SetFrequency+0x4c>
1000fb5e:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1000fb62:	d900      	bls.n	1000fb66 <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
1000fb64:	3301      	adds	r3, #1
}
1000fb66:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
1000fb68:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
1000fb6a:	f7ff bf45 	b.w	1000f9f8 <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fb6e:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
1000fb70:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fb74:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
1000fb78:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
1000fb7c:	fb01 f203 	mul.w	r2, r1, r3
1000fb80:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fb84:	6004      	str	r4, [r0, #0]
        break;
1000fb86:	e7e9      	b.n	1000fb5c <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000fb88:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
1000fb8a:	4a08      	ldr	r2, [pc, #32]	@ (1000fbac <MXC_UART_RevB_SetFrequency+0x94>)
1000fb8c:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000fb90:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
1000fb94:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
1000fb96:	fb01 2213 	mls	r2, r1, r3, r2
        break;
1000fb9a:	e7df      	b.n	1000fb5c <MXC_UART_RevB_SetFrequency+0x44>
}
1000fb9c:	f06f 0002 	mvn.w	r0, #2
1000fba0:	4770      	bx	lr
1000fba2:	bf00      	nop
1000fba4:	40042000 	.word	0x40042000
1000fba8:	20001740 	.word	0x20001740
1000fbac:	047868c0 	.word	0x047868c0

1000fbb0 <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fbb0:	4b1c      	ldr	r3, [pc, #112]	@ (1000fc24 <MXC_UART_RevB_GetFrequency+0x74>)
1000fbb2:	4298      	cmp	r0, r3
1000fbb4:	d00b      	beq.n	1000fbce <MXC_UART_RevB_GetFrequency+0x1e>
1000fbb6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fbba:	4298      	cmp	r0, r3
1000fbbc:	d007      	beq.n	1000fbce <MXC_UART_RevB_GetFrequency+0x1e>
1000fbbe:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fbc2:	4298      	cmp	r0, r3
1000fbc4:	d003      	beq.n	1000fbce <MXC_UART_RevB_GetFrequency+0x1e>
1000fbc6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fbca:	4298      	cmp	r0, r3
1000fbcc:	d122      	bne.n	1000fc14 <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
1000fbce:	6803      	ldr	r3, [r0, #0]
1000fbd0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000fbd4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
1000fbd8:	d017      	beq.n	1000fc0a <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
1000fbda:	6803      	ldr	r3, [r0, #0]
1000fbdc:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000fbe0:	d00c      	beq.n	1000fbfc <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
1000fbe2:	6803      	ldr	r3, [r0, #0]
1000fbe4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000fbe8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
1000fbec:	bf08      	it	eq
1000fbee:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
1000fbf2:	d112      	bne.n	1000fc1a <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
1000fbf4:	6900      	ldr	r0, [r0, #16]
1000fbf6:	fbb3 f0f0 	udiv	r0, r3, r0
1000fbfa:	4770      	bx	lr
        periphClock = PeripheralClock;
1000fbfc:	4b0a      	ldr	r3, [pc, #40]	@ (1000fc28 <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
1000fbfe:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
1000fc00:	681b      	ldr	r3, [r3, #0]
1000fc02:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
1000fc04:	fbb3 f0f0 	udiv	r0, r3, r0
1000fc08:	4770      	bx	lr
1000fc0a:	4b08      	ldr	r3, [pc, #32]	@ (1000fc2c <MXC_UART_RevB_GetFrequency+0x7c>)
1000fc0c:	6900      	ldr	r0, [r0, #16]
1000fc0e:	fbb3 f0f0 	udiv	r0, r3, r0
1000fc12:	4770      	bx	lr
        return E_BAD_PARAM;
1000fc14:	f06f 0002 	mvn.w	r0, #2
}
1000fc18:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
1000fc1a:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
1000fc1c:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
1000fc20:	4770      	bx	lr
1000fc22:	bf00      	nop
1000fc24:	40042000 	.word	0x40042000
1000fc28:	20001740 	.word	0x20001740
1000fc2c:	047868c0 	.word	0x047868c0

1000fc30 <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc30:	4a0e      	ldr	r2, [pc, #56]	@ (1000fc6c <MXC_UART_RevB_SetDataSize+0x3c>)
1000fc32:	4290      	cmp	r0, r2
{
1000fc34:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc36:	d00b      	beq.n	1000fc50 <MXC_UART_RevB_SetDataSize+0x20>
1000fc38:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fc3c:	4290      	cmp	r0, r2
1000fc3e:	d007      	beq.n	1000fc50 <MXC_UART_RevB_SetDataSize+0x20>
1000fc40:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fc44:	4290      	cmp	r0, r2
1000fc46:	d003      	beq.n	1000fc50 <MXC_UART_RevB_SetDataSize+0x20>
1000fc48:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fc4c:	4290      	cmp	r0, r2
1000fc4e:	d10a      	bne.n	1000fc66 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
1000fc50:	3905      	subs	r1, #5
1000fc52:	2903      	cmp	r1, #3
1000fc54:	d807      	bhi.n	1000fc66 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
1000fc56:	681a      	ldr	r2, [r3, #0]
1000fc58:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
1000fc5c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
1000fc60:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
1000fc62:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
1000fc64:	4770      	bx	lr
        return E_BAD_PARAM;
1000fc66:	f06f 0002 	mvn.w	r0, #2
}
1000fc6a:	4770      	bx	lr
1000fc6c:	40042000 	.word	0x40042000

1000fc70 <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc70:	4b10      	ldr	r3, [pc, #64]	@ (1000fcb4 <MXC_UART_RevB_SetStopBits+0x44>)
1000fc72:	4298      	cmp	r0, r3
1000fc74:	d00b      	beq.n	1000fc8e <MXC_UART_RevB_SetStopBits+0x1e>
1000fc76:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fc7a:	4298      	cmp	r0, r3
1000fc7c:	d007      	beq.n	1000fc8e <MXC_UART_RevB_SetStopBits+0x1e>
1000fc7e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fc82:	4298      	cmp	r0, r3
1000fc84:	d003      	beq.n	1000fc8e <MXC_UART_RevB_SetStopBits+0x1e>
1000fc86:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fc8a:	4298      	cmp	r0, r3
1000fc8c:	d108      	bne.n	1000fca0 <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
1000fc8e:	b151      	cbz	r1, 1000fca6 <MXC_UART_RevB_SetStopBits+0x36>
1000fc90:	2901      	cmp	r1, #1
1000fc92:	d105      	bne.n	1000fca0 <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1000fc94:	6803      	ldr	r3, [r0, #0]
1000fc96:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
1000fc9a:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
1000fc9c:	2000      	movs	r0, #0
1000fc9e:	4770      	bx	lr
1000fca0:	f06f 0002 	mvn.w	r0, #2
}
1000fca4:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1000fca6:	6803      	ldr	r3, [r0, #0]
1000fca8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
1000fcac:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
1000fcae:	2000      	movs	r0, #0
1000fcb0:	4770      	bx	lr
1000fcb2:	bf00      	nop
1000fcb4:	40042000 	.word	0x40042000

1000fcb8 <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fcb8:	4b29      	ldr	r3, [pc, #164]	@ (1000fd60 <MXC_UART_RevB_SetParity+0xa8>)
1000fcba:	4298      	cmp	r0, r3
1000fcbc:	d00b      	beq.n	1000fcd6 <MXC_UART_RevB_SetParity+0x1e>
1000fcbe:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fcc2:	4298      	cmp	r0, r3
1000fcc4:	d007      	beq.n	1000fcd6 <MXC_UART_RevB_SetParity+0x1e>
1000fcc6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fcca:	4298      	cmp	r0, r3
1000fccc:	d003      	beq.n	1000fcd6 <MXC_UART_RevB_SetParity+0x1e>
1000fcce:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fcd2:	4298      	cmp	r0, r3
1000fcd4:	d141      	bne.n	1000fd5a <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
1000fcd6:	2904      	cmp	r1, #4
1000fcd8:	d83f      	bhi.n	1000fd5a <MXC_UART_RevB_SetParity+0xa2>
1000fcda:	e8df f001 	tbb	[pc, r1]
1000fcde:	1711      	.short	0x1711
1000fce0:	3124      	.short	0x3124
1000fce2:	03          	.byte	0x03
1000fce3:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fce4:	6803      	ldr	r3, [r0, #0]
1000fce6:	f043 0310 	orr.w	r3, r3, #16
1000fcea:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fcec:	6803      	ldr	r3, [r0, #0]
1000fcee:	f043 0320 	orr.w	r3, r3, #32
1000fcf2:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fcf4:	6803      	ldr	r3, [r0, #0]
1000fcf6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000fcfa:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
1000fcfc:	2000      	movs	r0, #0
1000fcfe:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fd00:	6803      	ldr	r3, [r0, #0]
1000fd02:	f023 0310 	bic.w	r3, r3, #16
1000fd06:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
1000fd08:	2000      	movs	r0, #0
1000fd0a:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fd0c:	6803      	ldr	r3, [r0, #0]
1000fd0e:	f043 0310 	orr.w	r3, r3, #16
1000fd12:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fd14:	6803      	ldr	r3, [r0, #0]
1000fd16:	f023 0320 	bic.w	r3, r3, #32
1000fd1a:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fd1c:	6803      	ldr	r3, [r0, #0]
1000fd1e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000fd22:	6003      	str	r3, [r0, #0]
        break;
1000fd24:	e7ea      	b.n	1000fcfc <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fd26:	6803      	ldr	r3, [r0, #0]
1000fd28:	f043 0310 	orr.w	r3, r3, #16
1000fd2c:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fd2e:	6803      	ldr	r3, [r0, #0]
1000fd30:	f023 0320 	bic.w	r3, r3, #32
1000fd34:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fd36:	6803      	ldr	r3, [r0, #0]
1000fd38:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000fd3c:	6003      	str	r3, [r0, #0]
        break;
1000fd3e:	e7dd      	b.n	1000fcfc <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fd40:	6803      	ldr	r3, [r0, #0]
1000fd42:	f043 0310 	orr.w	r3, r3, #16
1000fd46:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fd48:	6803      	ldr	r3, [r0, #0]
1000fd4a:	f043 0320 	orr.w	r3, r3, #32
1000fd4e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fd50:	6803      	ldr	r3, [r0, #0]
1000fd52:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000fd56:	6003      	str	r3, [r0, #0]
        break;
1000fd58:	e7d0      	b.n	1000fcfc <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
1000fd5a:	f06f 0002 	mvn.w	r0, #2
}
1000fd5e:	4770      	bx	lr
1000fd60:	40042000 	.word	0x40042000

1000fd64 <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fd64:	4b0c      	ldr	r3, [pc, #48]	@ (1000fd98 <MXC_UART_RevB_ReadCharacterRaw+0x34>)
1000fd66:	4298      	cmp	r0, r3
1000fd68:	d00b      	beq.n	1000fd82 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fd6a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fd6e:	4298      	cmp	r0, r3
1000fd70:	d007      	beq.n	1000fd82 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fd72:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fd76:	4298      	cmp	r0, r3
1000fd78:	d003      	beq.n	1000fd82 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fd7a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fd7e:	4298      	cmp	r0, r3
1000fd80:	d104      	bne.n	1000fd8c <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
1000fd82:	6843      	ldr	r3, [r0, #4]
1000fd84:	06db      	lsls	r3, r3, #27
1000fd86:	d404      	bmi.n	1000fd92 <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
1000fd88:	6a00      	ldr	r0, [r0, #32]
1000fd8a:	4770      	bx	lr
        return E_BAD_PARAM;
1000fd8c:	f06f 0002 	mvn.w	r0, #2
1000fd90:	4770      	bx	lr
        return E_UNDERFLOW;
1000fd92:	f06f 000c 	mvn.w	r0, #12
}
1000fd96:	4770      	bx	lr
1000fd98:	40042000 	.word	0x40042000

1000fd9c <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fd9c:	4a0d      	ldr	r2, [pc, #52]	@ (1000fdd4 <MXC_UART_RevB_WriteCharacterRaw+0x38>)
1000fd9e:	4290      	cmp	r0, r2
{
1000fda0:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fda2:	d00b      	beq.n	1000fdbc <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fda4:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fda8:	4290      	cmp	r0, r2
1000fdaa:	d007      	beq.n	1000fdbc <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fdac:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fdb0:	4290      	cmp	r0, r2
1000fdb2:	d003      	beq.n	1000fdbc <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fdb4:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fdb8:	4290      	cmp	r0, r2
1000fdba:	d105      	bne.n	1000fdc8 <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
1000fdbc:	6858      	ldr	r0, [r3, #4]
1000fdbe:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
1000fdc2:	d104      	bne.n	1000fdce <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
1000fdc4:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
1000fdc6:	4770      	bx	lr
        return E_BAD_PARAM;
1000fdc8:	f06f 0002 	mvn.w	r0, #2
1000fdcc:	4770      	bx	lr
        return E_OVERFLOW;
1000fdce:	f06f 000b 	mvn.w	r0, #11
}
1000fdd2:	4770      	bx	lr
1000fdd4:	40042000 	.word	0x40042000

1000fdd8 <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
1000fdd8:	6840      	ldr	r0, [r0, #4]
}
1000fdda:	f3c0 2003 	ubfx	r0, r0, #8, #4
1000fdde:	4770      	bx	lr

1000fde0 <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
1000fde0:	6840      	ldr	r0, [r0, #4]
1000fde2:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
1000fde6:	f1c0 0008 	rsb	r0, r0, #8
1000fdea:	4770      	bx	lr

1000fdec <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fdec:	4a0e      	ldr	r2, [pc, #56]	@ (1000fe28 <MXC_UART_RevB_SetRXThreshold+0x3c>)
1000fdee:	4290      	cmp	r0, r2
{
1000fdf0:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fdf2:	d00b      	beq.n	1000fe0c <MXC_UART_RevB_SetRXThreshold+0x20>
1000fdf4:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fdf8:	4290      	cmp	r0, r2
1000fdfa:	d007      	beq.n	1000fe0c <MXC_UART_RevB_SetRXThreshold+0x20>
1000fdfc:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fe00:	4290      	cmp	r0, r2
1000fe02:	d003      	beq.n	1000fe0c <MXC_UART_RevB_SetRXThreshold+0x20>
1000fe04:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fe08:	4290      	cmp	r0, r2
1000fe0a:	d109      	bne.n	1000fe20 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
1000fe0c:	1e4a      	subs	r2, r1, #1
1000fe0e:	2a07      	cmp	r2, #7
1000fe10:	d806      	bhi.n	1000fe20 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
1000fe12:	681a      	ldr	r2, [r3, #0]
1000fe14:	f022 020f 	bic.w	r2, r2, #15
1000fe18:	4311      	orrs	r1, r2

    return E_NO_ERROR;
1000fe1a:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
1000fe1c:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
1000fe1e:	4770      	bx	lr
        return E_BAD_PARAM;
1000fe20:	f06f 0002 	mvn.w	r0, #2
}
1000fe24:	4770      	bx	lr
1000fe26:	bf00      	nop
1000fe28:	40042000 	.word	0x40042000

1000fe2c <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
1000fe2c:	b510      	push	{r4, lr}
    if (!initialized) {
1000fe2e:	4c06      	ldr	r4, [pc, #24]	@ (1000fe48 <MXC_GPIO_Common_Init+0x1c>)
1000fe30:	7821      	ldrb	r1, [r4, #0]
1000fe32:	b931      	cbnz	r1, 1000fe42 <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
1000fe34:	4805      	ldr	r0, [pc, #20]	@ (1000fe4c <MXC_GPIO_Common_Init+0x20>)
1000fe36:	f44f 7200 	mov.w	r2, #512	@ 0x200
1000fe3a:	f002 f8fd 	bl	10012038 <memset>
            }
        }

        initialized = 1;
1000fe3e:	2301      	movs	r3, #1
1000fe40:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
1000fe42:	2000      	movs	r0, #0
1000fe44:	bd10      	pop	{r4, pc}
1000fe46:	bf00      	nop
1000fe48:	20001028 	.word	0x20001028
1000fe4c:	2000122c 	.word	0x2000122c

1000fe50 <MXC_GPIO_Common_Handler>:
void MXC_GPIO_Common_Handler(unsigned int port)
{
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
1000fe50:	2803      	cmp	r0, #3
{
1000fe52:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000fe54:	4607      	mov	r7, r0
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
1000fe56:	d81d      	bhi.n	1000fe94 <MXC_GPIO_Common_Handler+0x44>

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
1000fe58:	bb18      	cbnz	r0, 1000fea2 <MXC_GPIO_Common_Handler+0x52>
1000fe5a:	4d14      	ldr	r5, [pc, #80]	@ (1000feac <MXC_GPIO_Common_Handler+0x5c>)

    stat = MXC_GPIO_GetFlags(gpio);
1000fe5c:	4628      	mov	r0, r5
1000fe5e:	f7ff f9e7 	bl	1000f230 <MXC_GPIO_GetFlags>
1000fe62:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
1000fe64:	4601      	mov	r1, r0
1000fe66:	4628      	mov	r0, r5
1000fe68:	f7ff f9d6 	bl	1000f218 <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
1000fe6c:	b18c      	cbz	r4, 1000fe92 <MXC_GPIO_Common_Handler+0x42>
1000fe6e:	4e10      	ldr	r6, [pc, #64]	@ (1000feb0 <MXC_GPIO_Common_Handler+0x60>)
1000fe70:	4d10      	ldr	r5, [pc, #64]	@ (1000feb4 <MXC_GPIO_Common_Handler+0x64>)
1000fe72:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
1000fe76:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
1000fe7a:	07e3      	lsls	r3, r4, #31
1000fe7c:	d503      	bpl.n	1000fe86 <MXC_GPIO_Common_Handler+0x36>
            if (callback[port][pin]) {
1000fe7e:	682b      	ldr	r3, [r5, #0]
1000fe80:	b10b      	cbz	r3, 1000fe86 <MXC_GPIO_Common_Handler+0x36>
                callback[port][pin](cbparam[port][pin]);
1000fe82:	6830      	ldr	r0, [r6, #0]
1000fe84:	4798      	blx	r3
    while (stat) {
1000fe86:	0864      	lsrs	r4, r4, #1
1000fe88:	f106 0604 	add.w	r6, r6, #4
1000fe8c:	f105 0504 	add.w	r5, r5, #4
1000fe90:	d1f3      	bne.n	1000fe7a <MXC_GPIO_Common_Handler+0x2a>
        }

        pin++;
        stat >>= 1;
    }
}
1000fe92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
1000fe94:	4908      	ldr	r1, [pc, #32]	@ (1000feb8 <MXC_GPIO_Common_Handler+0x68>)
1000fe96:	4809      	ldr	r0, [pc, #36]	@ (1000febc <MXC_GPIO_Common_Handler+0x6c>)
1000fe98:	225a      	movs	r2, #90	@ 0x5a
1000fe9a:	f7fe fc37 	bl	1000e70c <mxc_assert>
1000fe9e:	2500      	movs	r5, #0
1000fea0:	e7dc      	b.n	1000fe5c <MXC_GPIO_Common_Handler+0xc>
1000fea2:	4b07      	ldr	r3, [pc, #28]	@ (1000fec0 <MXC_GPIO_Common_Handler+0x70>)
1000fea4:	1e42      	subs	r2, r0, #1
1000fea6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000feaa:	e7d7      	b.n	1000fe5c <MXC_GPIO_Common_Handler+0xc>
1000feac:	40008000 	.word	0x40008000
1000feb0:	2000102c 	.word	0x2000102c
1000feb4:	2000122c 	.word	0x2000122c
1000feb8:	10019094 	.word	0x10019094
1000febc:	100190e4 	.word	0x100190e4
1000fec0:	10019104 	.word	0x10019104

1000fec4 <sprintf>:
1000fec4:	b40e      	push	{r1, r2, r3}
1000fec6:	b510      	push	{r4, lr}
1000fec8:	b09d      	sub	sp, #116	@ 0x74
1000feca:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
1000fece:	ab1f      	add	r3, sp, #124	@ 0x7c
1000fed0:	9104      	str	r1, [sp, #16]
1000fed2:	9107      	str	r1, [sp, #28]
1000fed4:	4909      	ldr	r1, [pc, #36]	@ (1000fefc <sprintf+0x38>)
1000fed6:	f853 2b04 	ldr.w	r2, [r3], #4
1000feda:	9002      	str	r0, [sp, #8]
1000fedc:	9006      	str	r0, [sp, #24]
1000fede:	4c08      	ldr	r4, [pc, #32]	@ (1000ff00 <sprintf+0x3c>)
1000fee0:	6808      	ldr	r0, [r1, #0]
1000fee2:	9301      	str	r3, [sp, #4]
1000fee4:	a902      	add	r1, sp, #8
1000fee6:	9405      	str	r4, [sp, #20]
1000fee8:	f000 f812 	bl	1000ff10 <_svfprintf_r>
1000feec:	9b02      	ldr	r3, [sp, #8]
1000feee:	2200      	movs	r2, #0
1000fef0:	701a      	strb	r2, [r3, #0]
1000fef2:	b01d      	add	sp, #116	@ 0x74
1000fef4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000fef8:	b003      	add	sp, #12
1000fefa:	4770      	bx	lr
1000fefc:	200005b8 	.word	0x200005b8
1000ff00:	ffff0208 	.word	0xffff0208

1000ff04 <__errno>:
1000ff04:	4b01      	ldr	r3, [pc, #4]	@ (1000ff0c <__errno+0x8>)
1000ff06:	6818      	ldr	r0, [r3, #0]
1000ff08:	4770      	bx	lr
1000ff0a:	bf00      	nop
1000ff0c:	200005b8 	.word	0x200005b8

1000ff10 <_svfprintf_r>:
1000ff10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000ff14:	b0df      	sub	sp, #380	@ 0x17c
1000ff16:	460c      	mov	r4, r1
1000ff18:	9109      	str	r1, [sp, #36]	@ 0x24
1000ff1a:	4691      	mov	r9, r2
1000ff1c:	930d      	str	r3, [sp, #52]	@ 0x34
1000ff1e:	4683      	mov	fp, r0
1000ff20:	f002 f94c 	bl	100121bc <_localeconv_r>
1000ff24:	6803      	ldr	r3, [r0, #0]
1000ff26:	931a      	str	r3, [sp, #104]	@ 0x68
1000ff28:	4618      	mov	r0, r3
1000ff2a:	f003 fb69 	bl	10013600 <strlen>
1000ff2e:	2208      	movs	r2, #8
1000ff30:	9018      	str	r0, [sp, #96]	@ 0x60
1000ff32:	2100      	movs	r1, #0
1000ff34:	a82e      	add	r0, sp, #184	@ 0xb8
1000ff36:	f002 f87f 	bl	10012038 <memset>
1000ff3a:	89a3      	ldrh	r3, [r4, #12]
1000ff3c:	061a      	lsls	r2, r3, #24
1000ff3e:	d503      	bpl.n	1000ff48 <_svfprintf_r+0x38>
1000ff40:	6923      	ldr	r3, [r4, #16]
1000ff42:	2b00      	cmp	r3, #0
1000ff44:	f000 8790 	beq.w	10010e68 <_svfprintf_r+0xf58>
1000ff48:	ed9f 7b7f 	vldr	d7, [pc, #508]	@ 10010148 <_svfprintf_r+0x238>
1000ff4c:	2300      	movs	r3, #0
1000ff4e:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
1000ff52:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
1000ff56:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
1000ff5a:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
1000ff5e:	aa35      	add	r2, sp, #212	@ 0xd4
1000ff60:	9313      	str	r3, [sp, #76]	@ 0x4c
1000ff62:	9232      	str	r2, [sp, #200]	@ 0xc8
1000ff64:	4690      	mov	r8, r2
1000ff66:	9319      	str	r3, [sp, #100]	@ 0x64
1000ff68:	930a      	str	r3, [sp, #40]	@ 0x28
1000ff6a:	f8cd b01c 	str.w	fp, [sp, #28]
1000ff6e:	464d      	mov	r5, r9
1000ff70:	9f07      	ldr	r7, [sp, #28]
1000ff72:	462e      	mov	r6, r5
1000ff74:	4b76      	ldr	r3, [pc, #472]	@ (10010150 <_svfprintf_r+0x240>)
1000ff76:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1000ff7a:	f002 f919 	bl	100121b0 <__locale_mb_cur_max>
1000ff7e:	4603      	mov	r3, r0
1000ff80:	a82e      	add	r0, sp, #184	@ 0xb8
1000ff82:	9000      	str	r0, [sp, #0]
1000ff84:	4632      	mov	r2, r6
1000ff86:	a92a      	add	r1, sp, #168	@ 0xa8
1000ff88:	4638      	mov	r0, r7
1000ff8a:	47a0      	blx	r4
1000ff8c:	2800      	cmp	r0, #0
1000ff8e:	f000 80a9 	beq.w	100100e4 <_svfprintf_r+0x1d4>
1000ff92:	f2c0 809f 	blt.w	100100d4 <_svfprintf_r+0x1c4>
1000ff96:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
1000ff98:	2a25      	cmp	r2, #37	@ 0x25
1000ff9a:	4603      	mov	r3, r0
1000ff9c:	d001      	beq.n	1000ffa2 <_svfprintf_r+0x92>
1000ff9e:	441e      	add	r6, r3
1000ffa0:	e7e8      	b.n	1000ff74 <_svfprintf_r+0x64>
1000ffa2:	1b77      	subs	r7, r6, r5
1000ffa4:	4604      	mov	r4, r0
1000ffa6:	f040 80a0 	bne.w	100100ea <_svfprintf_r+0x1da>
1000ffaa:	2300      	movs	r3, #0
1000ffac:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1000ffb0:	4699      	mov	r9, r3
1000ffb2:	930b      	str	r3, [sp, #44]	@ 0x2c
1000ffb4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1000ffb8:	7873      	ldrb	r3, [r6, #1]
1000ffba:	9208      	str	r2, [sp, #32]
1000ffbc:	1c74      	adds	r4, r6, #1
1000ffbe:	3401      	adds	r4, #1
1000ffc0:	f1a3 0220 	sub.w	r2, r3, #32
1000ffc4:	2a5a      	cmp	r2, #90	@ 0x5a
1000ffc6:	f200 80c5 	bhi.w	10010154 <_svfprintf_r+0x244>
1000ffca:	e8df f012 	tbh	[pc, r2, lsl #1]
1000ffce:	02ee      	.short	0x02ee
1000ffd0:	00c300c3 	.word	0x00c300c3
1000ffd4:	00c302ea 	.word	0x00c302ea
1000ffd8:	00c300c3 	.word	0x00c300c3
1000ffdc:	00c3006a 	.word	0x00c3006a
1000ffe0:	025100c3 	.word	0x025100c3
1000ffe4:	00c30260 	.word	0x00c30260
1000ffe8:	02fc025c 	.word	0x02fc025c
1000ffec:	02f800c3 	.word	0x02f800c3
1000fff0:	005b005b 	.word	0x005b005b
1000fff4:	005b005b 	.word	0x005b005b
1000fff8:	005b005b 	.word	0x005b005b
1000fffc:	005b005b 	.word	0x005b005b
10010000:	00c3005b 	.word	0x00c3005b
10010004:	00c300c3 	.word	0x00c300c3
10010008:	00c300c3 	.word	0x00c300c3
1001000c:	00c300c3 	.word	0x00c300c3
10010010:	00c30144 	.word	0x00c30144
10010014:	031601d0 	.word	0x031601d0
10010018:	01440144 	.word	0x01440144
1001001c:	00c30144 	.word	0x00c30144
10010020:	00c300c3 	.word	0x00c300c3
10010024:	02e600c3 	.word	0x02e600c3
10010028:	00c300c3 	.word	0x00c300c3
1001002c:	00c30265 	.word	0x00c30265
10010030:	00c300c3 	.word	0x00c300c3
10010034:	00c301fa 	.word	0x00c301fa
10010038:	00c302d3 	.word	0x00c302d3
1001003c:	070e00c3 	.word	0x070e00c3
10010040:	00c300c3 	.word	0x00c300c3
10010044:	00c300c3 	.word	0x00c300c3
10010048:	00c300c3 	.word	0x00c300c3
1001004c:	00c300c3 	.word	0x00c300c3
10010050:	00c30144 	.word	0x00c30144
10010054:	022c01d0 	.word	0x022c01d0
10010058:	01440144 	.word	0x01440144
1001005c:	02960144 	.word	0x02960144
10010060:	007f022c 	.word	0x007f022c
10010064:	02af00c3 	.word	0x02af00c3
10010068:	02a000c3 	.word	0x02a000c3
1001006c:	02c10703 	.word	0x02c10703
10010070:	00c3007f 	.word	0x00c3007f
10010074:	007d01fa 	.word	0x007d01fa
10010078:	00c30709 	.word	0x00c30709
1001007c:	073200c3 	.word	0x073200c3
10010080:	007d00c3 	.word	0x007d00c3
10010084:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10010088:	2100      	movs	r1, #0
1001008a:	f814 3b01 	ldrb.w	r3, [r4], #1
1001008e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10010092:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10010096:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001009a:	2a09      	cmp	r2, #9
1001009c:	d9f5      	bls.n	1001008a <_svfprintf_r+0x17a>
1001009e:	910b      	str	r1, [sp, #44]	@ 0x2c
100100a0:	e78e      	b.n	1000ffc0 <_svfprintf_r+0xb0>
100100a2:	9f07      	ldr	r7, [sp, #28]
100100a4:	4638      	mov	r0, r7
100100a6:	f002 f889 	bl	100121bc <_localeconv_r>
100100aa:	6843      	ldr	r3, [r0, #4]
100100ac:	931d      	str	r3, [sp, #116]	@ 0x74
100100ae:	4618      	mov	r0, r3
100100b0:	f003 faa6 	bl	10013600 <strlen>
100100b4:	901e      	str	r0, [sp, #120]	@ 0x78
100100b6:	4606      	mov	r6, r0
100100b8:	4638      	mov	r0, r7
100100ba:	f002 f87f 	bl	100121bc <_localeconv_r>
100100be:	6883      	ldr	r3, [r0, #8]
100100c0:	931b      	str	r3, [sp, #108]	@ 0x6c
100100c2:	2e00      	cmp	r6, #0
100100c4:	f040 861e 	bne.w	10010d04 <_svfprintf_r+0xdf4>
100100c8:	7823      	ldrb	r3, [r4, #0]
100100ca:	e778      	b.n	1000ffbe <_svfprintf_r+0xae>
100100cc:	7823      	ldrb	r3, [r4, #0]
100100ce:	f049 0920 	orr.w	r9, r9, #32
100100d2:	e774      	b.n	1000ffbe <_svfprintf_r+0xae>
100100d4:	2208      	movs	r2, #8
100100d6:	2100      	movs	r1, #0
100100d8:	a82e      	add	r0, sp, #184	@ 0xb8
100100da:	f001 ffad 	bl	10012038 <memset>
100100de:	2301      	movs	r3, #1
100100e0:	441e      	add	r6, r3
100100e2:	e747      	b.n	1000ff74 <_svfprintf_r+0x64>
100100e4:	1b77      	subs	r7, r6, r5
100100e6:	4604      	mov	r4, r0
100100e8:	d011      	beq.n	1001010e <_svfprintf_r+0x1fe>
100100ea:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
100100ec:	443b      	add	r3, r7
100100ee:	9334      	str	r3, [sp, #208]	@ 0xd0
100100f0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100100f2:	3301      	adds	r3, #1
100100f4:	2b07      	cmp	r3, #7
100100f6:	e9c8 5700 	strd	r5, r7, [r8]
100100fa:	9333      	str	r3, [sp, #204]	@ 0xcc
100100fc:	dc18      	bgt.n	10010130 <_svfprintf_r+0x220>
100100fe:	f108 0808 	add.w	r8, r8, #8
10010102:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10010104:	443b      	add	r3, r7
10010106:	930a      	str	r3, [sp, #40]	@ 0x28
10010108:	2c00      	cmp	r4, #0
1001010a:	f47f af4e 	bne.w	1000ffaa <_svfprintf_r+0x9a>
1001010e:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10010110:	f8dd b01c 	ldr.w	fp, [sp, #28]
10010114:	2b00      	cmp	r3, #0
10010116:	f041 81f3 	bne.w	10011500 <_svfprintf_r+0x15f0>
1001011a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001011c:	899b      	ldrh	r3, [r3, #12]
1001011e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10010122:	2b00      	cmp	r3, #0
10010124:	f041 83c3 	bne.w	100118ae <_svfprintf_r+0x199e>
10010128:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001012a:	b05f      	add	sp, #380	@ 0x17c
1001012c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010130:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010132:	9807      	ldr	r0, [sp, #28]
10010134:	aa32      	add	r2, sp, #200	@ 0xc8
10010136:	f003 feb7 	bl	10013ea8 <__ssprint_r>
1001013a:	2800      	cmp	r0, #0
1001013c:	d1ed      	bne.n	1001011a <_svfprintf_r+0x20a>
1001013e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010142:	e7de      	b.n	10010102 <_svfprintf_r+0x1f2>
10010144:	f3af 8000 	nop.w
	...
10010150:	2000044c 	.word	0x2000044c
10010154:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010158:	2b00      	cmp	r3, #0
1001015a:	d0d8      	beq.n	1001010e <_svfprintf_r+0x1fe>
1001015c:	2200      	movs	r2, #0
1001015e:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10010162:	2301      	movs	r3, #1
10010164:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10010168:	9306      	str	r3, [sp, #24]
1001016a:	920c      	str	r2, [sp, #48]	@ 0x30
1001016c:	469b      	mov	fp, r3
1001016e:	9208      	str	r2, [sp, #32]
10010170:	9214      	str	r2, [sp, #80]	@ 0x50
10010172:	9210      	str	r2, [sp, #64]	@ 0x40
10010174:	9212      	str	r2, [sp, #72]	@ 0x48
10010176:	ad45      	add	r5, sp, #276	@ 0x114
10010178:	f019 0302 	ands.w	r3, r9, #2
1001017c:	d002      	beq.n	10010184 <_svfprintf_r+0x274>
1001017e:	9906      	ldr	r1, [sp, #24]
10010180:	3102      	adds	r1, #2
10010182:	9106      	str	r1, [sp, #24]
10010184:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10010188:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001018a:	d105      	bne.n	10010198 <_svfprintf_r+0x288>
1001018c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001018e:	9806      	ldr	r0, [sp, #24]
10010190:	1a0e      	subs	r6, r1, r0
10010192:	2e00      	cmp	r6, #0
10010194:	f300 80aa 	bgt.w	100102ec <_svfprintf_r+0x3dc>
10010198:	b182      	cbz	r2, 100101bc <_svfprintf_r+0x2ac>
1001019a:	2201      	movs	r2, #1
1001019c:	f8c8 2004 	str.w	r2, [r8, #4]
100101a0:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100101a2:	3201      	adds	r2, #1
100101a4:	3401      	adds	r4, #1
100101a6:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
100101aa:	2a07      	cmp	r2, #7
100101ac:	9434      	str	r4, [sp, #208]	@ 0xd0
100101ae:	9233      	str	r2, [sp, #204]	@ 0xcc
100101b0:	f8c8 1000 	str.w	r1, [r8]
100101b4:	f300 8405 	bgt.w	100109c2 <_svfprintf_r+0xab2>
100101b8:	f108 0808 	add.w	r8, r8, #8
100101bc:	b183      	cbz	r3, 100101e0 <_svfprintf_r+0x2d0>
100101be:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100101c0:	aa28      	add	r2, sp, #160	@ 0xa0
100101c2:	3301      	adds	r3, #1
100101c4:	3402      	adds	r4, #2
100101c6:	f8c8 2000 	str.w	r2, [r8]
100101ca:	2b07      	cmp	r3, #7
100101cc:	f04f 0202 	mov.w	r2, #2
100101d0:	9434      	str	r4, [sp, #208]	@ 0xd0
100101d2:	9333      	str	r3, [sp, #204]	@ 0xcc
100101d4:	f8c8 2004 	str.w	r2, [r8, #4]
100101d8:	f300 83e7 	bgt.w	100109aa <_svfprintf_r+0xa9a>
100101dc:	f108 0808 	add.w	r8, r8, #8
100101e0:	2f80      	cmp	r7, #128	@ 0x80
100101e2:	f000 82c0 	beq.w	10010766 <_svfprintf_r+0x856>
100101e6:	9b08      	ldr	r3, [sp, #32]
100101e8:	eba3 060b 	sub.w	r6, r3, fp
100101ec:	2e00      	cmp	r6, #0
100101ee:	f300 82ff 	bgt.w	100107f0 <_svfprintf_r+0x8e0>
100101f2:	f419 7f80 	tst.w	r9, #256	@ 0x100
100101f6:	f040 8219 	bne.w	1001062c <_svfprintf_r+0x71c>
100101fa:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100101fc:	f8c8 5000 	str.w	r5, [r8]
10010200:	3301      	adds	r3, #1
10010202:	445c      	add	r4, fp
10010204:	2b07      	cmp	r3, #7
10010206:	f8c8 b004 	str.w	fp, [r8, #4]
1001020a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001020c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001020e:	f300 836c 	bgt.w	100108ea <_svfprintf_r+0x9da>
10010212:	f108 0808 	add.w	r8, r8, #8
10010216:	f019 0f04 	tst.w	r9, #4
1001021a:	d005      	beq.n	10010228 <_svfprintf_r+0x318>
1001021c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001021e:	9a06      	ldr	r2, [sp, #24]
10010220:	1a9d      	subs	r5, r3, r2
10010222:	2d00      	cmp	r5, #0
10010224:	f300 83dc 	bgt.w	100109e0 <_svfprintf_r+0xad0>
10010228:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
1001022c:	9906      	ldr	r1, [sp, #24]
1001022e:	428a      	cmp	r2, r1
10010230:	bfac      	ite	ge
10010232:	189b      	addge	r3, r3, r2
10010234:	185b      	addlt	r3, r3, r1
10010236:	930a      	str	r3, [sp, #40]	@ 0x28
10010238:	2c00      	cmp	r4, #0
1001023a:	f040 8318 	bne.w	1001086e <_svfprintf_r+0x95e>
1001023e:	2300      	movs	r3, #0
10010240:	9333      	str	r3, [sp, #204]	@ 0xcc
10010242:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10010244:	b11b      	cbz	r3, 1001024e <_svfprintf_r+0x33e>
10010246:	990c      	ldr	r1, [sp, #48]	@ 0x30
10010248:	9807      	ldr	r0, [sp, #28]
1001024a:	f003 fad9 	bl	10013800 <_free_r>
1001024e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010252:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10010254:	e68c      	b.n	1000ff70 <_svfprintf_r+0x60>
10010256:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001025a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001025c:	3307      	adds	r3, #7
1001025e:	f023 0307 	bic.w	r3, r3, #7
10010262:	ecb3 7b02 	vldmia	r3!, {d7}
10010266:	ec57 6b17 	vmov	r6, r7, d7
1001026a:	930d      	str	r3, [sp, #52]	@ 0x34
1001026c:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10010270:	9323      	str	r3, [sp, #140]	@ 0x8c
10010272:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
10010276:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
1001027a:	4bb1      	ldr	r3, [pc, #708]	@ (10010540 <_svfprintf_r+0x630>)
1001027c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10010280:	4650      	mov	r0, sl
10010282:	4659      	mov	r1, fp
10010284:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10010288:	f008 fc54 	bl	10018b34 <__aeabi_dcmpun>
1001028c:	2800      	cmp	r0, #0
1001028e:	f040 8546 	bne.w	10010d1e <_svfprintf_r+0xe0e>
10010292:	4bab      	ldr	r3, [pc, #684]	@ (10010540 <_svfprintf_r+0x630>)
10010294:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10010298:	4650      	mov	r0, sl
1001029a:	4659      	mov	r1, fp
1001029c:	f008 fc2c 	bl	10018af8 <__aeabi_dcmple>
100102a0:	2800      	cmp	r0, #0
100102a2:	f040 853c 	bne.w	10010d1e <_svfprintf_r+0xe0e>
100102a6:	2200      	movs	r2, #0
100102a8:	2300      	movs	r3, #0
100102aa:	4630      	mov	r0, r6
100102ac:	4639      	mov	r1, r7
100102ae:	f008 fc19 	bl	10018ae4 <__aeabi_dcmplt>
100102b2:	2800      	cmp	r0, #0
100102b4:	f041 8051 	bne.w	1001135a <_svfprintf_r+0x144a>
100102b8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100102bc:	4da1      	ldr	r5, [pc, #644]	@ (10010544 <_svfprintf_r+0x634>)
100102be:	4ba2      	ldr	r3, [pc, #648]	@ (10010548 <_svfprintf_r+0x638>)
100102c0:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
100102c4:	990e      	ldr	r1, [sp, #56]	@ 0x38
100102c6:	2947      	cmp	r1, #71	@ 0x47
100102c8:	bfc8      	it	gt
100102ca:	461d      	movgt	r5, r3
100102cc:	2300      	movs	r3, #0
100102ce:	2103      	movs	r1, #3
100102d0:	930c      	str	r3, [sp, #48]	@ 0x30
100102d2:	9106      	str	r1, [sp, #24]
100102d4:	468b      	mov	fp, r1
100102d6:	9308      	str	r3, [sp, #32]
100102d8:	9314      	str	r3, [sp, #80]	@ 0x50
100102da:	9310      	str	r3, [sp, #64]	@ 0x40
100102dc:	9312      	str	r3, [sp, #72]	@ 0x48
100102de:	2a00      	cmp	r2, #0
100102e0:	f43f af4a 	beq.w	10010178 <_svfprintf_r+0x268>
100102e4:	9b06      	ldr	r3, [sp, #24]
100102e6:	3301      	adds	r3, #1
100102e8:	9306      	str	r3, [sp, #24]
100102ea:	e745      	b.n	10010178 <_svfprintf_r+0x268>
100102ec:	2e10      	cmp	r6, #16
100102ee:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100102f0:	f341 8276 	ble.w	100117e0 <_svfprintf_r+0x18d0>
100102f4:	4895      	ldr	r0, [pc, #596]	@ (1001054c <_svfprintf_r+0x63c>)
100102f6:	9521      	str	r5, [sp, #132]	@ 0x84
100102f8:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
100102fc:	4621      	mov	r1, r4
100102fe:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10010300:	9c07      	ldr	r4, [sp, #28]
10010302:	9015      	str	r0, [sp, #84]	@ 0x54
10010304:	f04f 0a10 	mov.w	sl, #16
10010308:	4607      	mov	r7, r0
1001030a:	e004      	b.n	10010316 <_svfprintf_r+0x406>
1001030c:	3e10      	subs	r6, #16
1001030e:	2e10      	cmp	r6, #16
10010310:	f108 0808 	add.w	r8, r8, #8
10010314:	dd16      	ble.n	10010344 <_svfprintf_r+0x434>
10010316:	3201      	adds	r2, #1
10010318:	3110      	adds	r1, #16
1001031a:	2a07      	cmp	r2, #7
1001031c:	e9c8 7a00 	strd	r7, sl, [r8]
10010320:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10010324:	ddf2      	ble.n	1001030c <_svfprintf_r+0x3fc>
10010326:	aa32      	add	r2, sp, #200	@ 0xc8
10010328:	4629      	mov	r1, r5
1001032a:	4620      	mov	r0, r4
1001032c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010330:	f003 fdba 	bl	10013ea8 <__ssprint_r>
10010334:	2800      	cmp	r0, #0
10010336:	f040 86f0 	bne.w	1001111a <_svfprintf_r+0x120a>
1001033a:	3e10      	subs	r6, #16
1001033c:	2e10      	cmp	r6, #16
1001033e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10010342:	dce8      	bgt.n	10010316 <_svfprintf_r+0x406>
10010344:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10010348:	9d21      	ldr	r5, [sp, #132]	@ 0x84
1001034a:	460c      	mov	r4, r1
1001034c:	3201      	adds	r2, #1
1001034e:	9915      	ldr	r1, [sp, #84]	@ 0x54
10010350:	f8c8 1000 	str.w	r1, [r8]
10010354:	4434      	add	r4, r6
10010356:	2a07      	cmp	r2, #7
10010358:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
1001035c:	f8c8 6004 	str.w	r6, [r8, #4]
10010360:	f300 86ca 	bgt.w	100110f8 <_svfprintf_r+0x11e8>
10010364:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10010368:	f108 0808 	add.w	r8, r8, #8
1001036c:	e714      	b.n	10010198 <_svfprintf_r+0x288>
1001036e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10010370:	2b43      	cmp	r3, #67	@ 0x43
10010372:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010376:	f102 0404 	add.w	r4, r2, #4
1001037a:	d003      	beq.n	10010384 <_svfprintf_r+0x474>
1001037c:	f019 0f10 	tst.w	r9, #16
10010380:	f000 855c 	beq.w	10010e3c <_svfprintf_r+0xf2c>
10010384:	2208      	movs	r2, #8
10010386:	2100      	movs	r1, #0
10010388:	a830      	add	r0, sp, #192	@ 0xc0
1001038a:	f001 fe55 	bl	10012038 <memset>
1001038e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010390:	9807      	ldr	r0, [sp, #28]
10010392:	681a      	ldr	r2, [r3, #0]
10010394:	ad45      	add	r5, sp, #276	@ 0x114
10010396:	ab30      	add	r3, sp, #192	@ 0xc0
10010398:	4629      	mov	r1, r5
1001039a:	f001 fe9f 	bl	100120dc <_wcrtomb_r>
1001039e:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100103a2:	4683      	mov	fp, r0
100103a4:	f001 827e 	beq.w	100118a4 <_svfprintf_r+0x1994>
100103a8:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
100103ac:	9306      	str	r3, [sp, #24]
100103ae:	2200      	movs	r2, #0
100103b0:	940d      	str	r4, [sp, #52]	@ 0x34
100103b2:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100103b6:	920c      	str	r2, [sp, #48]	@ 0x30
100103b8:	9208      	str	r2, [sp, #32]
100103ba:	9214      	str	r2, [sp, #80]	@ 0x50
100103bc:	9210      	str	r2, [sp, #64]	@ 0x40
100103be:	9212      	str	r2, [sp, #72]	@ 0x48
100103c0:	e6da      	b.n	10010178 <_svfprintf_r+0x268>
100103c2:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
100103c4:	f856 5b04 	ldr.w	r5, [r6], #4
100103c8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100103cc:	2300      	movs	r3, #0
100103ce:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100103d2:	2d00      	cmp	r5, #0
100103d4:	f000 8557 	beq.w	10010e86 <_svfprintf_r+0xf76>
100103d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100103da:	2b53      	cmp	r3, #83	@ 0x53
100103dc:	f000 86b9 	beq.w	10011152 <_svfprintf_r+0x1242>
100103e0:	f019 0310 	ands.w	r3, r9, #16
100103e4:	9312      	str	r3, [sp, #72]	@ 0x48
100103e6:	f040 86b4 	bne.w	10011152 <_svfprintf_r+0x1242>
100103ea:	9b08      	ldr	r3, [sp, #32]
100103ec:	1c5a      	adds	r2, r3, #1
100103ee:	f001 8092 	beq.w	10011516 <_svfprintf_r+0x1606>
100103f2:	9912      	ldr	r1, [sp, #72]	@ 0x48
100103f4:	461a      	mov	r2, r3
100103f6:	4628      	mov	r0, r5
100103f8:	f003 f802 	bl	10013400 <memchr>
100103fc:	900c      	str	r0, [sp, #48]	@ 0x30
100103fe:	2800      	cmp	r0, #0
10010400:	f001 82ed 	beq.w	100119de <_svfprintf_r+0x1ace>
10010404:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10010406:	960d      	str	r6, [sp, #52]	@ 0x34
10010408:	eba3 0b05 	sub.w	fp, r3, r5
1001040c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001040e:	9308      	str	r3, [sp, #32]
10010410:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10010414:	9314      	str	r3, [sp, #80]	@ 0x50
10010416:	9310      	str	r3, [sp, #64]	@ 0x40
10010418:	930c      	str	r3, [sp, #48]	@ 0x30
1001041a:	2373      	movs	r3, #115	@ 0x73
1001041c:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10010420:	9106      	str	r1, [sp, #24]
10010422:	930e      	str	r3, [sp, #56]	@ 0x38
10010424:	e75b      	b.n	100102de <_svfprintf_r+0x3ce>
10010426:	f019 0f20 	tst.w	r9, #32
1001042a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001042e:	f000 80ec 	beq.w	1001060a <_svfprintf_r+0x6fa>
10010432:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010434:	3307      	adds	r3, #7
10010436:	f023 0307 	bic.w	r3, r3, #7
1001043a:	461a      	mov	r2, r3
1001043c:	6859      	ldr	r1, [r3, #4]
1001043e:	f852 3b08 	ldr.w	r3, [r2], #8
10010442:	920d      	str	r2, [sp, #52]	@ 0x34
10010444:	460a      	mov	r2, r1
10010446:	2900      	cmp	r1, #0
10010448:	f2c0 8419 	blt.w	10010c7e <_svfprintf_r+0xd6e>
1001044c:	9908      	ldr	r1, [sp, #32]
1001044e:	3101      	adds	r1, #1
10010450:	f000 829c 	beq.w	1001098c <_svfprintf_r+0xa7c>
10010454:	ea53 0102 	orrs.w	r1, r3, r2
10010458:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
1001045c:	f040 8297 	bne.w	1001098e <_svfprintf_r+0xa7e>
10010460:	9a08      	ldr	r2, [sp, #32]
10010462:	2a00      	cmp	r2, #0
10010464:	f040 8298 	bne.w	10010998 <_svfprintf_r+0xa88>
10010468:	46a1      	mov	r9, r4
1001046a:	4693      	mov	fp, r2
1001046c:	ad5e      	add	r5, sp, #376	@ 0x178
1001046e:	e151      	b.n	10010714 <_svfprintf_r+0x804>
10010470:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010472:	f853 2b04 	ldr.w	r2, [r3], #4
10010476:	920b      	str	r2, [sp, #44]	@ 0x2c
10010478:	2a00      	cmp	r2, #0
1001047a:	f280 8424 	bge.w	10010cc6 <_svfprintf_r+0xdb6>
1001047e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10010480:	930d      	str	r3, [sp, #52]	@ 0x34
10010482:	4252      	negs	r2, r2
10010484:	920b      	str	r2, [sp, #44]	@ 0x2c
10010486:	7823      	ldrb	r3, [r4, #0]
10010488:	f049 0904 	orr.w	r9, r9, #4
1001048c:	e597      	b.n	1000ffbe <_svfprintf_r+0xae>
1001048e:	232b      	movs	r3, #43	@ 0x2b
10010490:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10010494:	7823      	ldrb	r3, [r4, #0]
10010496:	e592      	b.n	1000ffbe <_svfprintf_r+0xae>
10010498:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001049c:	f049 0910 	orr.w	r9, r9, #16
100104a0:	f019 0220 	ands.w	r2, r9, #32
100104a4:	f000 83b4 	beq.w	10010c10 <_svfprintf_r+0xd00>
100104a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100104aa:	3307      	adds	r3, #7
100104ac:	f023 0307 	bic.w	r3, r3, #7
100104b0:	4619      	mov	r1, r3
100104b2:	685a      	ldr	r2, [r3, #4]
100104b4:	f851 3b08 	ldr.w	r3, [r1], #8
100104b8:	910d      	str	r1, [sp, #52]	@ 0x34
100104ba:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
100104be:	2100      	movs	r1, #0
100104c0:	2000      	movs	r0, #0
100104c2:	9d08      	ldr	r5, [sp, #32]
100104c4:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
100104c8:	1c6f      	adds	r7, r5, #1
100104ca:	f000 810c 	beq.w	100106e6 <_svfprintf_r+0x7d6>
100104ce:	ea53 0002 	orrs.w	r0, r3, r2
100104d2:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
100104d6:	f040 8105 	bne.w	100106e4 <_svfprintf_r+0x7d4>
100104da:	2d00      	cmp	r5, #0
100104dc:	f040 8627 	bne.w	1001112e <_svfprintf_r+0x121e>
100104e0:	2900      	cmp	r1, #0
100104e2:	f040 83c8 	bne.w	10010c76 <_svfprintf_r+0xd66>
100104e6:	f014 0b01 	ands.w	fp, r4, #1
100104ea:	f000 83f0 	beq.w	10010cce <_svfprintf_r+0xdbe>
100104ee:	2330      	movs	r3, #48	@ 0x30
100104f0:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100104f4:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100104f8:	e10c      	b.n	10010714 <_svfprintf_r+0x804>
100104fa:	7823      	ldrb	r3, [r4, #0]
100104fc:	2b68      	cmp	r3, #104	@ 0x68
100104fe:	bf03      	ittte	eq
10010500:	7863      	ldrbeq	r3, [r4, #1]
10010502:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10010506:	3401      	addeq	r4, #1
10010508:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
1001050c:	e557      	b.n	1000ffbe <_svfprintf_r+0xae>
1001050e:	f019 0f20 	tst.w	r9, #32
10010512:	940f      	str	r4, [sp, #60]	@ 0x3c
10010514:	f000 83e5 	beq.w	10010ce2 <_svfprintf_r+0xdd2>
10010518:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001051a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001051c:	681b      	ldr	r3, [r3, #0]
1001051e:	601a      	str	r2, [r3, #0]
10010520:	17d2      	asrs	r2, r2, #31
10010522:	605a      	str	r2, [r3, #4]
10010524:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010526:	3304      	adds	r3, #4
10010528:	930d      	str	r3, [sp, #52]	@ 0x34
1001052a:	e692      	b.n	10010252 <_svfprintf_r+0x342>
1001052c:	7823      	ldrb	r3, [r4, #0]
1001052e:	2b6c      	cmp	r3, #108	@ 0x6c
10010530:	bf03      	ittte	eq
10010532:	7863      	ldrbeq	r3, [r4, #1]
10010534:	f049 0920 	orreq.w	r9, r9, #32
10010538:	3401      	addeq	r4, #1
1001053a:	f049 0910 	orrne.w	r9, r9, #16
1001053e:	e53e      	b.n	1000ffbe <_svfprintf_r+0xae>
10010540:	7fefffff 	.word	0x7fefffff
10010544:	10019110 	.word	0x10019110
10010548:	10019114 	.word	0x10019114
1001054c:	10019164 	.word	0x10019164
10010550:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10010552:	940f      	str	r4, [sp, #60]	@ 0x3c
10010554:	f852 3b04 	ldr.w	r3, [r2], #4
10010558:	920d      	str	r2, [sp, #52]	@ 0x34
1001055a:	f647 0230 	movw	r2, #30768	@ 0x7830
1001055e:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10010562:	2078      	movs	r0, #120	@ 0x78
10010564:	4aa8      	ldr	r2, [pc, #672]	@ (10010808 <_svfprintf_r+0x8f8>)
10010566:	9219      	str	r2, [sp, #100]	@ 0x64
10010568:	f049 0402 	orr.w	r4, r9, #2
1001056c:	2200      	movs	r2, #0
1001056e:	2102      	movs	r1, #2
10010570:	900e      	str	r0, [sp, #56]	@ 0x38
10010572:	e7a5      	b.n	100104c0 <_svfprintf_r+0x5b0>
10010574:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010578:	f049 0410 	orr.w	r4, r9, #16
1001057c:	f014 0220 	ands.w	r2, r4, #32
10010580:	f000 8355 	beq.w	10010c2e <_svfprintf_r+0xd1e>
10010584:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010586:	3307      	adds	r3, #7
10010588:	f023 0307 	bic.w	r3, r3, #7
1001058c:	4619      	mov	r1, r3
1001058e:	685a      	ldr	r2, [r3, #4]
10010590:	f851 3b08 	ldr.w	r3, [r1], #8
10010594:	910d      	str	r1, [sp, #52]	@ 0x34
10010596:	2101      	movs	r1, #1
10010598:	e792      	b.n	100104c0 <_svfprintf_r+0x5b0>
1001059a:	7823      	ldrb	r3, [r4, #0]
1001059c:	f049 0908 	orr.w	r9, r9, #8
100105a0:	e50d      	b.n	1000ffbe <_svfprintf_r+0xae>
100105a2:	7823      	ldrb	r3, [r4, #0]
100105a4:	f049 0901 	orr.w	r9, r9, #1
100105a8:	e509      	b.n	1000ffbe <_svfprintf_r+0xae>
100105aa:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100105ae:	7823      	ldrb	r3, [r4, #0]
100105b0:	2a00      	cmp	r2, #0
100105b2:	f47f ad04 	bne.w	1000ffbe <_svfprintf_r+0xae>
100105b6:	2220      	movs	r2, #32
100105b8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100105bc:	e4ff      	b.n	1000ffbe <_svfprintf_r+0xae>
100105be:	7823      	ldrb	r3, [r4, #0]
100105c0:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
100105c4:	e4fb      	b.n	1000ffbe <_svfprintf_r+0xae>
100105c6:	4621      	mov	r1, r4
100105c8:	f811 3b01 	ldrb.w	r3, [r1], #1
100105cc:	2b2a      	cmp	r3, #42	@ 0x2a
100105ce:	f001 8229 	beq.w	10011a24 <_svfprintf_r+0x1b14>
100105d2:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100105d6:	2a09      	cmp	r2, #9
100105d8:	460c      	mov	r4, r1
100105da:	bf98      	it	ls
100105dc:	2100      	movls	r1, #0
100105de:	f201 8130 	bhi.w	10011842 <_svfprintf_r+0x1932>
100105e2:	f814 3b01 	ldrb.w	r3, [r4], #1
100105e6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100105ea:	eb02 0141 	add.w	r1, r2, r1, lsl #1
100105ee:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100105f2:	2a09      	cmp	r2, #9
100105f4:	d9f5      	bls.n	100105e2 <_svfprintf_r+0x6d2>
100105f6:	9108      	str	r1, [sp, #32]
100105f8:	e4e2      	b.n	1000ffc0 <_svfprintf_r+0xb0>
100105fa:	f049 0910 	orr.w	r9, r9, #16
100105fe:	f019 0f20 	tst.w	r9, #32
10010602:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010606:	f47f af14 	bne.w	10010432 <_svfprintf_r+0x522>
1001060a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001060c:	f019 0f10 	tst.w	r9, #16
10010610:	f852 3b04 	ldr.w	r3, [r2], #4
10010614:	920d      	str	r2, [sp, #52]	@ 0x34
10010616:	f040 8360 	bne.w	10010cda <_svfprintf_r+0xdca>
1001061a:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001061e:	f000 8358 	beq.w	10010cd2 <_svfprintf_r+0xdc2>
10010622:	f343 32c0 	sbfx	r2, r3, #15, #1
10010626:	4611      	mov	r1, r2
10010628:	b21b      	sxth	r3, r3
1001062a:	e70c      	b.n	10010446 <_svfprintf_r+0x536>
1001062c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001062e:	2b65      	cmp	r3, #101	@ 0x65
10010630:	f340 8166 	ble.w	10010900 <_svfprintf_r+0x9f0>
10010634:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10010638:	2200      	movs	r2, #0
1001063a:	2300      	movs	r3, #0
1001063c:	f008 fa48 	bl	10018ad0 <__aeabi_dcmpeq>
10010640:	2800      	cmp	r0, #0
10010642:	f000 8211 	beq.w	10010a68 <_svfprintf_r+0xb58>
10010646:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010648:	4a70      	ldr	r2, [pc, #448]	@ (1001080c <_svfprintf_r+0x8fc>)
1001064a:	f8c8 2000 	str.w	r2, [r8]
1001064e:	3301      	adds	r3, #1
10010650:	3401      	adds	r4, #1
10010652:	2201      	movs	r2, #1
10010654:	2b07      	cmp	r3, #7
10010656:	9434      	str	r4, [sp, #208]	@ 0xd0
10010658:	9333      	str	r3, [sp, #204]	@ 0xcc
1001065a:	f8c8 2004 	str.w	r2, [r8, #4]
1001065e:	f300 856b 	bgt.w	10011138 <_svfprintf_r+0x1228>
10010662:	f108 0808 	add.w	r8, r8, #8
10010666:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10010668:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001066a:	4293      	cmp	r3, r2
1001066c:	f280 8326 	bge.w	10010cbc <_svfprintf_r+0xdac>
10010670:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10010672:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10010674:	441c      	add	r4, r3
10010676:	e9c8 2300 	strd	r2, r3, [r8]
1001067a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001067c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001067e:	3301      	adds	r3, #1
10010680:	2b07      	cmp	r3, #7
10010682:	9333      	str	r3, [sp, #204]	@ 0xcc
10010684:	f300 83e4 	bgt.w	10010e50 <_svfprintf_r+0xf40>
10010688:	f108 0808 	add.w	r8, r8, #8
1001068c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001068e:	1e5d      	subs	r5, r3, #1
10010690:	2d00      	cmp	r5, #0
10010692:	f77f adc0 	ble.w	10010216 <_svfprintf_r+0x306>
10010696:	2d10      	cmp	r5, #16
10010698:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001069a:	f340 85ad 	ble.w	100111f8 <_svfprintf_r+0x12e8>
1001069e:	4f5c      	ldr	r7, [pc, #368]	@ (10010810 <_svfprintf_r+0x900>)
100106a0:	f8dd b01c 	ldr.w	fp, [sp, #28]
100106a4:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100106a8:	9715      	str	r7, [sp, #84]	@ 0x54
100106aa:	2610      	movs	r6, #16
100106ac:	e005      	b.n	100106ba <_svfprintf_r+0x7aa>
100106ae:	f108 0808 	add.w	r8, r8, #8
100106b2:	3d10      	subs	r5, #16
100106b4:	2d10      	cmp	r5, #16
100106b6:	f340 85a1 	ble.w	100111fc <_svfprintf_r+0x12ec>
100106ba:	3301      	adds	r3, #1
100106bc:	3410      	adds	r4, #16
100106be:	2b07      	cmp	r3, #7
100106c0:	e9c8 7600 	strd	r7, r6, [r8]
100106c4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100106c8:	ddf1      	ble.n	100106ae <_svfprintf_r+0x79e>
100106ca:	aa32      	add	r2, sp, #200	@ 0xc8
100106cc:	4651      	mov	r1, sl
100106ce:	4658      	mov	r0, fp
100106d0:	f003 fbea 	bl	10013ea8 <__ssprint_r>
100106d4:	2800      	cmp	r0, #0
100106d6:	f040 82c0 	bne.w	10010c5a <_svfprintf_r+0xd4a>
100106da:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100106de:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100106e2:	e7e6      	b.n	100106b2 <_svfprintf_r+0x7a2>
100106e4:	464c      	mov	r4, r9
100106e6:	2901      	cmp	r1, #1
100106e8:	f000 8151 	beq.w	1001098e <_svfprintf_r+0xa7e>
100106ec:	2902      	cmp	r1, #2
100106ee:	ad5e      	add	r5, sp, #376	@ 0x178
100106f0:	d11e      	bne.n	10010730 <_svfprintf_r+0x820>
100106f2:	9819      	ldr	r0, [sp, #100]	@ 0x64
100106f4:	f003 010f 	and.w	r1, r3, #15
100106f8:	091b      	lsrs	r3, r3, #4
100106fa:	5c41      	ldrb	r1, [r0, r1]
100106fc:	f805 1d01 	strb.w	r1, [r5, #-1]!
10010700:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10010704:	0912      	lsrs	r2, r2, #4
10010706:	ea53 0102 	orrs.w	r1, r3, r2
1001070a:	d1f3      	bne.n	100106f4 <_svfprintf_r+0x7e4>
1001070c:	ab5e      	add	r3, sp, #376	@ 0x178
1001070e:	46a1      	mov	r9, r4
10010710:	eba3 0b05 	sub.w	fp, r3, r5
10010714:	9908      	ldr	r1, [sp, #32]
10010716:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001071a:	4559      	cmp	r1, fp
1001071c:	f04f 0300 	mov.w	r3, #0
10010720:	bfb8      	it	lt
10010722:	4659      	movlt	r1, fp
10010724:	930c      	str	r3, [sp, #48]	@ 0x30
10010726:	9106      	str	r1, [sp, #24]
10010728:	9314      	str	r3, [sp, #80]	@ 0x50
1001072a:	9310      	str	r3, [sp, #64]	@ 0x40
1001072c:	9312      	str	r3, [sp, #72]	@ 0x48
1001072e:	e5d6      	b.n	100102de <_svfprintf_r+0x3ce>
10010730:	f003 0107 	and.w	r1, r3, #7
10010734:	08db      	lsrs	r3, r3, #3
10010736:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001073a:	08d2      	lsrs	r2, r2, #3
1001073c:	3130      	adds	r1, #48	@ 0x30
1001073e:	ea53 0602 	orrs.w	r6, r3, r2
10010742:	4628      	mov	r0, r5
10010744:	f805 1d01 	strb.w	r1, [r5, #-1]!
10010748:	d1f2      	bne.n	10010730 <_svfprintf_r+0x820>
1001074a:	07e6      	lsls	r6, r4, #31
1001074c:	d5de      	bpl.n	1001070c <_svfprintf_r+0x7fc>
1001074e:	2930      	cmp	r1, #48	@ 0x30
10010750:	d0dc      	beq.n	1001070c <_svfprintf_r+0x7fc>
10010752:	2330      	movs	r3, #48	@ 0x30
10010754:	3802      	subs	r0, #2
10010756:	f805 3c01 	strb.w	r3, [r5, #-1]
1001075a:	ab5e      	add	r3, sp, #376	@ 0x178
1001075c:	46a1      	mov	r9, r4
1001075e:	eba3 0b00 	sub.w	fp, r3, r0
10010762:	4605      	mov	r5, r0
10010764:	e7d6      	b.n	10010714 <_svfprintf_r+0x804>
10010766:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10010768:	9a06      	ldr	r2, [sp, #24]
1001076a:	1a9e      	subs	r6, r3, r2
1001076c:	2e00      	cmp	r6, #0
1001076e:	f77f ad3a 	ble.w	100101e6 <_svfprintf_r+0x2d6>
10010772:	2e10      	cmp	r6, #16
10010774:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010776:	f341 809f 	ble.w	100118b8 <_svfprintf_r+0x19a8>
1001077a:	4825      	ldr	r0, [pc, #148]	@ (10010810 <_svfprintf_r+0x900>)
1001077c:	f8dd a01c 	ldr.w	sl, [sp, #28]
10010780:	9015      	str	r0, [sp, #84]	@ 0x54
10010782:	4621      	mov	r1, r4
10010784:	2710      	movs	r7, #16
10010786:	461a      	mov	r2, r3
10010788:	4604      	mov	r4, r0
1001078a:	e004      	b.n	10010796 <_svfprintf_r+0x886>
1001078c:	3e10      	subs	r6, #16
1001078e:	2e10      	cmp	r6, #16
10010790:	f108 0808 	add.w	r8, r8, #8
10010794:	dd16      	ble.n	100107c4 <_svfprintf_r+0x8b4>
10010796:	3201      	adds	r2, #1
10010798:	3110      	adds	r1, #16
1001079a:	2a07      	cmp	r2, #7
1001079c:	e9c8 4700 	strd	r4, r7, [r8]
100107a0:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100107a4:	ddf2      	ble.n	1001078c <_svfprintf_r+0x87c>
100107a6:	9909      	ldr	r1, [sp, #36]	@ 0x24
100107a8:	aa32      	add	r2, sp, #200	@ 0xc8
100107aa:	4650      	mov	r0, sl
100107ac:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100107b0:	f003 fb7a 	bl	10013ea8 <__ssprint_r>
100107b4:	2800      	cmp	r0, #0
100107b6:	f040 84b2 	bne.w	1001111e <_svfprintf_r+0x120e>
100107ba:	3e10      	subs	r6, #16
100107bc:	2e10      	cmp	r6, #16
100107be:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
100107c2:	dce8      	bgt.n	10010796 <_svfprintf_r+0x886>
100107c4:	460c      	mov	r4, r1
100107c6:	4613      	mov	r3, r2
100107c8:	3301      	adds	r3, #1
100107ca:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100107cc:	f8c8 2000 	str.w	r2, [r8]
100107d0:	4434      	add	r4, r6
100107d2:	2b07      	cmp	r3, #7
100107d4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100107d8:	f8c8 6004 	str.w	r6, [r8, #4]
100107dc:	f300 851c 	bgt.w	10011218 <_svfprintf_r+0x1308>
100107e0:	9b08      	ldr	r3, [sp, #32]
100107e2:	eba3 060b 	sub.w	r6, r3, fp
100107e6:	2e00      	cmp	r6, #0
100107e8:	f108 0808 	add.w	r8, r8, #8
100107ec:	f77f ad01 	ble.w	100101f2 <_svfprintf_r+0x2e2>
100107f0:	4a07      	ldr	r2, [pc, #28]	@ (10010810 <_svfprintf_r+0x900>)
100107f2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100107f4:	9215      	str	r2, [sp, #84]	@ 0x54
100107f6:	2e10      	cmp	r6, #16
100107f8:	dd2a      	ble.n	10010850 <_svfprintf_r+0x940>
100107fa:	4622      	mov	r2, r4
100107fc:	9f07      	ldr	r7, [sp, #28]
100107fe:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10010800:	f04f 0a10 	mov.w	sl, #16
10010804:	e00b      	b.n	1001081e <_svfprintf_r+0x90e>
10010806:	bf00      	nop
10010808:	10019120 	.word	0x10019120
1001080c:	10019150 	.word	0x10019150
10010810:	10019154 	.word	0x10019154
10010814:	3e10      	subs	r6, #16
10010816:	2e10      	cmp	r6, #16
10010818:	f108 0808 	add.w	r8, r8, #8
1001081c:	dd17      	ble.n	1001084e <_svfprintf_r+0x93e>
1001081e:	3301      	adds	r3, #1
10010820:	498e      	ldr	r1, [pc, #568]	@ (10010a5c <_svfprintf_r+0xb4c>)
10010822:	3210      	adds	r2, #16
10010824:	2b07      	cmp	r3, #7
10010826:	e9c8 1a00 	strd	r1, sl, [r8]
1001082a:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
1001082e:	ddf1      	ble.n	10010814 <_svfprintf_r+0x904>
10010830:	aa32      	add	r2, sp, #200	@ 0xc8
10010832:	4621      	mov	r1, r4
10010834:	4638      	mov	r0, r7
10010836:	f003 fb37 	bl	10013ea8 <__ssprint_r>
1001083a:	2800      	cmp	r0, #0
1001083c:	f040 820c 	bne.w	10010c58 <_svfprintf_r+0xd48>
10010840:	3e10      	subs	r6, #16
10010842:	2e10      	cmp	r6, #16
10010844:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10010848:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001084c:	dce7      	bgt.n	1001081e <_svfprintf_r+0x90e>
1001084e:	4614      	mov	r4, r2
10010850:	3301      	adds	r3, #1
10010852:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10010854:	f8c8 2000 	str.w	r2, [r8]
10010858:	4434      	add	r4, r6
1001085a:	2b07      	cmp	r3, #7
1001085c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010860:	f8c8 6004 	str.w	r6, [r8, #4]
10010864:	f300 81c7 	bgt.w	10010bf6 <_svfprintf_r+0xce6>
10010868:	f108 0808 	add.w	r8, r8, #8
1001086c:	e4c1      	b.n	100101f2 <_svfprintf_r+0x2e2>
1001086e:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010870:	9807      	ldr	r0, [sp, #28]
10010872:	aa32      	add	r2, sp, #200	@ 0xc8
10010874:	f003 fb18 	bl	10013ea8 <__ssprint_r>
10010878:	2800      	cmp	r0, #0
1001087a:	f43f ace0 	beq.w	1001023e <_svfprintf_r+0x32e>
1001087e:	f8dd b01c 	ldr.w	fp, [sp, #28]
10010882:	e1ea      	b.n	10010c5a <_svfprintf_r+0xd4a>
10010884:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010886:	4976      	ldr	r1, [pc, #472]	@ (10010a60 <_svfprintf_r+0xb50>)
10010888:	f8c8 1000 	str.w	r1, [r8]
1001088c:	3301      	adds	r3, #1
1001088e:	3401      	adds	r4, #1
10010890:	2101      	movs	r1, #1
10010892:	2b07      	cmp	r3, #7
10010894:	9434      	str	r4, [sp, #208]	@ 0xd0
10010896:	9333      	str	r3, [sp, #204]	@ 0xcc
10010898:	f8c8 1004 	str.w	r1, [r8, #4]
1001089c:	f300 8573 	bgt.w	10011386 <_svfprintf_r+0x1476>
100108a0:	f108 0808 	add.w	r8, r8, #8
100108a4:	2a00      	cmp	r2, #0
100108a6:	f040 84e5 	bne.w	10011274 <_svfprintf_r+0x1364>
100108aa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100108ac:	f009 0301 	and.w	r3, r9, #1
100108b0:	4313      	orrs	r3, r2
100108b2:	f43f acb0 	beq.w	10010216 <_svfprintf_r+0x306>
100108b6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100108b8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100108ba:	441c      	add	r4, r3
100108bc:	e9c8 2300 	strd	r2, r3, [r8]
100108c0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100108c2:	9434      	str	r4, [sp, #208]	@ 0xd0
100108c4:	3301      	adds	r3, #1
100108c6:	2b07      	cmp	r3, #7
100108c8:	9333      	str	r3, [sp, #204]	@ 0xcc
100108ca:	f300 8643 	bgt.w	10011554 <_svfprintf_r+0x1644>
100108ce:	f108 0808 	add.w	r8, r8, #8
100108d2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100108d4:	f8c8 5000 	str.w	r5, [r8]
100108d8:	3301      	adds	r3, #1
100108da:	4414      	add	r4, r2
100108dc:	2b07      	cmp	r3, #7
100108de:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100108e2:	f8c8 2004 	str.w	r2, [r8, #4]
100108e6:	f77f ac94 	ble.w	10010212 <_svfprintf_r+0x302>
100108ea:	9909      	ldr	r1, [sp, #36]	@ 0x24
100108ec:	9807      	ldr	r0, [sp, #28]
100108ee:	aa32      	add	r2, sp, #200	@ 0xc8
100108f0:	f003 fada 	bl	10013ea8 <__ssprint_r>
100108f4:	2800      	cmp	r0, #0
100108f6:	d1c2      	bne.n	1001087e <_svfprintf_r+0x96e>
100108f8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100108fa:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100108fe:	e48a      	b.n	10010216 <_svfprintf_r+0x306>
10010900:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10010902:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10010904:	2b01      	cmp	r3, #1
10010906:	f104 0401 	add.w	r4, r4, #1
1001090a:	f106 0601 	add.w	r6, r6, #1
1001090e:	f108 0708 	add.w	r7, r8, #8
10010912:	f340 8129 	ble.w	10010b68 <_svfprintf_r+0xc58>
10010916:	2301      	movs	r3, #1
10010918:	2e07      	cmp	r6, #7
1001091a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001091e:	f8c8 5000 	str.w	r5, [r8]
10010922:	f8c8 3004 	str.w	r3, [r8, #4]
10010926:	f300 81b1 	bgt.w	10010c8c <_svfprintf_r+0xd7c>
1001092a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001092c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001092e:	3601      	adds	r6, #1
10010930:	441c      	add	r4, r3
10010932:	2e07      	cmp	r6, #7
10010934:	e9c7 2300 	strd	r2, r3, [r7]
10010938:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001093c:	f300 81b2 	bgt.w	10010ca4 <_svfprintf_r+0xd94>
10010940:	3708      	adds	r7, #8
10010942:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10010944:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10010948:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
1001094c:	2200      	movs	r2, #0
1001094e:	2300      	movs	r3, #0
10010950:	f008 f8be 	bl	10018ad0 <__aeabi_dcmpeq>
10010954:	2800      	cmp	r0, #0
10010956:	f040 8121 	bne.w	10010b9c <_svfprintf_r+0xc8c>
1001095a:	3601      	adds	r6, #1
1001095c:	3501      	adds	r5, #1
1001095e:	4444      	add	r4, r8
10010960:	2e07      	cmp	r6, #7
10010962:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10010966:	603d      	str	r5, [r7, #0]
10010968:	f8c7 8004 	str.w	r8, [r7, #4]
1001096c:	f300 810a 	bgt.w	10010b84 <_svfprintf_r+0xc74>
10010970:	3708      	adds	r7, #8
10010972:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10010974:	607b      	str	r3, [r7, #4]
10010976:	3601      	adds	r6, #1
10010978:	441c      	add	r4, r3
1001097a:	2e07      	cmp	r6, #7
1001097c:	ab2c      	add	r3, sp, #176	@ 0xb0
1001097e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10010982:	603b      	str	r3, [r7, #0]
10010984:	dcb1      	bgt.n	100108ea <_svfprintf_r+0x9da>
10010986:	f107 0808 	add.w	r8, r7, #8
1001098a:	e444      	b.n	10010216 <_svfprintf_r+0x306>
1001098c:	464c      	mov	r4, r9
1001098e:	2b0a      	cmp	r3, #10
10010990:	f172 0100 	sbcs.w	r1, r2, #0
10010994:	f080 8353 	bcs.w	1001103e <_svfprintf_r+0x112e>
10010998:	3330      	adds	r3, #48	@ 0x30
1001099a:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001099e:	46a1      	mov	r9, r4
100109a0:	f04f 0b01 	mov.w	fp, #1
100109a4:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100109a8:	e6b4      	b.n	10010714 <_svfprintf_r+0x804>
100109aa:	9909      	ldr	r1, [sp, #36]	@ 0x24
100109ac:	9807      	ldr	r0, [sp, #28]
100109ae:	aa32      	add	r2, sp, #200	@ 0xc8
100109b0:	f003 fa7a 	bl	10013ea8 <__ssprint_r>
100109b4:	2800      	cmp	r0, #0
100109b6:	f47f af62 	bne.w	1001087e <_svfprintf_r+0x96e>
100109ba:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100109bc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100109c0:	e40e      	b.n	100101e0 <_svfprintf_r+0x2d0>
100109c2:	9909      	ldr	r1, [sp, #36]	@ 0x24
100109c4:	9807      	ldr	r0, [sp, #28]
100109c6:	9315      	str	r3, [sp, #84]	@ 0x54
100109c8:	aa32      	add	r2, sp, #200	@ 0xc8
100109ca:	f003 fa6d 	bl	10013ea8 <__ssprint_r>
100109ce:	2800      	cmp	r0, #0
100109d0:	f47f af55 	bne.w	1001087e <_svfprintf_r+0x96e>
100109d4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100109d6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100109d8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100109dc:	f7ff bbee 	b.w	100101bc <_svfprintf_r+0x2ac>
100109e0:	2d10      	cmp	r5, #16
100109e2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100109e4:	f340 8731 	ble.w	1001184a <_svfprintf_r+0x193a>
100109e8:	4f1e      	ldr	r7, [pc, #120]	@ (10010a64 <_svfprintf_r+0xb54>)
100109ea:	f8dd 901c 	ldr.w	r9, [sp, #28]
100109ee:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100109f2:	9715      	str	r7, [sp, #84]	@ 0x54
100109f4:	2610      	movs	r6, #16
100109f6:	e004      	b.n	10010a02 <_svfprintf_r+0xaf2>
100109f8:	3d10      	subs	r5, #16
100109fa:	2d10      	cmp	r5, #16
100109fc:	f108 0808 	add.w	r8, r8, #8
10010a00:	dd16      	ble.n	10010a30 <_svfprintf_r+0xb20>
10010a02:	3301      	adds	r3, #1
10010a04:	3410      	adds	r4, #16
10010a06:	2b07      	cmp	r3, #7
10010a08:	e9c8 7600 	strd	r7, r6, [r8]
10010a0c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010a10:	ddf2      	ble.n	100109f8 <_svfprintf_r+0xae8>
10010a12:	aa32      	add	r2, sp, #200	@ 0xc8
10010a14:	4651      	mov	r1, sl
10010a16:	4648      	mov	r0, r9
10010a18:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010a1c:	f003 fa44 	bl	10013ea8 <__ssprint_r>
10010a20:	2800      	cmp	r0, #0
10010a22:	f040 83e7 	bne.w	100111f4 <_svfprintf_r+0x12e4>
10010a26:	3d10      	subs	r5, #16
10010a28:	2d10      	cmp	r5, #16
10010a2a:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10010a2e:	dce8      	bgt.n	10010a02 <_svfprintf_r+0xaf2>
10010a30:	3301      	adds	r3, #1
10010a32:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10010a34:	442c      	add	r4, r5
10010a36:	2b07      	cmp	r3, #7
10010a38:	e9c8 2500 	strd	r2, r5, [r8]
10010a3c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010a40:	f77f abf2 	ble.w	10010228 <_svfprintf_r+0x318>
10010a44:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010a46:	9807      	ldr	r0, [sp, #28]
10010a48:	aa32      	add	r2, sp, #200	@ 0xc8
10010a4a:	f003 fa2d 	bl	10013ea8 <__ssprint_r>
10010a4e:	2800      	cmp	r0, #0
10010a50:	f47f af15 	bne.w	1001087e <_svfprintf_r+0x96e>
10010a54:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10010a56:	f7ff bbe7 	b.w	10010228 <_svfprintf_r+0x318>
10010a5a:	bf00      	nop
10010a5c:	10019154 	.word	0x10019154
10010a60:	10019150 	.word	0x10019150
10010a64:	10019164 	.word	0x10019164
10010a68:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10010a6a:	2a00      	cmp	r2, #0
10010a6c:	f77f af0a 	ble.w	10010884 <_svfprintf_r+0x974>
10010a70:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10010a74:	429f      	cmp	r7, r3
10010a76:	bfa8      	it	ge
10010a78:	461f      	movge	r7, r3
10010a7a:	2f00      	cmp	r7, #0
10010a7c:	eb05 0b03 	add.w	fp, r5, r3
10010a80:	dd0b      	ble.n	10010a9a <_svfprintf_r+0xb8a>
10010a82:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010a84:	3301      	adds	r3, #1
10010a86:	443c      	add	r4, r7
10010a88:	2b07      	cmp	r3, #7
10010a8a:	e9c8 5700 	strd	r5, r7, [r8]
10010a8e:	9434      	str	r4, [sp, #208]	@ 0xd0
10010a90:	9333      	str	r3, [sp, #204]	@ 0xcc
10010a92:	f300 8640 	bgt.w	10011716 <_svfprintf_r+0x1806>
10010a96:	f108 0808 	add.w	r8, r8, #8
10010a9a:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10010a9c:	2f00      	cmp	r7, #0
10010a9e:	bfa8      	it	ge
10010aa0:	1bf6      	subge	r6, r6, r7
10010aa2:	2e00      	cmp	r6, #0
10010aa4:	f300 8200 	bgt.w	10010ea8 <_svfprintf_r+0xf98>
10010aa8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10010aaa:	f419 6f80 	tst.w	r9, #1024	@ 0x400
10010aae:	442b      	add	r3, r5
10010ab0:	469a      	mov	sl, r3
10010ab2:	f040 8221 	bne.w	10010ef8 <_svfprintf_r+0xfe8>
10010ab6:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10010ab8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10010aba:	429d      	cmp	r5, r3
10010abc:	db03      	blt.n	10010ac6 <_svfprintf_r+0xbb6>
10010abe:	f019 0f01 	tst.w	r9, #1
10010ac2:	f000 846e 	beq.w	100113a2 <_svfprintf_r+0x1492>
10010ac6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10010ac8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10010aca:	441c      	add	r4, r3
10010acc:	e9c8 2300 	strd	r2, r3, [r8]
10010ad0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010ad2:	9434      	str	r4, [sp, #208]	@ 0xd0
10010ad4:	3301      	adds	r3, #1
10010ad6:	2b07      	cmp	r3, #7
10010ad8:	9333      	str	r3, [sp, #204]	@ 0xcc
10010ada:	f300 8673 	bgt.w	100117c4 <_svfprintf_r+0x18b4>
10010ade:	f108 0808 	add.w	r8, r8, #8
10010ae2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10010ae4:	ebab 060a 	sub.w	r6, fp, sl
10010ae8:	1b5d      	subs	r5, r3, r5
10010aea:	42ae      	cmp	r6, r5
10010aec:	bfa8      	it	ge
10010aee:	462e      	movge	r6, r5
10010af0:	2e00      	cmp	r6, #0
10010af2:	dd0d      	ble.n	10010b10 <_svfprintf_r+0xc00>
10010af4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010af6:	f8c8 a000 	str.w	sl, [r8]
10010afa:	3301      	adds	r3, #1
10010afc:	4434      	add	r4, r6
10010afe:	2b07      	cmp	r3, #7
10010b00:	f8c8 6004 	str.w	r6, [r8, #4]
10010b04:	9434      	str	r4, [sp, #208]	@ 0xd0
10010b06:	9333      	str	r3, [sp, #204]	@ 0xcc
10010b08:	f300 866e 	bgt.w	100117e8 <_svfprintf_r+0x18d8>
10010b0c:	f108 0808 	add.w	r8, r8, #8
10010b10:	2e00      	cmp	r6, #0
10010b12:	bfa8      	it	ge
10010b14:	1bad      	subge	r5, r5, r6
10010b16:	2d00      	cmp	r5, #0
10010b18:	f77f ab7d 	ble.w	10010216 <_svfprintf_r+0x306>
10010b1c:	2d10      	cmp	r5, #16
10010b1e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010b20:	f340 836a 	ble.w	100111f8 <_svfprintf_r+0x12e8>
10010b24:	4fad      	ldr	r7, [pc, #692]	@ (10010ddc <_svfprintf_r+0xecc>)
10010b26:	f8dd b01c 	ldr.w	fp, [sp, #28]
10010b2a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10010b2e:	9715      	str	r7, [sp, #84]	@ 0x54
10010b30:	2610      	movs	r6, #16
10010b32:	e005      	b.n	10010b40 <_svfprintf_r+0xc30>
10010b34:	f108 0808 	add.w	r8, r8, #8
10010b38:	3d10      	subs	r5, #16
10010b3a:	2d10      	cmp	r5, #16
10010b3c:	f340 835e 	ble.w	100111fc <_svfprintf_r+0x12ec>
10010b40:	3301      	adds	r3, #1
10010b42:	3410      	adds	r4, #16
10010b44:	2b07      	cmp	r3, #7
10010b46:	e9c8 7600 	strd	r7, r6, [r8]
10010b4a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010b4e:	ddf1      	ble.n	10010b34 <_svfprintf_r+0xc24>
10010b50:	aa32      	add	r2, sp, #200	@ 0xc8
10010b52:	4651      	mov	r1, sl
10010b54:	4658      	mov	r0, fp
10010b56:	f003 f9a7 	bl	10013ea8 <__ssprint_r>
10010b5a:	2800      	cmp	r0, #0
10010b5c:	d17d      	bne.n	10010c5a <_svfprintf_r+0xd4a>
10010b5e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10010b62:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010b66:	e7e7      	b.n	10010b38 <_svfprintf_r+0xc28>
10010b68:	f019 0f01 	tst.w	r9, #1
10010b6c:	f47f aed3 	bne.w	10010916 <_svfprintf_r+0xa06>
10010b70:	2301      	movs	r3, #1
10010b72:	2e07      	cmp	r6, #7
10010b74:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10010b78:	f8c8 5000 	str.w	r5, [r8]
10010b7c:	f8c8 3004 	str.w	r3, [r8, #4]
10010b80:	f77f aef7 	ble.w	10010972 <_svfprintf_r+0xa62>
10010b84:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010b86:	9807      	ldr	r0, [sp, #28]
10010b88:	aa32      	add	r2, sp, #200	@ 0xc8
10010b8a:	f003 f98d 	bl	10013ea8 <__ssprint_r>
10010b8e:	2800      	cmp	r0, #0
10010b90:	f47f ae75 	bne.w	1001087e <_svfprintf_r+0x96e>
10010b94:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10010b98:	af35      	add	r7, sp, #212	@ 0xd4
10010b9a:	e6ea      	b.n	10010972 <_svfprintf_r+0xa62>
10010b9c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10010b9e:	2b01      	cmp	r3, #1
10010ba0:	f77f aee7 	ble.w	10010972 <_svfprintf_r+0xa62>
10010ba4:	2b11      	cmp	r3, #17
10010ba6:	4b8d      	ldr	r3, [pc, #564]	@ (10010ddc <_svfprintf_r+0xecc>)
10010ba8:	9315      	str	r3, [sp, #84]	@ 0x54
10010baa:	f340 8357 	ble.w	1001125c <_svfprintf_r+0x134c>
10010bae:	f8cd 9020 	str.w	r9, [sp, #32]
10010bb2:	f8dd a01c 	ldr.w	sl, [sp, #28]
10010bb6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10010bba:	2510      	movs	r5, #16
10010bbc:	4699      	mov	r9, r3
10010bbe:	e006      	b.n	10010bce <_svfprintf_r+0xcbe>
10010bc0:	3708      	adds	r7, #8
10010bc2:	f1a8 0810 	sub.w	r8, r8, #16
10010bc6:	f1b8 0f10 	cmp.w	r8, #16
10010bca:	f340 8345 	ble.w	10011258 <_svfprintf_r+0x1348>
10010bce:	3601      	adds	r6, #1
10010bd0:	3410      	adds	r4, #16
10010bd2:	2e07      	cmp	r6, #7
10010bd4:	e9c7 9500 	strd	r9, r5, [r7]
10010bd8:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10010bdc:	ddf0      	ble.n	10010bc0 <_svfprintf_r+0xcb0>
10010bde:	aa32      	add	r2, sp, #200	@ 0xc8
10010be0:	4659      	mov	r1, fp
10010be2:	4650      	mov	r0, sl
10010be4:	f003 f960 	bl	10013ea8 <__ssprint_r>
10010be8:	2800      	cmp	r0, #0
10010bea:	f040 8298 	bne.w	1001111e <_svfprintf_r+0x120e>
10010bee:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10010bf2:	af35      	add	r7, sp, #212	@ 0xd4
10010bf4:	e7e5      	b.n	10010bc2 <_svfprintf_r+0xcb2>
10010bf6:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010bf8:	9807      	ldr	r0, [sp, #28]
10010bfa:	aa32      	add	r2, sp, #200	@ 0xc8
10010bfc:	f003 f954 	bl	10013ea8 <__ssprint_r>
10010c00:	2800      	cmp	r0, #0
10010c02:	f47f ae3c 	bne.w	1001087e <_svfprintf_r+0x96e>
10010c06:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10010c08:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010c0c:	f7ff baf1 	b.w	100101f2 <_svfprintf_r+0x2e2>
10010c10:	990d      	ldr	r1, [sp, #52]	@ 0x34
10010c12:	f851 3b04 	ldr.w	r3, [r1], #4
10010c16:	910d      	str	r1, [sp, #52]	@ 0x34
10010c18:	f019 0110 	ands.w	r1, r9, #16
10010c1c:	f47f ac4d 	bne.w	100104ba <_svfprintf_r+0x5aa>
10010c20:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10010c24:	f000 8362 	beq.w	100112ec <_svfprintf_r+0x13dc>
10010c28:	b29b      	uxth	r3, r3
10010c2a:	460a      	mov	r2, r1
10010c2c:	e445      	b.n	100104ba <_svfprintf_r+0x5aa>
10010c2e:	990d      	ldr	r1, [sp, #52]	@ 0x34
10010c30:	f851 3b04 	ldr.w	r3, [r1], #4
10010c34:	910d      	str	r1, [sp, #52]	@ 0x34
10010c36:	f014 0110 	ands.w	r1, r4, #16
10010c3a:	d10b      	bne.n	10010c54 <_svfprintf_r+0xd44>
10010c3c:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10010c40:	d003      	beq.n	10010c4a <_svfprintf_r+0xd3a>
10010c42:	460a      	mov	r2, r1
10010c44:	b29b      	uxth	r3, r3
10010c46:	2101      	movs	r1, #1
10010c48:	e43a      	b.n	100104c0 <_svfprintf_r+0x5b0>
10010c4a:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
10010c4e:	bf1c      	itt	ne
10010c50:	b2db      	uxtbne	r3, r3
10010c52:	4602      	movne	r2, r0
10010c54:	2101      	movs	r1, #1
10010c56:	e433      	b.n	100104c0 <_svfprintf_r+0x5b0>
10010c58:	46bb      	mov	fp, r7
10010c5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10010c5c:	2b00      	cmp	r3, #0
10010c5e:	f43f aa5c 	beq.w	1001011a <_svfprintf_r+0x20a>
10010c62:	990c      	ldr	r1, [sp, #48]	@ 0x30
10010c64:	4658      	mov	r0, fp
10010c66:	f002 fdcb 	bl	10013800 <_free_r>
10010c6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10010c6c:	899b      	ldrh	r3, [r3, #12]
10010c6e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10010c72:	f7ff ba56 	b.w	10010122 <_svfprintf_r+0x212>
10010c76:	f8dd b020 	ldr.w	fp, [sp, #32]
10010c7a:	ad5e      	add	r5, sp, #376	@ 0x178
10010c7c:	e54a      	b.n	10010714 <_svfprintf_r+0x804>
10010c7e:	425b      	negs	r3, r3
10010c80:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10010c84:	464c      	mov	r4, r9
10010c86:	202d      	movs	r0, #45	@ 0x2d
10010c88:	2101      	movs	r1, #1
10010c8a:	e41a      	b.n	100104c2 <_svfprintf_r+0x5b2>
10010c8c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010c8e:	9807      	ldr	r0, [sp, #28]
10010c90:	aa32      	add	r2, sp, #200	@ 0xc8
10010c92:	f003 f909 	bl	10013ea8 <__ssprint_r>
10010c96:	2800      	cmp	r0, #0
10010c98:	f47f adf1 	bne.w	1001087e <_svfprintf_r+0x96e>
10010c9c:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10010ca0:	af35      	add	r7, sp, #212	@ 0xd4
10010ca2:	e642      	b.n	1001092a <_svfprintf_r+0xa1a>
10010ca4:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010ca6:	9807      	ldr	r0, [sp, #28]
10010ca8:	aa32      	add	r2, sp, #200	@ 0xc8
10010caa:	f003 f8fd 	bl	10013ea8 <__ssprint_r>
10010cae:	2800      	cmp	r0, #0
10010cb0:	f47f ade5 	bne.w	1001087e <_svfprintf_r+0x96e>
10010cb4:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10010cb8:	af35      	add	r7, sp, #212	@ 0xd4
10010cba:	e642      	b.n	10010942 <_svfprintf_r+0xa32>
10010cbc:	f019 0f01 	tst.w	r9, #1
10010cc0:	f43f aaa9 	beq.w	10010216 <_svfprintf_r+0x306>
10010cc4:	e4d4      	b.n	10010670 <_svfprintf_r+0x760>
10010cc6:	930d      	str	r3, [sp, #52]	@ 0x34
10010cc8:	7823      	ldrb	r3, [r4, #0]
10010cca:	f7ff b978 	b.w	1000ffbe <_svfprintf_r+0xae>
10010cce:	ad5e      	add	r5, sp, #376	@ 0x178
10010cd0:	e520      	b.n	10010714 <_svfprintf_r+0x804>
10010cd2:	f419 7f00 	tst.w	r9, #512	@ 0x200
10010cd6:	f040 8373 	bne.w	100113c0 <_svfprintf_r+0x14b0>
10010cda:	17da      	asrs	r2, r3, #31
10010cdc:	4611      	mov	r1, r2
10010cde:	f7ff bbb2 	b.w	10010446 <_svfprintf_r+0x536>
10010ce2:	f019 0f10 	tst.w	r9, #16
10010ce6:	f040 82b1 	bne.w	1001124c <_svfprintf_r+0x133c>
10010cea:	f019 0f40 	tst.w	r9, #64	@ 0x40
10010cee:	f040 8361 	bne.w	100113b4 <_svfprintf_r+0x14a4>
10010cf2:	f419 7f00 	tst.w	r9, #512	@ 0x200
10010cf6:	f000 82a9 	beq.w	1001124c <_svfprintf_r+0x133c>
10010cfa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010cfc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10010cfe:	681b      	ldr	r3, [r3, #0]
10010d00:	701a      	strb	r2, [r3, #0]
10010d02:	e40f      	b.n	10010524 <_svfprintf_r+0x614>
10010d04:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10010d06:	7823      	ldrb	r3, [r4, #0]
10010d08:	2a00      	cmp	r2, #0
10010d0a:	f43f a958 	beq.w	1000ffbe <_svfprintf_r+0xae>
10010d0e:	7812      	ldrb	r2, [r2, #0]
10010d10:	2a00      	cmp	r2, #0
10010d12:	f43f a954 	beq.w	1000ffbe <_svfprintf_r+0xae>
10010d16:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
10010d1a:	f7ff b950 	b.w	1000ffbe <_svfprintf_r+0xae>
10010d1e:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10010d22:	4602      	mov	r2, r0
10010d24:	460b      	mov	r3, r1
10010d26:	f007 ff05 	bl	10018b34 <__aeabi_dcmpun>
10010d2a:	2800      	cmp	r0, #0
10010d2c:	f040 860d 	bne.w	1001194a <_svfprintf_r+0x1a3a>
10010d30:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10010d32:	2b61      	cmp	r3, #97	@ 0x61
10010d34:	f000 8504 	beq.w	10011740 <_svfprintf_r+0x1830>
10010d38:	2b41      	cmp	r3, #65	@ 0x41
10010d3a:	f000 8580 	beq.w	1001183e <_svfprintf_r+0x192e>
10010d3e:	9b08      	ldr	r3, [sp, #32]
10010d40:	3301      	adds	r3, #1
10010d42:	f000 8415 	beq.w	10011570 <_svfprintf_r+0x1660>
10010d46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10010d48:	f023 0320 	bic.w	r3, r3, #32
10010d4c:	2b47      	cmp	r3, #71	@ 0x47
10010d4e:	d104      	bne.n	10010d5a <_svfprintf_r+0xe4a>
10010d50:	9b08      	ldr	r3, [sp, #32]
10010d52:	2b00      	cmp	r3, #0
10010d54:	bf08      	it	eq
10010d56:	2301      	moveq	r3, #1
10010d58:	9308      	str	r3, [sp, #32]
10010d5a:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10010d5e:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
10010d62:	2900      	cmp	r1, #0
10010d64:	9215      	str	r2, [sp, #84]	@ 0x54
10010d66:	f8cd 9018 	str.w	r9, [sp, #24]
10010d6a:	f04f 0300 	mov.w	r3, #0
10010d6e:	f2c0 851f 	blt.w	100117b0 <_svfprintf_r+0x18a0>
10010d72:	e9cd 0124 	strd	r0, r1, [sp, #144]	@ 0x90
10010d76:	931f      	str	r3, [sp, #124]	@ 0x7c
10010d78:	930c      	str	r3, [sp, #48]	@ 0x30
10010d7a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10010d7c:	3b41      	subs	r3, #65	@ 0x41
10010d7e:	2b25      	cmp	r3, #37	@ 0x25
10010d80:	f200 8326 	bhi.w	100113d0 <_svfprintf_r+0x14c0>
10010d84:	e8df f013 	tbh	[pc, r3, lsl #1]
10010d88:	032403ff 	.word	0x032403ff
10010d8c:	03240324 	.word	0x03240324
10010d90:	03fc03f8 	.word	0x03fc03f8
10010d94:	03240324 	.word	0x03240324
10010d98:	03240324 	.word	0x03240324
10010d9c:	03240324 	.word	0x03240324
10010da0:	03240324 	.word	0x03240324
10010da4:	03240324 	.word	0x03240324
10010da8:	03240324 	.word	0x03240324
10010dac:	03240324 	.word	0x03240324
10010db0:	03240324 	.word	0x03240324
10010db4:	03240324 	.word	0x03240324
10010db8:	03240324 	.word	0x03240324
10010dbc:	03240324 	.word	0x03240324
10010dc0:	03240324 	.word	0x03240324
10010dc4:	03240324 	.word	0x03240324
10010dc8:	03240324 	.word	0x03240324
10010dcc:	03240324 	.word	0x03240324
10010dd0:	03fc03f8 	.word	0x03fc03f8
10010dd4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010dd8:	f7ff bb62 	b.w	100104a0 <_svfprintf_r+0x590>
10010ddc:	10019154 	.word	0x10019154
10010de0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010de4:	464c      	mov	r4, r9
10010de6:	f7ff bbc9 	b.w	1001057c <_svfprintf_r+0x66c>
10010dea:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010dee:	4bbd      	ldr	r3, [pc, #756]	@ (100110e4 <_svfprintf_r+0x11d4>)
10010df0:	9319      	str	r3, [sp, #100]	@ 0x64
10010df2:	f019 0220 	ands.w	r2, r9, #32
10010df6:	f000 8108 	beq.w	1001100a <_svfprintf_r+0x10fa>
10010dfa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010dfc:	3307      	adds	r3, #7
10010dfe:	f023 0307 	bic.w	r3, r3, #7
10010e02:	4619      	mov	r1, r3
10010e04:	685a      	ldr	r2, [r3, #4]
10010e06:	f851 3b08 	ldr.w	r3, [r1], #8
10010e0a:	910d      	str	r1, [sp, #52]	@ 0x34
10010e0c:	f019 0f01 	tst.w	r9, #1
10010e10:	d00a      	beq.n	10010e28 <_svfprintf_r+0xf18>
10010e12:	ea53 0102 	orrs.w	r1, r3, r2
10010e16:	d007      	beq.n	10010e28 <_svfprintf_r+0xf18>
10010e18:	990e      	ldr	r1, [sp, #56]	@ 0x38
10010e1a:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10010e1e:	2130      	movs	r1, #48	@ 0x30
10010e20:	f049 0902 	orr.w	r9, r9, #2
10010e24:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10010e28:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10010e2c:	2102      	movs	r1, #2
10010e2e:	f7ff bb47 	b.w	100104c0 <_svfprintf_r+0x5b0>
10010e32:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010e36:	4bac      	ldr	r3, [pc, #688]	@ (100110e8 <_svfprintf_r+0x11d8>)
10010e38:	9319      	str	r3, [sp, #100]	@ 0x64
10010e3a:	e7da      	b.n	10010df2 <_svfprintf_r+0xee2>
10010e3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010e3e:	681b      	ldr	r3, [r3, #0]
10010e40:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10010e44:	2301      	movs	r3, #1
10010e46:	9306      	str	r3, [sp, #24]
10010e48:	469b      	mov	fp, r3
10010e4a:	ad45      	add	r5, sp, #276	@ 0x114
10010e4c:	f7ff baaf 	b.w	100103ae <_svfprintf_r+0x49e>
10010e50:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010e52:	9807      	ldr	r0, [sp, #28]
10010e54:	aa32      	add	r2, sp, #200	@ 0xc8
10010e56:	f003 f827 	bl	10013ea8 <__ssprint_r>
10010e5a:	2800      	cmp	r0, #0
10010e5c:	f47f ad0f 	bne.w	1001087e <_svfprintf_r+0x96e>
10010e60:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10010e62:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010e66:	e411      	b.n	1001068c <_svfprintf_r+0x77c>
10010e68:	2140      	movs	r1, #64	@ 0x40
10010e6a:	4658      	mov	r0, fp
10010e6c:	f000 fe20 	bl	10011ab0 <_malloc_r>
10010e70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10010e72:	6018      	str	r0, [r3, #0]
10010e74:	6118      	str	r0, [r3, #16]
10010e76:	2800      	cmp	r0, #0
10010e78:	f000 8610 	beq.w	10011a9c <_svfprintf_r+0x1b8c>
10010e7c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10010e7e:	2340      	movs	r3, #64	@ 0x40
10010e80:	6153      	str	r3, [r2, #20]
10010e82:	f7ff b861 	b.w	1000ff48 <_svfprintf_r+0x38>
10010e86:	9b08      	ldr	r3, [sp, #32]
10010e88:	950c      	str	r5, [sp, #48]	@ 0x30
10010e8a:	2b06      	cmp	r3, #6
10010e8c:	4629      	mov	r1, r5
10010e8e:	bf28      	it	cs
10010e90:	2306      	movcs	r3, #6
10010e92:	9508      	str	r5, [sp, #32]
10010e94:	462a      	mov	r2, r5
10010e96:	9306      	str	r3, [sp, #24]
10010e98:	4d94      	ldr	r5, [pc, #592]	@ (100110ec <_svfprintf_r+0x11dc>)
10010e9a:	960d      	str	r6, [sp, #52]	@ 0x34
10010e9c:	469b      	mov	fp, r3
10010e9e:	9114      	str	r1, [sp, #80]	@ 0x50
10010ea0:	9110      	str	r1, [sp, #64]	@ 0x40
10010ea2:	9112      	str	r1, [sp, #72]	@ 0x48
10010ea4:	f7ff ba1b 	b.w	100102de <_svfprintf_r+0x3ce>
10010ea8:	2e10      	cmp	r6, #16
10010eaa:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010eac:	f340 85e7 	ble.w	10011a7e <_svfprintf_r+0x1b6e>
10010eb0:	488f      	ldr	r0, [pc, #572]	@ (100110f0 <_svfprintf_r+0x11e0>)
10010eb2:	f8dd a01c 	ldr.w	sl, [sp, #28]
10010eb6:	9015      	str	r0, [sp, #84]	@ 0x54
10010eb8:	4642      	mov	r2, r8
10010eba:	4621      	mov	r1, r4
10010ebc:	46a8      	mov	r8, r5
10010ebe:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10010ec0:	2710      	movs	r7, #16
10010ec2:	4605      	mov	r5, r0
10010ec4:	e004      	b.n	10010ed0 <_svfprintf_r+0xfc0>
10010ec6:	3208      	adds	r2, #8
10010ec8:	3e10      	subs	r6, #16
10010eca:	2e10      	cmp	r6, #16
10010ecc:	f340 8223 	ble.w	10011316 <_svfprintf_r+0x1406>
10010ed0:	3301      	adds	r3, #1
10010ed2:	3110      	adds	r1, #16
10010ed4:	2b07      	cmp	r3, #7
10010ed6:	e9c2 5700 	strd	r5, r7, [r2]
10010eda:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
10010ede:	ddf2      	ble.n	10010ec6 <_svfprintf_r+0xfb6>
10010ee0:	aa32      	add	r2, sp, #200	@ 0xc8
10010ee2:	4621      	mov	r1, r4
10010ee4:	4650      	mov	r0, sl
10010ee6:	f002 ffdf 	bl	10013ea8 <__ssprint_r>
10010eea:	2800      	cmp	r0, #0
10010eec:	f040 8117 	bne.w	1001111e <_svfprintf_r+0x120e>
10010ef0:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10010ef4:	aa35      	add	r2, sp, #212	@ 0xd4
10010ef6:	e7e7      	b.n	10010ec8 <_svfprintf_r+0xfb8>
10010ef8:	4621      	mov	r1, r4
10010efa:	461c      	mov	r4, r3
10010efc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10010efe:	f8cd b020 	str.w	fp, [sp, #32]
10010f02:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10010f06:	4642      	mov	r2, r8
10010f08:	4f79      	ldr	r7, [pc, #484]	@ (100110f0 <_svfprintf_r+0x11e0>)
10010f0a:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
10010f0e:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10010f12:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
10010f16:	f8dd b01c 	ldr.w	fp, [sp, #28]
10010f1a:	b383      	cbz	r3, 10010f7e <_svfprintf_r+0x106e>
10010f1c:	f1b9 0f00 	cmp.w	r9, #0
10010f20:	f000 80ff 	beq.w	10011122 <_svfprintf_r+0x1212>
10010f24:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10010f28:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10010f2a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10010f2c:	3001      	adds	r0, #1
10010f2e:	4441      	add	r1, r8
10010f30:	2807      	cmp	r0, #7
10010f32:	e9c2 3800 	strd	r3, r8, [r2]
10010f36:	9134      	str	r1, [sp, #208]	@ 0xd0
10010f38:	9033      	str	r0, [sp, #204]	@ 0xcc
10010f3a:	dc75      	bgt.n	10011028 <_svfprintf_r+0x1118>
10010f3c:	3208      	adds	r2, #8
10010f3e:	9b08      	ldr	r3, [sp, #32]
10010f40:	f89a 0000 	ldrb.w	r0, [sl]
10010f44:	1b1e      	subs	r6, r3, r4
10010f46:	4286      	cmp	r6, r0
10010f48:	bfa8      	it	ge
10010f4a:	4606      	movge	r6, r0
10010f4c:	2e00      	cmp	r6, #0
10010f4e:	dd0c      	ble.n	10010f6a <_svfprintf_r+0x105a>
10010f50:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10010f52:	3001      	adds	r0, #1
10010f54:	4431      	add	r1, r6
10010f56:	2807      	cmp	r0, #7
10010f58:	e9c2 4600 	strd	r4, r6, [r2]
10010f5c:	9134      	str	r1, [sp, #208]	@ 0xd0
10010f5e:	9033      	str	r0, [sp, #204]	@ 0xcc
10010f60:	f300 8167 	bgt.w	10011232 <_svfprintf_r+0x1322>
10010f64:	f89a 0000 	ldrb.w	r0, [sl]
10010f68:	3208      	adds	r2, #8
10010f6a:	2e00      	cmp	r6, #0
10010f6c:	bfac      	ite	ge
10010f6e:	1b85      	subge	r5, r0, r6
10010f70:	4605      	movlt	r5, r0
10010f72:	2d00      	cmp	r5, #0
10010f74:	dc13      	bgt.n	10010f9e <_svfprintf_r+0x108e>
10010f76:	4404      	add	r4, r0
10010f78:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10010f7a:	2b00      	cmp	r3, #0
10010f7c:	d1ce      	bne.n	10010f1c <_svfprintf_r+0x100c>
10010f7e:	f1b9 0f00 	cmp.w	r9, #0
10010f82:	d1cf      	bne.n	10010f24 <_svfprintf_r+0x1014>
10010f84:	f8dd b020 	ldr.w	fp, [sp, #32]
10010f88:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
10010f8c:	46a2      	mov	sl, r4
10010f8e:	45da      	cmp	sl, fp
10010f90:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10010f94:	4690      	mov	r8, r2
10010f96:	460c      	mov	r4, r1
10010f98:	bf28      	it	cs
10010f9a:	46da      	movcs	sl, fp
10010f9c:	e58b      	b.n	10010ab6 <_svfprintf_r+0xba6>
10010f9e:	2d10      	cmp	r5, #16
10010fa0:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10010fa2:	f340 853c 	ble.w	10011a1e <_svfprintf_r+0x1b0e>
10010fa6:	4623      	mov	r3, r4
10010fa8:	463e      	mov	r6, r7
10010faa:	462c      	mov	r4, r5
10010fac:	461d      	mov	r5, r3
10010fae:	e004      	b.n	10010fba <_svfprintf_r+0x10aa>
10010fb0:	3c10      	subs	r4, #16
10010fb2:	2c10      	cmp	r4, #16
10010fb4:	f102 0208 	add.w	r2, r2, #8
10010fb8:	dd16      	ble.n	10010fe8 <_svfprintf_r+0x10d8>
10010fba:	3001      	adds	r0, #1
10010fbc:	3110      	adds	r1, #16
10010fbe:	2310      	movs	r3, #16
10010fc0:	2807      	cmp	r0, #7
10010fc2:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10010fc6:	6017      	str	r7, [r2, #0]
10010fc8:	6053      	str	r3, [r2, #4]
10010fca:	ddf1      	ble.n	10010fb0 <_svfprintf_r+0x10a0>
10010fcc:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010fce:	aa32      	add	r2, sp, #200	@ 0xc8
10010fd0:	4658      	mov	r0, fp
10010fd2:	f002 ff69 	bl	10013ea8 <__ssprint_r>
10010fd6:	2800      	cmp	r0, #0
10010fd8:	f47f ae3f 	bne.w	10010c5a <_svfprintf_r+0xd4a>
10010fdc:	3c10      	subs	r4, #16
10010fde:	2c10      	cmp	r4, #16
10010fe0:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10010fe4:	aa35      	add	r2, sp, #212	@ 0xd4
10010fe6:	dce8      	bgt.n	10010fba <_svfprintf_r+0x10aa>
10010fe8:	462b      	mov	r3, r5
10010fea:	4625      	mov	r5, r4
10010fec:	461c      	mov	r4, r3
10010fee:	3001      	adds	r0, #1
10010ff0:	4429      	add	r1, r5
10010ff2:	2807      	cmp	r0, #7
10010ff4:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10010ff8:	6016      	str	r6, [r2, #0]
10010ffa:	6055      	str	r5, [r2, #4]
10010ffc:	f300 837d 	bgt.w	100116fa <_svfprintf_r+0x17ea>
10011000:	f89a 0000 	ldrb.w	r0, [sl]
10011004:	3208      	adds	r2, #8
10011006:	4404      	add	r4, r0
10011008:	e7b6      	b.n	10010f78 <_svfprintf_r+0x1068>
1001100a:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001100c:	f851 3b04 	ldr.w	r3, [r1], #4
10011010:	910d      	str	r1, [sp, #52]	@ 0x34
10011012:	f019 0110 	ands.w	r1, r9, #16
10011016:	f47f aef9 	bne.w	10010e0c <_svfprintf_r+0xefc>
1001101a:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001101e:	f000 815f 	beq.w	100112e0 <_svfprintf_r+0x13d0>
10011022:	b29b      	uxth	r3, r3
10011024:	460a      	mov	r2, r1
10011026:	e6f1      	b.n	10010e0c <_svfprintf_r+0xefc>
10011028:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001102a:	aa32      	add	r2, sp, #200	@ 0xc8
1001102c:	4658      	mov	r0, fp
1001102e:	f002 ff3b 	bl	10013ea8 <__ssprint_r>
10011032:	2800      	cmp	r0, #0
10011034:	f47f ae11 	bne.w	10010c5a <_svfprintf_r+0xd4a>
10011038:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001103a:	aa35      	add	r2, sp, #212	@ 0xd4
1001103c:	e77f      	b.n	10010f3e <_svfprintf_r+0x102e>
1001103e:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10011042:	2100      	movs	r1, #0
10011044:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10011048:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 100110f4 <_svfprintf_r+0x11e4>
1001104c:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10011050:	9406      	str	r4, [sp, #24]
10011052:	ad5e      	add	r5, sp, #376	@ 0x178
10011054:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10011058:	2705      	movs	r7, #5
1001105a:	468c      	mov	ip, r1
1001105c:	465e      	mov	r6, fp
1001105e:	e005      	b.n	1001106c <_svfprintf_r+0x115c>
10011060:	2b0a      	cmp	r3, #10
10011062:	f172 0200 	sbcs.w	r2, r2, #0
10011066:	d333      	bcc.n	100110d0 <_svfprintf_r+0x11c0>
10011068:	465b      	mov	r3, fp
1001106a:	4622      	mov	r2, r4
1001106c:	1899      	adds	r1, r3, r2
1001106e:	f141 0100 	adc.w	r1, r1, #0
10011072:	fba9 0401 	umull	r0, r4, r9, r1
10011076:	f024 0003 	bic.w	r0, r4, #3
1001107a:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001107e:	1a09      	subs	r1, r1, r0
10011080:	1a58      	subs	r0, r3, r1
10011082:	f162 0e00 	sbc.w	lr, r2, #0
10011086:	fb0a f400 	mul.w	r4, sl, r0
1001108a:	fba0 b009 	umull	fp, r0, r0, r9
1001108e:	fb09 440e 	mla	r4, r9, lr, r4
10011092:	f00b 0e01 	and.w	lr, fp, #1
10011096:	4404      	add	r4, r0
10011098:	fbae 0e07 	umull	r0, lr, lr, r7
1001109c:	1840      	adds	r0, r0, r1
1001109e:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
100110a2:	3030      	adds	r0, #48	@ 0x30
100110a4:	f805 0c01 	strb.w	r0, [r5, #-1]
100110a8:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
100110ac:	f10c 0c01 	add.w	ip, ip, #1
100110b0:	3d01      	subs	r5, #1
100110b2:	0864      	lsrs	r4, r4, #1
100110b4:	2e00      	cmp	r6, #0
100110b6:	d0d3      	beq.n	10011060 <_svfprintf_r+0x1150>
100110b8:	f898 1000 	ldrb.w	r1, [r8]
100110bc:	458c      	cmp	ip, r1
100110be:	d1cf      	bne.n	10011060 <_svfprintf_r+0x1150>
100110c0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
100110c4:	d0cc      	beq.n	10011060 <_svfprintf_r+0x1150>
100110c6:	2b0a      	cmp	r3, #10
100110c8:	f172 0200 	sbcs.w	r2, r2, #0
100110cc:	f080 8136 	bcs.w	1001133c <_svfprintf_r+0x142c>
100110d0:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
100110d4:	9c06      	ldr	r4, [sp, #24]
100110d6:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
100110da:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
100110de:	f7ff bb15 	b.w	1001070c <_svfprintf_r+0x7fc>
100110e2:	bf00      	nop
100110e4:	10019134 	.word	0x10019134
100110e8:	10019120 	.word	0x10019120
100110ec:	10019148 	.word	0x10019148
100110f0:	10019154 	.word	0x10019154
100110f4:	cccccccd 	.word	0xcccccccd
100110f8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100110fa:	9807      	ldr	r0, [sp, #28]
100110fc:	9315      	str	r3, [sp, #84]	@ 0x54
100110fe:	aa32      	add	r2, sp, #200	@ 0xc8
10011100:	f002 fed2 	bl	10013ea8 <__ssprint_r>
10011104:	2800      	cmp	r0, #0
10011106:	f47f abba 	bne.w	1001087e <_svfprintf_r+0x96e>
1001110a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001110e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011110:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10011112:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011116:	f7ff b83f 	b.w	10010198 <_svfprintf_r+0x288>
1001111a:	46a3      	mov	fp, r4
1001111c:	e59d      	b.n	10010c5a <_svfprintf_r+0xd4a>
1001111e:	46d3      	mov	fp, sl
10011120:	e59b      	b.n	10010c5a <_svfprintf_r+0xd4a>
10011122:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10011124:	3b01      	subs	r3, #1
10011126:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
1001112a:	9310      	str	r3, [sp, #64]	@ 0x40
1001112c:	e6fc      	b.n	10010f28 <_svfprintf_r+0x1018>
1001112e:	2901      	cmp	r1, #1
10011130:	464c      	mov	r4, r9
10011132:	f47f aadb 	bne.w	100106ec <_svfprintf_r+0x7dc>
10011136:	e42f      	b.n	10010998 <_svfprintf_r+0xa88>
10011138:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001113a:	9807      	ldr	r0, [sp, #28]
1001113c:	aa32      	add	r2, sp, #200	@ 0xc8
1001113e:	f002 feb3 	bl	10013ea8 <__ssprint_r>
10011142:	2800      	cmp	r0, #0
10011144:	f47f ab9b 	bne.w	1001087e <_svfprintf_r+0x96e>
10011148:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001114a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001114e:	f7ff ba8a 	b.w	10010666 <_svfprintf_r+0x756>
10011152:	af30      	add	r7, sp, #192	@ 0xc0
10011154:	2208      	movs	r2, #8
10011156:	2100      	movs	r1, #0
10011158:	4638      	mov	r0, r7
1001115a:	952b      	str	r5, [sp, #172]	@ 0xac
1001115c:	f000 ff6c 	bl	10012038 <memset>
10011160:	9b08      	ldr	r3, [sp, #32]
10011162:	1c58      	adds	r0, r3, #1
10011164:	f000 80c9 	beq.w	100112fa <_svfprintf_r+0x13ea>
10011168:	2400      	movs	r4, #0
1001116a:	f8cd 9018 	str.w	r9, [sp, #24]
1001116e:	46a3      	mov	fp, r4
10011170:	f8dd 901c 	ldr.w	r9, [sp, #28]
10011174:	469a      	mov	sl, r3
10011176:	e00c      	b.n	10011192 <_svfprintf_r+0x1282>
10011178:	a945      	add	r1, sp, #276	@ 0x114
1001117a:	4648      	mov	r0, r9
1001117c:	f000 ffae 	bl	100120dc <_wcrtomb_r>
10011180:	1c41      	adds	r1, r0, #1
10011182:	4458      	add	r0, fp
10011184:	f000 838e 	beq.w	100118a4 <_svfprintf_r+0x1994>
10011188:	4550      	cmp	r0, sl
1001118a:	dc08      	bgt.n	1001119e <_svfprintf_r+0x128e>
1001118c:	f000 8441 	beq.w	10011a12 <_svfprintf_r+0x1b02>
10011190:	4683      	mov	fp, r0
10011192:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
10011194:	5912      	ldr	r2, [r2, r4]
10011196:	463b      	mov	r3, r7
10011198:	3404      	adds	r4, #4
1001119a:	2a00      	cmp	r2, #0
1001119c:	d1ec      	bne.n	10011178 <_svfprintf_r+0x1268>
1001119e:	f8dd 9018 	ldr.w	r9, [sp, #24]
100111a2:	f1bb 0f00 	cmp.w	fp, #0
100111a6:	f000 80dd 	beq.w	10011364 <_svfprintf_r+0x1454>
100111aa:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
100111ae:	f300 81b9 	bgt.w	10011524 <_svfprintf_r+0x1614>
100111b2:	2300      	movs	r3, #0
100111b4:	930c      	str	r3, [sp, #48]	@ 0x30
100111b6:	ad45      	add	r5, sp, #276	@ 0x114
100111b8:	2208      	movs	r2, #8
100111ba:	2100      	movs	r1, #0
100111bc:	4638      	mov	r0, r7
100111be:	f000 ff3b 	bl	10012038 <memset>
100111c2:	9807      	ldr	r0, [sp, #28]
100111c4:	9700      	str	r7, [sp, #0]
100111c6:	465b      	mov	r3, fp
100111c8:	aa2b      	add	r2, sp, #172	@ 0xac
100111ca:	4629      	mov	r1, r5
100111cc:	f001 f882 	bl	100122d4 <_wcsrtombs_r>
100111d0:	4583      	cmp	fp, r0
100111d2:	f040 845a 	bne.w	10011a8a <_svfprintf_r+0x1b7a>
100111d6:	2300      	movs	r3, #0
100111d8:	f805 300b 	strb.w	r3, [r5, fp]
100111dc:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100111e0:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100111e4:	960d      	str	r6, [sp, #52]	@ 0x34
100111e6:	9308      	str	r3, [sp, #32]
100111e8:	9106      	str	r1, [sp, #24]
100111ea:	9314      	str	r3, [sp, #80]	@ 0x50
100111ec:	9310      	str	r3, [sp, #64]	@ 0x40
100111ee:	9312      	str	r3, [sp, #72]	@ 0x48
100111f0:	f7ff b875 	b.w	100102de <_svfprintf_r+0x3ce>
100111f4:	46cb      	mov	fp, r9
100111f6:	e530      	b.n	10010c5a <_svfprintf_r+0xd4a>
100111f8:	4a74      	ldr	r2, [pc, #464]	@ (100113cc <_svfprintf_r+0x14bc>)
100111fa:	9215      	str	r2, [sp, #84]	@ 0x54
100111fc:	3301      	adds	r3, #1
100111fe:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011200:	f8c8 2000 	str.w	r2, [r8]
10011204:	442c      	add	r4, r5
10011206:	2b07      	cmp	r3, #7
10011208:	f8c8 5004 	str.w	r5, [r8, #4]
1001120c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011210:	f77e afff 	ble.w	10010212 <_svfprintf_r+0x302>
10011214:	f7ff bb69 	b.w	100108ea <_svfprintf_r+0x9da>
10011218:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001121a:	9807      	ldr	r0, [sp, #28]
1001121c:	aa32      	add	r2, sp, #200	@ 0xc8
1001121e:	f002 fe43 	bl	10013ea8 <__ssprint_r>
10011222:	2800      	cmp	r0, #0
10011224:	f47f ab2b 	bne.w	1001087e <_svfprintf_r+0x96e>
10011228:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001122a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001122e:	f7fe bfda 	b.w	100101e6 <_svfprintf_r+0x2d6>
10011232:	9909      	ldr	r1, [sp, #36]	@ 0x24
10011234:	aa32      	add	r2, sp, #200	@ 0xc8
10011236:	4658      	mov	r0, fp
10011238:	f002 fe36 	bl	10013ea8 <__ssprint_r>
1001123c:	2800      	cmp	r0, #0
1001123e:	f47f ad0c 	bne.w	10010c5a <_svfprintf_r+0xd4a>
10011242:	f89a 0000 	ldrb.w	r0, [sl]
10011246:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10011248:	aa35      	add	r2, sp, #212	@ 0xd4
1001124a:	e68e      	b.n	10010f6a <_svfprintf_r+0x105a>
1001124c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001124e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10011250:	681b      	ldr	r3, [r3, #0]
10011252:	601a      	str	r2, [r3, #0]
10011254:	f7ff b966 	b.w	10010524 <_svfprintf_r+0x614>
10011258:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001125c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001125e:	603b      	str	r3, [r7, #0]
10011260:	3601      	adds	r6, #1
10011262:	4444      	add	r4, r8
10011264:	2e07      	cmp	r6, #7
10011266:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001126a:	f8c7 8004 	str.w	r8, [r7, #4]
1001126e:	f77f ab7f 	ble.w	10010970 <_svfprintf_r+0xa60>
10011272:	e487      	b.n	10010b84 <_svfprintf_r+0xc74>
10011274:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011276:	991a      	ldr	r1, [sp, #104]	@ 0x68
10011278:	441c      	add	r4, r3
1001127a:	e9c8 1300 	strd	r1, r3, [r8]
1001127e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011280:	9434      	str	r4, [sp, #208]	@ 0xd0
10011282:	3301      	adds	r3, #1
10011284:	2b07      	cmp	r3, #7
10011286:	9333      	str	r3, [sp, #204]	@ 0xcc
10011288:	f300 8164 	bgt.w	10011554 <_svfprintf_r+0x1644>
1001128c:	f108 0808 	add.w	r8, r8, #8
10011290:	2a00      	cmp	r2, #0
10011292:	f6bf ab1e 	bge.w	100108d2 <_svfprintf_r+0x9c2>
10011296:	4256      	negs	r6, r2
10011298:	3210      	adds	r2, #16
1001129a:	4a4c      	ldr	r2, [pc, #304]	@ (100113cc <_svfprintf_r+0x14bc>)
1001129c:	9215      	str	r2, [sp, #84]	@ 0x54
1001129e:	f280 82e7 	bge.w	10011870 <_svfprintf_r+0x1960>
100112a2:	46aa      	mov	sl, r5
100112a4:	2710      	movs	r7, #16
100112a6:	4615      	mov	r5, r2
100112a8:	e005      	b.n	100112b6 <_svfprintf_r+0x13a6>
100112aa:	f108 0808 	add.w	r8, r8, #8
100112ae:	3e10      	subs	r6, #16
100112b0:	2e10      	cmp	r6, #16
100112b2:	f340 82dc 	ble.w	1001186e <_svfprintf_r+0x195e>
100112b6:	3301      	adds	r3, #1
100112b8:	3410      	adds	r4, #16
100112ba:	2b07      	cmp	r3, #7
100112bc:	e9c8 5700 	strd	r5, r7, [r8]
100112c0:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100112c4:	ddf1      	ble.n	100112aa <_svfprintf_r+0x139a>
100112c6:	9909      	ldr	r1, [sp, #36]	@ 0x24
100112c8:	9807      	ldr	r0, [sp, #28]
100112ca:	aa32      	add	r2, sp, #200	@ 0xc8
100112cc:	f002 fdec 	bl	10013ea8 <__ssprint_r>
100112d0:	2800      	cmp	r0, #0
100112d2:	f47f aad4 	bne.w	1001087e <_svfprintf_r+0x96e>
100112d6:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100112da:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100112de:	e7e6      	b.n	100112ae <_svfprintf_r+0x139e>
100112e0:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
100112e4:	bf1c      	itt	ne
100112e6:	b2db      	uxtbne	r3, r3
100112e8:	4602      	movne	r2, r0
100112ea:	e58f      	b.n	10010e0c <_svfprintf_r+0xefc>
100112ec:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
100112f0:	bf1c      	itt	ne
100112f2:	b2db      	uxtbne	r3, r3
100112f4:	4602      	movne	r2, r0
100112f6:	f7ff b8e0 	b.w	100104ba <_svfprintf_r+0x5aa>
100112fa:	2300      	movs	r3, #0
100112fc:	9807      	ldr	r0, [sp, #28]
100112fe:	9700      	str	r7, [sp, #0]
10011300:	aa2b      	add	r2, sp, #172	@ 0xac
10011302:	4619      	mov	r1, r3
10011304:	f000 ffe6 	bl	100122d4 <_wcsrtombs_r>
10011308:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001130c:	4683      	mov	fp, r0
1001130e:	f000 82c9 	beq.w	100118a4 <_svfprintf_r+0x1994>
10011312:	952b      	str	r5, [sp, #172]	@ 0xac
10011314:	e745      	b.n	100111a2 <_svfprintf_r+0x1292>
10011316:	4645      	mov	r5, r8
10011318:	460c      	mov	r4, r1
1001131a:	4690      	mov	r8, r2
1001131c:	3301      	adds	r3, #1
1001131e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011320:	f8c8 2000 	str.w	r2, [r8]
10011324:	4434      	add	r4, r6
10011326:	2b07      	cmp	r3, #7
10011328:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001132c:	f8c8 6004 	str.w	r6, [r8, #4]
10011330:	f300 8103 	bgt.w	1001153a <_svfprintf_r+0x162a>
10011334:	f108 0808 	add.w	r8, r8, #8
10011338:	f7ff bbb6 	b.w	10010aa8 <_svfprintf_r+0xb98>
1001133c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
1001133e:	991d      	ldr	r1, [sp, #116]	@ 0x74
10011340:	1aed      	subs	r5, r5, r3
10011342:	461a      	mov	r2, r3
10011344:	4628      	mov	r0, r5
10011346:	f002 fb59 	bl	100139fc <strncpy>
1001134a:	f898 3001 	ldrb.w	r3, [r8, #1]
1001134e:	b10b      	cbz	r3, 10011354 <_svfprintf_r+0x1444>
10011350:	f108 0801 	add.w	r8, r8, #1
10011354:	f04f 0c00 	mov.w	ip, #0
10011358:	e686      	b.n	10011068 <_svfprintf_r+0x1158>
1001135a:	222d      	movs	r2, #45	@ 0x2d
1001135c:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10011360:	f7fe bfac 	b.w	100102bc <_svfprintf_r+0x3ac>
10011364:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011368:	960d      	str	r6, [sp, #52]	@ 0x34
1001136a:	f8cd b018 	str.w	fp, [sp, #24]
1001136e:	f8cd b020 	str.w	fp, [sp, #32]
10011372:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10011376:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001137a:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001137e:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10011382:	f7fe bfac 	b.w	100102de <_svfprintf_r+0x3ce>
10011386:	9909      	ldr	r1, [sp, #36]	@ 0x24
10011388:	9807      	ldr	r0, [sp, #28]
1001138a:	aa32      	add	r2, sp, #200	@ 0xc8
1001138c:	f002 fd8c 	bl	10013ea8 <__ssprint_r>
10011390:	2800      	cmp	r0, #0
10011392:	f47f aa74 	bne.w	1001087e <_svfprintf_r+0x96e>
10011396:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10011398:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001139a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001139e:	f7ff ba81 	b.w	100108a4 <_svfprintf_r+0x994>
100113a2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100113a4:	ebab 060a 	sub.w	r6, fp, sl
100113a8:	1b5d      	subs	r5, r3, r5
100113aa:	42ae      	cmp	r6, r5
100113ac:	bfa8      	it	ge
100113ae:	462e      	movge	r6, r5
100113b0:	f7ff bbae 	b.w	10010b10 <_svfprintf_r+0xc00>
100113b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100113b6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100113b8:	681b      	ldr	r3, [r3, #0]
100113ba:	801a      	strh	r2, [r3, #0]
100113bc:	f7ff b8b2 	b.w	10010524 <_svfprintf_r+0x614>
100113c0:	f343 12c0 	sbfx	r2, r3, #7, #1
100113c4:	4611      	mov	r1, r2
100113c6:	b25b      	sxtb	r3, r3
100113c8:	f7ff b83d 	b.w	10010446 <_svfprintf_r+0x536>
100113cc:	10019154 	.word	0x10019154
100113d0:	9e08      	ldr	r6, [sp, #32]
100113d2:	2302      	movs	r3, #2
100113d4:	e9cd 3600 	strd	r3, r6, [sp]
100113d8:	ab30      	add	r3, sp, #192	@ 0xc0
100113da:	9304      	str	r3, [sp, #16]
100113dc:	ab2b      	add	r3, sp, #172	@ 0xac
100113de:	9303      	str	r3, [sp, #12]
100113e0:	ab29      	add	r3, sp, #164	@ 0xa4
100113e2:	9302      	str	r3, [sp, #8]
100113e4:	9807      	ldr	r0, [sp, #28]
100113e6:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
100113ea:	f001 f815 	bl	10012418 <_dtoa_r>
100113ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100113f0:	2b67      	cmp	r3, #103	@ 0x67
100113f2:	4605      	mov	r5, r0
100113f4:	f000 813b 	beq.w	1001166e <_svfprintf_r+0x175e>
100113f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100113fa:	2b47      	cmp	r3, #71	@ 0x47
100113fc:	f000 8137 	beq.w	1001166e <_svfprintf_r+0x175e>
10011400:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011402:	f023 0720 	bic.w	r7, r3, #32
10011406:	2f46      	cmp	r7, #70	@ 0x46
10011408:	eb00 0406 	add.w	r4, r0, r6
1001140c:	d105      	bne.n	1001141a <_svfprintf_r+0x150a>
1001140e:	7803      	ldrb	r3, [r0, #0]
10011410:	2b30      	cmp	r3, #48	@ 0x30
10011412:	f000 82f1 	beq.w	100119f8 <_svfprintf_r+0x1ae8>
10011416:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
10011418:	4434      	add	r4, r6
1001141a:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001141e:	2200      	movs	r2, #0
10011420:	2300      	movs	r3, #0
10011422:	f007 fb55 	bl	10018ad0 <__aeabi_dcmpeq>
10011426:	2800      	cmp	r0, #0
10011428:	f000 813f 	beq.w	100116aa <_svfprintf_r+0x179a>
1001142c:	4623      	mov	r3, r4
1001142e:	1b5b      	subs	r3, r3, r5
10011430:	9313      	str	r3, [sp, #76]	@ 0x4c
10011432:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10011434:	9212      	str	r2, [sp, #72]	@ 0x48
10011436:	2f47      	cmp	r7, #71	@ 0x47
10011438:	f000 8121 	beq.w	1001167e <_svfprintf_r+0x176e>
1001143c:	2f46      	cmp	r7, #70	@ 0x46
1001143e:	f000 81e3 	beq.w	10011808 <_svfprintf_r+0x18f8>
10011442:	990e      	ldr	r1, [sp, #56]	@ 0x38
10011444:	1e53      	subs	r3, r2, #1
10011446:	2961      	cmp	r1, #97	@ 0x61
10011448:	9329      	str	r3, [sp, #164]	@ 0xa4
1001144a:	f000 8316 	beq.w	10011a7a <_svfprintf_r+0x1b6a>
1001144e:	2941      	cmp	r1, #65	@ 0x41
10011450:	f040 8120 	bne.w	10011694 <_svfprintf_r+0x1784>
10011454:	2150      	movs	r1, #80	@ 0x50
10011456:	2001      	movs	r0, #1
10011458:	2b00      	cmp	r3, #0
1001145a:	bfb6      	itet	lt
1001145c:	f1c2 0301 	rsblt	r3, r2, #1
10011460:	222b      	movge	r2, #43	@ 0x2b
10011462:	222d      	movlt	r2, #45	@ 0x2d
10011464:	2b09      	cmp	r3, #9
10011466:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001146a:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001146e:	f340 8227 	ble.w	100118c0 <_svfprintf_r+0x19b0>
10011472:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10011476:	4eae      	ldr	r6, [pc, #696]	@ (10011730 <_svfprintf_r+0x1820>)
10011478:	4622      	mov	r2, r4
1001147a:	4610      	mov	r0, r2
1001147c:	fba6 1203 	umull	r1, r2, r6, r3
10011480:	08d2      	lsrs	r2, r2, #3
10011482:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10011486:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001148a:	3130      	adds	r1, #48	@ 0x30
1001148c:	f800 1c01 	strb.w	r1, [r0, #-1]
10011490:	4619      	mov	r1, r3
10011492:	2963      	cmp	r1, #99	@ 0x63
10011494:	4613      	mov	r3, r2
10011496:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001149a:	dcee      	bgt.n	1001147a <_svfprintf_r+0x156a>
1001149c:	3330      	adds	r3, #48	@ 0x30
1001149e:	f802 3c01 	strb.w	r3, [r2, #-1]
100114a2:	1e83      	subs	r3, r0, #2
100114a4:	42a3      	cmp	r3, r4
100114a6:	f080 82ed 	bcs.w	10011a84 <_svfprintf_r+0x1b74>
100114aa:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
100114ae:	f813 1b01 	ldrb.w	r1, [r3], #1
100114b2:	f802 1f01 	strb.w	r1, [r2, #1]!
100114b6:	42a3      	cmp	r3, r4
100114b8:	d1f9      	bne.n	100114ae <_svfprintf_r+0x159e>
100114ba:	ab5e      	add	r3, sp, #376	@ 0x178
100114bc:	1a18      	subs	r0, r3, r0
100114be:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
100114c2:	931c      	str	r3, [sp, #112]	@ 0x70
100114c4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100114c6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
100114c8:	2b01      	cmp	r3, #1
100114ca:	eb03 0b02 	add.w	fp, r3, r2
100114ce:	f340 822a 	ble.w	10011926 <_svfprintf_r+0x1a16>
100114d2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100114d4:	449b      	add	fp, r3
100114d6:	9b06      	ldr	r3, [sp, #24]
100114d8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
100114dc:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
100114e0:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
100114e4:	2300      	movs	r3, #0
100114e6:	9314      	str	r3, [sp, #80]	@ 0x50
100114e8:	9206      	str	r2, [sp, #24]
100114ea:	9310      	str	r3, [sp, #64]	@ 0x40
100114ec:	9312      	str	r3, [sp, #72]	@ 0x48
100114ee:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
100114f0:	2b00      	cmp	r3, #0
100114f2:	f040 80d3 	bne.w	1001169c <_svfprintf_r+0x178c>
100114f6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100114fa:	9308      	str	r3, [sp, #32]
100114fc:	f7fe beef 	b.w	100102de <_svfprintf_r+0x3ce>
10011500:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10011502:	aa32      	add	r2, sp, #200	@ 0xc8
10011504:	4621      	mov	r1, r4
10011506:	4658      	mov	r0, fp
10011508:	f002 fcce 	bl	10013ea8 <__ssprint_r>
1001150c:	89a3      	ldrh	r3, [r4, #12]
1001150e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10011512:	f7fe be06 	b.w	10010122 <_svfprintf_r+0x212>
10011516:	4628      	mov	r0, r5
10011518:	960d      	str	r6, [sp, #52]	@ 0x34
1001151a:	f002 f871 	bl	10013600 <strlen>
1001151e:	4683      	mov	fp, r0
10011520:	f7fe bf74 	b.w	1001040c <_svfprintf_r+0x4fc>
10011524:	9807      	ldr	r0, [sp, #28]
10011526:	f10b 0101 	add.w	r1, fp, #1
1001152a:	f000 fac1 	bl	10011ab0 <_malloc_r>
1001152e:	4605      	mov	r5, r0
10011530:	2800      	cmp	r0, #0
10011532:	f000 81b7 	beq.w	100118a4 <_svfprintf_r+0x1994>
10011536:	900c      	str	r0, [sp, #48]	@ 0x30
10011538:	e63e      	b.n	100111b8 <_svfprintf_r+0x12a8>
1001153a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001153c:	9807      	ldr	r0, [sp, #28]
1001153e:	aa32      	add	r2, sp, #200	@ 0xc8
10011540:	f002 fcb2 	bl	10013ea8 <__ssprint_r>
10011544:	2800      	cmp	r0, #0
10011546:	f47f a99a 	bne.w	1001087e <_svfprintf_r+0x96e>
1001154a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001154c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011550:	f7ff baaa 	b.w	10010aa8 <_svfprintf_r+0xb98>
10011554:	9909      	ldr	r1, [sp, #36]	@ 0x24
10011556:	9807      	ldr	r0, [sp, #28]
10011558:	aa32      	add	r2, sp, #200	@ 0xc8
1001155a:	f002 fca5 	bl	10013ea8 <__ssprint_r>
1001155e:	2800      	cmp	r0, #0
10011560:	f47f a98d 	bne.w	1001087e <_svfprintf_r+0x96e>
10011564:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10011568:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001156a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001156e:	e68f      	b.n	10011290 <_svfprintf_r+0x1380>
10011570:	2306      	movs	r3, #6
10011572:	9308      	str	r3, [sp, #32]
10011574:	f7ff bbf1 	b.w	10010d5a <_svfprintf_r+0xe4a>
10011578:	9b08      	ldr	r3, [sp, #32]
1001157a:	1c5e      	adds	r6, r3, #1
1001157c:	2302      	movs	r3, #2
1001157e:	e729      	b.n	100113d4 <_svfprintf_r+0x14c4>
10011580:	9e08      	ldr	r6, [sp, #32]
10011582:	2303      	movs	r3, #3
10011584:	e726      	b.n	100113d4 <_svfprintf_r+0x14c4>
10011586:	aa29      	add	r2, sp, #164	@ 0xa4
10011588:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001158c:	f002 f8a4 	bl	100136d8 <frexp>
10011590:	2200      	movs	r2, #0
10011592:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10011596:	f007 f833 	bl	10018600 <__aeabi_dmul>
1001159a:	4602      	mov	r2, r0
1001159c:	460b      	mov	r3, r1
1001159e:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100115a2:	2200      	movs	r2, #0
100115a4:	2300      	movs	r3, #0
100115a6:	f007 fa93 	bl	10018ad0 <__aeabi_dcmpeq>
100115aa:	2800      	cmp	r0, #0
100115ac:	f040 81c0 	bne.w	10011930 <_svfprintf_r+0x1a20>
100115b0:	4b60      	ldr	r3, [pc, #384]	@ (10011734 <_svfprintf_r+0x1824>)
100115b2:	9312      	str	r3, [sp, #72]	@ 0x48
100115b4:	9b08      	ldr	r3, [sp, #32]
100115b6:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
100115ba:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
100115be:	462e      	mov	r6, r5
100115c0:	9514      	str	r5, [sp, #80]	@ 0x50
100115c2:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
100115c6:	464d      	mov	r5, r9
100115c8:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
100115cc:	e005      	b.n	100115da <_svfprintf_r+0x16ca>
100115ce:	2200      	movs	r2, #0
100115d0:	2300      	movs	r3, #0
100115d2:	f007 fa7d 	bl	10018ad0 <__aeabi_dcmpeq>
100115d6:	b9f0      	cbnz	r0, 10011616 <_svfprintf_r+0x1706>
100115d8:	463d      	mov	r5, r7
100115da:	4b57      	ldr	r3, [pc, #348]	@ (10011738 <_svfprintf_r+0x1828>)
100115dc:	2200      	movs	r2, #0
100115de:	4640      	mov	r0, r8
100115e0:	4649      	mov	r1, r9
100115e2:	f007 f80d 	bl	10018600 <__aeabi_dmul>
100115e6:	4689      	mov	r9, r1
100115e8:	4680      	mov	r8, r0
100115ea:	f007 fab9 	bl	10018b60 <__aeabi_d2iz>
100115ee:	4604      	mov	r4, r0
100115f0:	f006 ff9c 	bl	1001852c <__aeabi_i2d>
100115f4:	460b      	mov	r3, r1
100115f6:	4602      	mov	r2, r0
100115f8:	4649      	mov	r1, r9
100115fa:	4640      	mov	r0, r8
100115fc:	f006 fe48 	bl	10018290 <__aeabi_dsub>
10011600:	f81b 3004 	ldrb.w	r3, [fp, r4]
10011604:	46b2      	mov	sl, r6
10011606:	f806 3b01 	strb.w	r3, [r6], #1
1001160a:	1c6b      	adds	r3, r5, #1
1001160c:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
10011610:	4680      	mov	r8, r0
10011612:	4689      	mov	r9, r1
10011614:	d1db      	bne.n	100115ce <_svfprintf_r+0x16be>
10011616:	46cb      	mov	fp, r9
10011618:	4657      	mov	r7, sl
1001161a:	46c2      	mov	sl, r8
1001161c:	4b47      	ldr	r3, [pc, #284]	@ (1001173c <_svfprintf_r+0x182c>)
1001161e:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
10011622:	2200      	movs	r2, #0
10011624:	4650      	mov	r0, sl
10011626:	4659      	mov	r1, fp
10011628:	46a9      	mov	r9, r5
1001162a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001162c:	f007 fa78 	bl	10018b20 <__aeabi_dcmpgt>
10011630:	2800      	cmp	r0, #0
10011632:	f040 8153 	bne.w	100118dc <_svfprintf_r+0x19cc>
10011636:	4b41      	ldr	r3, [pc, #260]	@ (1001173c <_svfprintf_r+0x182c>)
10011638:	4650      	mov	r0, sl
1001163a:	4659      	mov	r1, fp
1001163c:	2200      	movs	r2, #0
1001163e:	f007 fa47 	bl	10018ad0 <__aeabi_dcmpeq>
10011642:	b110      	cbz	r0, 1001164a <_svfprintf_r+0x173a>
10011644:	07e2      	lsls	r2, r4, #31
10011646:	f100 8149 	bmi.w	100118dc <_svfprintf_r+0x19cc>
1001164a:	f1b9 0f00 	cmp.w	r9, #0
1001164e:	f2c0 815f 	blt.w	10011910 <_svfprintf_r+0x1a00>
10011652:	f109 0301 	add.w	r3, r9, #1
10011656:	4433      	add	r3, r6
10011658:	2230      	movs	r2, #48	@ 0x30
1001165a:	f806 2b01 	strb.w	r2, [r6], #1
1001165e:	42b3      	cmp	r3, r6
10011660:	d1fb      	bne.n	1001165a <_svfprintf_r+0x174a>
10011662:	1b5b      	subs	r3, r3, r5
10011664:	9313      	str	r3, [sp, #76]	@ 0x4c
10011666:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011668:	f023 0720 	bic.w	r7, r3, #32
1001166c:	e6e1      	b.n	10011432 <_svfprintf_r+0x1522>
1001166e:	9b06      	ldr	r3, [sp, #24]
10011670:	07db      	lsls	r3, r3, #31
10011672:	f100 80f9 	bmi.w	10011868 <_svfprintf_r+0x1958>
10011676:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10011678:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001167a:	1b5b      	subs	r3, r3, r5
1001167c:	9313      	str	r3, [sp, #76]	@ 0x4c
1001167e:	1cd3      	adds	r3, r2, #3
10011680:	9212      	str	r2, [sp, #72]	@ 0x48
10011682:	db02      	blt.n	1001168a <_svfprintf_r+0x177a>
10011684:	9b08      	ldr	r3, [sp, #32]
10011686:	4293      	cmp	r3, r2
10011688:	da1b      	bge.n	100116c2 <_svfprintf_r+0x17b2>
1001168a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001168c:	3b02      	subs	r3, #2
1001168e:	930e      	str	r3, [sp, #56]	@ 0x38
10011690:	1e53      	subs	r3, r2, #1
10011692:	9329      	str	r3, [sp, #164]	@ 0xa4
10011694:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
10011698:	2000      	movs	r0, #0
1001169a:	e6dd      	b.n	10011458 <_svfprintf_r+0x1548>
1001169c:	222d      	movs	r2, #45	@ 0x2d
1001169e:	2300      	movs	r3, #0
100116a0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100116a4:	9308      	str	r3, [sp, #32]
100116a6:	f7fe be1d 	b.w	100102e4 <_svfprintf_r+0x3d4>
100116aa:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100116ac:	42a3      	cmp	r3, r4
100116ae:	f4bf aebe 	bcs.w	1001142e <_svfprintf_r+0x151e>
100116b2:	2130      	movs	r1, #48	@ 0x30
100116b4:	1c5a      	adds	r2, r3, #1
100116b6:	9230      	str	r2, [sp, #192]	@ 0xc0
100116b8:	7019      	strb	r1, [r3, #0]
100116ba:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100116bc:	429c      	cmp	r4, r3
100116be:	d8f9      	bhi.n	100116b4 <_svfprintf_r+0x17a4>
100116c0:	e6b5      	b.n	1001142e <_svfprintf_r+0x151e>
100116c2:	9913      	ldr	r1, [sp, #76]	@ 0x4c
100116c4:	428a      	cmp	r2, r1
100116c6:	f2c0 80c4 	blt.w	10011852 <_svfprintf_r+0x1942>
100116ca:	9b06      	ldr	r3, [sp, #24]
100116cc:	07de      	lsls	r6, r3, #31
100116ce:	f140 8184 	bpl.w	100119da <_svfprintf_r+0x1aca>
100116d2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100116d4:	eb02 0b03 	add.w	fp, r2, r3
100116d8:	9b06      	ldr	r3, [sp, #24]
100116da:	055c      	lsls	r4, r3, #21
100116dc:	d502      	bpl.n	100116e4 <_svfprintf_r+0x17d4>
100116de:	2a00      	cmp	r2, #0
100116e0:	f300 814d 	bgt.w	1001197e <_svfprintf_r+0x1a6e>
100116e4:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100116e8:	9306      	str	r3, [sp, #24]
100116ea:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
100116ee:	2367      	movs	r3, #103	@ 0x67
100116f0:	930e      	str	r3, [sp, #56]	@ 0x38
100116f2:	2300      	movs	r3, #0
100116f4:	9314      	str	r3, [sp, #80]	@ 0x50
100116f6:	9310      	str	r3, [sp, #64]	@ 0x40
100116f8:	e6f9      	b.n	100114ee <_svfprintf_r+0x15de>
100116fa:	9909      	ldr	r1, [sp, #36]	@ 0x24
100116fc:	aa32      	add	r2, sp, #200	@ 0xc8
100116fe:	4658      	mov	r0, fp
10011700:	f002 fbd2 	bl	10013ea8 <__ssprint_r>
10011704:	2800      	cmp	r0, #0
10011706:	f47f aaa8 	bne.w	10010c5a <_svfprintf_r+0xd4a>
1001170a:	f89a 0000 	ldrb.w	r0, [sl]
1001170e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10011710:	aa35      	add	r2, sp, #212	@ 0xd4
10011712:	4404      	add	r4, r0
10011714:	e430      	b.n	10010f78 <_svfprintf_r+0x1068>
10011716:	9909      	ldr	r1, [sp, #36]	@ 0x24
10011718:	9807      	ldr	r0, [sp, #28]
1001171a:	aa32      	add	r2, sp, #200	@ 0xc8
1001171c:	f002 fbc4 	bl	10013ea8 <__ssprint_r>
10011720:	2800      	cmp	r0, #0
10011722:	f47f a8ac 	bne.w	1001087e <_svfprintf_r+0x96e>
10011726:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011728:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001172c:	f7ff b9b5 	b.w	10010a9a <_svfprintf_r+0xb8a>
10011730:	cccccccd 	.word	0xcccccccd
10011734:	10019134 	.word	0x10019134
10011738:	40300000 	.word	0x40300000
1001173c:	3fe00000 	.word	0x3fe00000
10011740:	2378      	movs	r3, #120	@ 0x78
10011742:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10011746:	2330      	movs	r3, #48	@ 0x30
10011748:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001174c:	f049 0302 	orr.w	r3, r9, #2
10011750:	9306      	str	r3, [sp, #24]
10011752:	9b08      	ldr	r3, [sp, #32]
10011754:	2b63      	cmp	r3, #99	@ 0x63
10011756:	f300 80dd 	bgt.w	10011914 <_svfprintf_r+0x1a04>
1001175a:	2300      	movs	r3, #0
1001175c:	930c      	str	r3, [sp, #48]	@ 0x30
1001175e:	ad45      	add	r5, sp, #276	@ 0x114
10011760:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
10011764:	9315      	str	r3, [sp, #84]	@ 0x54
10011766:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10011768:	2b00      	cmp	r3, #0
1001176a:	db22      	blt.n	100117b2 <_svfprintf_r+0x18a2>
1001176c:	ed9d 7b16 	vldr	d7, [sp, #88]	@ 0x58
10011770:	ed8d 7b24 	vstr	d7, [sp, #144]	@ 0x90
10011774:	2300      	movs	r3, #0
10011776:	931f      	str	r3, [sp, #124]	@ 0x7c
10011778:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001177a:	2b61      	cmp	r3, #97	@ 0x61
1001177c:	f47f aafd 	bne.w	10010d7a <_svfprintf_r+0xe6a>
10011780:	aa29      	add	r2, sp, #164	@ 0xa4
10011782:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10011786:	f001 ffa7 	bl	100136d8 <frexp>
1001178a:	2200      	movs	r2, #0
1001178c:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10011790:	f006 ff36 	bl	10018600 <__aeabi_dmul>
10011794:	4602      	mov	r2, r0
10011796:	460b      	mov	r3, r1
10011798:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001179c:	2200      	movs	r2, #0
1001179e:	2300      	movs	r3, #0
100117a0:	f007 f996 	bl	10018ad0 <__aeabi_dcmpeq>
100117a4:	2800      	cmp	r0, #0
100117a6:	f040 80c3 	bne.w	10011930 <_svfprintf_r+0x1a20>
100117aa:	4ba8      	ldr	r3, [pc, #672]	@ (10011a4c <_svfprintf_r+0x1b3c>)
100117ac:	9312      	str	r3, [sp, #72]	@ 0x48
100117ae:	e701      	b.n	100115b4 <_svfprintf_r+0x16a4>
100117b0:	930c      	str	r3, [sp, #48]	@ 0x30
100117b2:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
100117b6:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
100117ba:	9325      	str	r3, [sp, #148]	@ 0x94
100117bc:	232d      	movs	r3, #45	@ 0x2d
100117be:	9124      	str	r1, [sp, #144]	@ 0x90
100117c0:	931f      	str	r3, [sp, #124]	@ 0x7c
100117c2:	e7d9      	b.n	10011778 <_svfprintf_r+0x1868>
100117c4:	9909      	ldr	r1, [sp, #36]	@ 0x24
100117c6:	9807      	ldr	r0, [sp, #28]
100117c8:	aa32      	add	r2, sp, #200	@ 0xc8
100117ca:	f002 fb6d 	bl	10013ea8 <__ssprint_r>
100117ce:	2800      	cmp	r0, #0
100117d0:	f47f a855 	bne.w	1001087e <_svfprintf_r+0x96e>
100117d4:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100117d6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100117d8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100117dc:	f7ff b981 	b.w	10010ae2 <_svfprintf_r+0xbd2>
100117e0:	499b      	ldr	r1, [pc, #620]	@ (10011a50 <_svfprintf_r+0x1b40>)
100117e2:	9115      	str	r1, [sp, #84]	@ 0x54
100117e4:	f7fe bdb2 	b.w	1001034c <_svfprintf_r+0x43c>
100117e8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100117ea:	9807      	ldr	r0, [sp, #28]
100117ec:	aa32      	add	r2, sp, #200	@ 0xc8
100117ee:	f002 fb5b 	bl	10013ea8 <__ssprint_r>
100117f2:	2800      	cmp	r0, #0
100117f4:	f47f a843 	bne.w	1001087e <_svfprintf_r+0x96e>
100117f8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100117fa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100117fc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100117fe:	1b5d      	subs	r5, r3, r5
10011800:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011804:	f7ff b984 	b.w	10010b10 <_svfprintf_r+0xc00>
10011808:	9b06      	ldr	r3, [sp, #24]
1001180a:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001180c:	9a08      	ldr	r2, [sp, #32]
1001180e:	f003 0301 	and.w	r3, r3, #1
10011812:	2900      	cmp	r1, #0
10011814:	ea43 0302 	orr.w	r3, r3, r2
10011818:	f340 810f 	ble.w	10011a3a <_svfprintf_r+0x1b2a>
1001181c:	2b00      	cmp	r3, #0
1001181e:	f040 80d5 	bne.w	100119cc <_svfprintf_r+0x1abc>
10011822:	2366      	movs	r3, #102	@ 0x66
10011824:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10011828:	930e      	str	r3, [sp, #56]	@ 0x38
1001182a:	9b06      	ldr	r3, [sp, #24]
1001182c:	055a      	lsls	r2, r3, #21
1001182e:	f100 80a8 	bmi.w	10011982 <_svfprintf_r+0x1a72>
10011832:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10011836:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001183a:	9306      	str	r3, [sp, #24]
1001183c:	e759      	b.n	100116f2 <_svfprintf_r+0x17e2>
1001183e:	2358      	movs	r3, #88	@ 0x58
10011840:	e77f      	b.n	10011742 <_svfprintf_r+0x1832>
10011842:	2200      	movs	r2, #0
10011844:	9208      	str	r2, [sp, #32]
10011846:	f7fe bbbb 	b.w	1000ffc0 <_svfprintf_r+0xb0>
1001184a:	4a81      	ldr	r2, [pc, #516]	@ (10011a50 <_svfprintf_r+0x1b40>)
1001184c:	9215      	str	r2, [sp, #84]	@ 0x54
1001184e:	f7ff b8ef 	b.w	10010a30 <_svfprintf_r+0xb20>
10011852:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011854:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10011856:	eb03 0b02 	add.w	fp, r3, r2
1001185a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001185c:	2b00      	cmp	r3, #0
1001185e:	f340 8083 	ble.w	10011968 <_svfprintf_r+0x1a58>
10011862:	2367      	movs	r3, #103	@ 0x67
10011864:	930e      	str	r3, [sp, #56]	@ 0x38
10011866:	e7e0      	b.n	1001182a <_svfprintf_r+0x191a>
10011868:	19ac      	adds	r4, r5, r6
1001186a:	2747      	movs	r7, #71	@ 0x47
1001186c:	e5d5      	b.n	1001141a <_svfprintf_r+0x150a>
1001186e:	4655      	mov	r5, sl
10011870:	3301      	adds	r3, #1
10011872:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011874:	f8c8 2000 	str.w	r2, [r8]
10011878:	4434      	add	r4, r6
1001187a:	2b07      	cmp	r3, #7
1001187c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011880:	f8c8 6004 	str.w	r6, [r8, #4]
10011884:	f77f a823 	ble.w	100108ce <_svfprintf_r+0x9be>
10011888:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001188a:	9807      	ldr	r0, [sp, #28]
1001188c:	aa32      	add	r2, sp, #200	@ 0xc8
1001188e:	f002 fb0b 	bl	10013ea8 <__ssprint_r>
10011892:	2800      	cmp	r0, #0
10011894:	f47e aff3 	bne.w	1001087e <_svfprintf_r+0x96e>
10011898:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001189c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100118a0:	f7ff b817 	b.w	100108d2 <_svfprintf_r+0x9c2>
100118a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100118a6:	8993      	ldrh	r3, [r2, #12]
100118a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100118ac:	8193      	strh	r3, [r2, #12]
100118ae:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100118b2:	930a      	str	r3, [sp, #40]	@ 0x28
100118b4:	f7fe bc38 	b.w	10010128 <_svfprintf_r+0x218>
100118b8:	4a66      	ldr	r2, [pc, #408]	@ (10011a54 <_svfprintf_r+0x1b44>)
100118ba:	9215      	str	r2, [sp, #84]	@ 0x54
100118bc:	f7fe bf84 	b.w	100107c8 <_svfprintf_r+0x8b8>
100118c0:	2800      	cmp	r0, #0
100118c2:	d13f      	bne.n	10011944 <_svfprintf_r+0x1a34>
100118c4:	2230      	movs	r2, #48	@ 0x30
100118c6:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
100118ca:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
100118ce:	3330      	adds	r3, #48	@ 0x30
100118d0:	f802 3b01 	strb.w	r3, [r2], #1
100118d4:	ab2c      	add	r3, sp, #176	@ 0xb0
100118d6:	1ad3      	subs	r3, r2, r3
100118d8:	931c      	str	r3, [sp, #112]	@ 0x70
100118da:	e5f3      	b.n	100114c4 <_svfprintf_r+0x15b4>
100118dc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100118de:	9730      	str	r7, [sp, #192]	@ 0xc0
100118e0:	7bd9      	ldrb	r1, [r3, #15]
100118e2:	f816 2c01 	ldrb.w	r2, [r6, #-1]
100118e6:	428a      	cmp	r2, r1
100118e8:	4633      	mov	r3, r6
100118ea:	d109      	bne.n	10011900 <_svfprintf_r+0x19f0>
100118ec:	2030      	movs	r0, #48	@ 0x30
100118ee:	f803 0c01 	strb.w	r0, [r3, #-1]
100118f2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100118f4:	1e5a      	subs	r2, r3, #1
100118f6:	9230      	str	r2, [sp, #192]	@ 0xc0
100118f8:	f813 2c01 	ldrb.w	r2, [r3, #-1]
100118fc:	4291      	cmp	r1, r2
100118fe:	d0f6      	beq.n	100118ee <_svfprintf_r+0x19de>
10011900:	2a39      	cmp	r2, #57	@ 0x39
10011902:	bf0b      	itete	eq
10011904:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10011906:	3201      	addne	r2, #1
10011908:	7a92      	ldrbeq	r2, [r2, #10]
1001190a:	b2d2      	uxtbne	r2, r2
1001190c:	f803 2c01 	strb.w	r2, [r3, #-1]
10011910:	4633      	mov	r3, r6
10011912:	e6a6      	b.n	10011662 <_svfprintf_r+0x1752>
10011914:	9807      	ldr	r0, [sp, #28]
10011916:	1c59      	adds	r1, r3, #1
10011918:	f000 f8ca 	bl	10011ab0 <_malloc_r>
1001191c:	4605      	mov	r5, r0
1001191e:	2800      	cmp	r0, #0
10011920:	d0c0      	beq.n	100118a4 <_svfprintf_r+0x1994>
10011922:	900c      	str	r0, [sp, #48]	@ 0x30
10011924:	e71c      	b.n	10011760 <_svfprintf_r+0x1850>
10011926:	9b06      	ldr	r3, [sp, #24]
10011928:	07df      	lsls	r7, r3, #31
1001192a:	f57f add4 	bpl.w	100114d6 <_svfprintf_r+0x15c6>
1001192e:	e5d0      	b.n	100114d2 <_svfprintf_r+0x15c2>
10011930:	4b49      	ldr	r3, [pc, #292]	@ (10011a58 <_svfprintf_r+0x1b48>)
10011932:	4a46      	ldr	r2, [pc, #280]	@ (10011a4c <_svfprintf_r+0x1b3c>)
10011934:	990e      	ldr	r1, [sp, #56]	@ 0x38
10011936:	2961      	cmp	r1, #97	@ 0x61
10011938:	bf18      	it	ne
1001193a:	461a      	movne	r2, r3
1001193c:	2301      	movs	r3, #1
1001193e:	9212      	str	r2, [sp, #72]	@ 0x48
10011940:	9329      	str	r3, [sp, #164]	@ 0xa4
10011942:	e637      	b.n	100115b4 <_svfprintf_r+0x16a4>
10011944:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10011948:	e7c1      	b.n	100118ce <_svfprintf_r+0x19be>
1001194a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001194c:	4d43      	ldr	r5, [pc, #268]	@ (10011a5c <_svfprintf_r+0x1b4c>)
1001194e:	2b00      	cmp	r3, #0
10011950:	bfb4      	ite	lt
10011952:	222d      	movlt	r2, #45	@ 0x2d
10011954:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10011958:	4b41      	ldr	r3, [pc, #260]	@ (10011a60 <_svfprintf_r+0x1b50>)
1001195a:	bfb8      	it	lt
1001195c:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10011960:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10011964:	f7fe bcae 	b.w	100102c4 <_svfprintf_r+0x3b4>
10011968:	f1c3 0301 	rsb	r3, r3, #1
1001196c:	449b      	add	fp, r3
1001196e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10011972:	9306      	str	r3, [sp, #24]
10011974:	2367      	movs	r3, #103	@ 0x67
10011976:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001197a:	930e      	str	r3, [sp, #56]	@ 0x38
1001197c:	e6b9      	b.n	100116f2 <_svfprintf_r+0x17e2>
1001197e:	2367      	movs	r3, #103	@ 0x67
10011980:	930e      	str	r3, [sp, #56]	@ 0x38
10011982:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10011984:	780b      	ldrb	r3, [r1, #0]
10011986:	2bff      	cmp	r3, #255	@ 0xff
10011988:	f000 808c 	beq.w	10011aa4 <_svfprintf_r+0x1b94>
1001198c:	2400      	movs	r4, #0
1001198e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10011990:	4620      	mov	r0, r4
10011992:	e003      	b.n	1001199c <_svfprintf_r+0x1a8c>
10011994:	3001      	adds	r0, #1
10011996:	3101      	adds	r1, #1
10011998:	2bff      	cmp	r3, #255	@ 0xff
1001199a:	d008      	beq.n	100119ae <_svfprintf_r+0x1a9e>
1001199c:	4293      	cmp	r3, r2
1001199e:	da06      	bge.n	100119ae <_svfprintf_r+0x1a9e>
100119a0:	1ad2      	subs	r2, r2, r3
100119a2:	784b      	ldrb	r3, [r1, #1]
100119a4:	2b00      	cmp	r3, #0
100119a6:	d1f5      	bne.n	10011994 <_svfprintf_r+0x1a84>
100119a8:	780b      	ldrb	r3, [r1, #0]
100119aa:	3401      	adds	r4, #1
100119ac:	e7f4      	b.n	10011998 <_svfprintf_r+0x1a88>
100119ae:	911b      	str	r1, [sp, #108]	@ 0x6c
100119b0:	9010      	str	r0, [sp, #64]	@ 0x40
100119b2:	9414      	str	r4, [sp, #80]	@ 0x50
100119b4:	9212      	str	r2, [sp, #72]	@ 0x48
100119b6:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
100119ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
100119bc:	4413      	add	r3, r2
100119be:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
100119c0:	fb02 bb03 	mla	fp, r2, r3, fp
100119c4:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100119c8:	9306      	str	r3, [sp, #24]
100119ca:	e590      	b.n	100114ee <_svfprintf_r+0x15de>
100119cc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100119ce:	18cf      	adds	r7, r1, r3
100119d0:	443a      	add	r2, r7
100119d2:	2366      	movs	r3, #102	@ 0x66
100119d4:	4693      	mov	fp, r2
100119d6:	930e      	str	r3, [sp, #56]	@ 0x38
100119d8:	e727      	b.n	1001182a <_svfprintf_r+0x191a>
100119da:	4693      	mov	fp, r2
100119dc:	e67c      	b.n	100116d8 <_svfprintf_r+0x17c8>
100119de:	9b08      	ldr	r3, [sp, #32]
100119e0:	9306      	str	r3, [sp, #24]
100119e2:	469b      	mov	fp, r3
100119e4:	2373      	movs	r3, #115	@ 0x73
100119e6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100119ea:	960d      	str	r6, [sp, #52]	@ 0x34
100119ec:	9008      	str	r0, [sp, #32]
100119ee:	9014      	str	r0, [sp, #80]	@ 0x50
100119f0:	9010      	str	r0, [sp, #64]	@ 0x40
100119f2:	930e      	str	r3, [sp, #56]	@ 0x38
100119f4:	f7fe bc73 	b.w	100102de <_svfprintf_r+0x3ce>
100119f8:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100119fc:	2200      	movs	r2, #0
100119fe:	2300      	movs	r3, #0
10011a00:	f007 f866 	bl	10018ad0 <__aeabi_dcmpeq>
10011a04:	2800      	cmp	r0, #0
10011a06:	f47f ad06 	bne.w	10011416 <_svfprintf_r+0x1506>
10011a0a:	f1c6 0601 	rsb	r6, r6, #1
10011a0e:	9629      	str	r6, [sp, #164]	@ 0xa4
10011a10:	e502      	b.n	10011418 <_svfprintf_r+0x1508>
10011a12:	f8dd 9018 	ldr.w	r9, [sp, #24]
10011a16:	f8dd b020 	ldr.w	fp, [sp, #32]
10011a1a:	f7ff bbc2 	b.w	100111a2 <_svfprintf_r+0x1292>
10011a1e:	4e0d      	ldr	r6, [pc, #52]	@ (10011a54 <_svfprintf_r+0x1b44>)
10011a20:	f7ff bae5 	b.w	10010fee <_svfprintf_r+0x10de>
10011a24:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10011a26:	7863      	ldrb	r3, [r4, #1]
10011a28:	460c      	mov	r4, r1
10011a2a:	f852 1b04 	ldr.w	r1, [r2], #4
10011a2e:	920d      	str	r2, [sp, #52]	@ 0x34
10011a30:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10011a34:	9108      	str	r1, [sp, #32]
10011a36:	f7fe bac2 	b.w	1000ffbe <_svfprintf_r+0xae>
10011a3a:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10011a3e:	b98b      	cbnz	r3, 10011a64 <_svfprintf_r+0x1b54>
10011a40:	2301      	movs	r3, #1
10011a42:	2266      	movs	r2, #102	@ 0x66
10011a44:	9306      	str	r3, [sp, #24]
10011a46:	920e      	str	r2, [sp, #56]	@ 0x38
10011a48:	469b      	mov	fp, r3
10011a4a:	e652      	b.n	100116f2 <_svfprintf_r+0x17e2>
10011a4c:	10019120 	.word	0x10019120
10011a50:	10019164 	.word	0x10019164
10011a54:	10019154 	.word	0x10019154
10011a58:	10019134 	.word	0x10019134
10011a5c:	10019118 	.word	0x10019118
10011a60:	1001911c 	.word	0x1001911c
10011a64:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011a66:	1c5f      	adds	r7, r3, #1
10011a68:	9b08      	ldr	r3, [sp, #32]
10011a6a:	443b      	add	r3, r7
10011a6c:	469b      	mov	fp, r3
10011a6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10011a72:	9306      	str	r3, [sp, #24]
10011a74:	2366      	movs	r3, #102	@ 0x66
10011a76:	930e      	str	r3, [sp, #56]	@ 0x38
10011a78:	e63b      	b.n	100116f2 <_svfprintf_r+0x17e2>
10011a7a:	2170      	movs	r1, #112	@ 0x70
10011a7c:	e4eb      	b.n	10011456 <_svfprintf_r+0x1546>
10011a7e:	4a0b      	ldr	r2, [pc, #44]	@ (10011aac <_svfprintf_r+0x1b9c>)
10011a80:	9215      	str	r2, [sp, #84]	@ 0x54
10011a82:	e44b      	b.n	1001131c <_svfprintf_r+0x140c>
10011a84:	2302      	movs	r3, #2
10011a86:	931c      	str	r3, [sp, #112]	@ 0x70
10011a88:	e51c      	b.n	100114c4 <_svfprintf_r+0x15b4>
10011a8a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10011a8c:	f8dd b01c 	ldr.w	fp, [sp, #28]
10011a90:	8993      	ldrh	r3, [r2, #12]
10011a92:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10011a96:	8193      	strh	r3, [r2, #12]
10011a98:	f7ff b8df 	b.w	10010c5a <_svfprintf_r+0xd4a>
10011a9c:	230c      	movs	r3, #12
10011a9e:	f8cb 3000 	str.w	r3, [fp]
10011aa2:	e704      	b.n	100118ae <_svfprintf_r+0x199e>
10011aa4:	2300      	movs	r3, #0
10011aa6:	9314      	str	r3, [sp, #80]	@ 0x50
10011aa8:	9310      	str	r3, [sp, #64]	@ 0x40
10011aaa:	e784      	b.n	100119b6 <_svfprintf_r+0x1aa6>
10011aac:	10019154 	.word	0x10019154

10011ab0 <_malloc_r>:
10011ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10011ab4:	f101 050b 	add.w	r5, r1, #11
10011ab8:	2d16      	cmp	r5, #22
10011aba:	b085      	sub	sp, #20
10011abc:	4606      	mov	r6, r0
10011abe:	d824      	bhi.n	10011b0a <_malloc_r+0x5a>
10011ac0:	2910      	cmp	r1, #16
10011ac2:	f200 80b1 	bhi.w	10011c28 <_malloc_r+0x178>
10011ac6:	f000 fbf3 	bl	100122b0 <__malloc_lock>
10011aca:	2510      	movs	r5, #16
10011acc:	2318      	movs	r3, #24
10011ace:	f04f 0c02 	mov.w	ip, #2
10011ad2:	4fba      	ldr	r7, [pc, #744]	@ (10011dbc <_malloc_r+0x30c>)
10011ad4:	443b      	add	r3, r7
10011ad6:	f1a3 0208 	sub.w	r2, r3, #8
10011ada:	685c      	ldr	r4, [r3, #4]
10011adc:	4294      	cmp	r4, r2
10011ade:	f000 8122 	beq.w	10011d26 <_malloc_r+0x276>
10011ae2:	6863      	ldr	r3, [r4, #4]
10011ae4:	68e2      	ldr	r2, [r4, #12]
10011ae6:	68a1      	ldr	r1, [r4, #8]
10011ae8:	f023 0303 	bic.w	r3, r3, #3
10011aec:	60ca      	str	r2, [r1, #12]
10011aee:	4423      	add	r3, r4
10011af0:	4630      	mov	r0, r6
10011af2:	6091      	str	r1, [r2, #8]
10011af4:	685a      	ldr	r2, [r3, #4]
10011af6:	f042 0201 	orr.w	r2, r2, #1
10011afa:	605a      	str	r2, [r3, #4]
10011afc:	3408      	adds	r4, #8
10011afe:	f000 fbdd 	bl	100122bc <__malloc_unlock>
10011b02:	4620      	mov	r0, r4
10011b04:	b005      	add	sp, #20
10011b06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10011b0a:	f035 0507 	bics.w	r5, r5, #7
10011b0e:	f100 808b 	bmi.w	10011c28 <_malloc_r+0x178>
10011b12:	42a9      	cmp	r1, r5
10011b14:	f200 8088 	bhi.w	10011c28 <_malloc_r+0x178>
10011b18:	f000 fbca 	bl	100122b0 <__malloc_lock>
10011b1c:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
10011b20:	f0c0 8173 	bcc.w	10011e0a <_malloc_r+0x35a>
10011b24:	0a6b      	lsrs	r3, r5, #9
10011b26:	f000 8083 	beq.w	10011c30 <_malloc_r+0x180>
10011b2a:	2b04      	cmp	r3, #4
10011b2c:	f200 8122 	bhi.w	10011d74 <_malloc_r+0x2c4>
10011b30:	09ab      	lsrs	r3, r5, #6
10011b32:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
10011b36:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
10011b3a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011b3e:	4f9f      	ldr	r7, [pc, #636]	@ (10011dbc <_malloc_r+0x30c>)
10011b40:	443b      	add	r3, r7
10011b42:	f1a3 0008 	sub.w	r0, r3, #8
10011b46:	685c      	ldr	r4, [r3, #4]
10011b48:	42a0      	cmp	r0, r4
10011b4a:	d107      	bne.n	10011b5c <_malloc_r+0xac>
10011b4c:	e00d      	b.n	10011b6a <_malloc_r+0xba>
10011b4e:	2a00      	cmp	r2, #0
10011b50:	68e1      	ldr	r1, [r4, #12]
10011b52:	f280 80e2 	bge.w	10011d1a <_malloc_r+0x26a>
10011b56:	4288      	cmp	r0, r1
10011b58:	d007      	beq.n	10011b6a <_malloc_r+0xba>
10011b5a:	460c      	mov	r4, r1
10011b5c:	6863      	ldr	r3, [r4, #4]
10011b5e:	f023 0303 	bic.w	r3, r3, #3
10011b62:	1b5a      	subs	r2, r3, r5
10011b64:	2a0f      	cmp	r2, #15
10011b66:	ddf2      	ble.n	10011b4e <_malloc_r+0x9e>
10011b68:	46f4      	mov	ip, lr
10011b6a:	f8df 8264 	ldr.w	r8, [pc, #612]	@ 10011dd0 <_malloc_r+0x320>
10011b6e:	693c      	ldr	r4, [r7, #16]
10011b70:	4544      	cmp	r4, r8
10011b72:	f000 80bf 	beq.w	10011cf4 <_malloc_r+0x244>
10011b76:	6863      	ldr	r3, [r4, #4]
10011b78:	f023 0903 	bic.w	r9, r3, #3
10011b7c:	eba9 0305 	sub.w	r3, r9, r5
10011b80:	2b0f      	cmp	r3, #15
10011b82:	f300 8147 	bgt.w	10011e14 <_malloc_r+0x364>
10011b86:	2b00      	cmp	r3, #0
10011b88:	e9c7 8804 	strd	r8, r8, [r7, #16]
10011b8c:	f280 8131 	bge.w	10011df2 <_malloc_r+0x342>
10011b90:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
10011b94:	f8d7 e004 	ldr.w	lr, [r7, #4]
10011b98:	f080 80cc 	bcs.w	10011d34 <_malloc_r+0x284>
10011b9c:	ea4f 01d9 	mov.w	r1, r9, lsr #3
10011ba0:	3101      	adds	r1, #1
10011ba2:	ea4f 1959 	mov.w	r9, r9, lsr #5
10011ba6:	2301      	movs	r3, #1
10011ba8:	fa03 f309 	lsl.w	r3, r3, r9
10011bac:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
10011bb0:	60a2      	str	r2, [r4, #8]
10011bb2:	ea4e 0e03 	orr.w	lr, lr, r3
10011bb6:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
10011bba:	3b08      	subs	r3, #8
10011bbc:	60e3      	str	r3, [r4, #12]
10011bbe:	f8c7 e004 	str.w	lr, [r7, #4]
10011bc2:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
10011bc6:	60d4      	str	r4, [r2, #12]
10011bc8:	ea4f 03ac 	mov.w	r3, ip, asr #2
10011bcc:	2001      	movs	r0, #1
10011bce:	4098      	lsls	r0, r3
10011bd0:	4570      	cmp	r0, lr
10011bd2:	d834      	bhi.n	10011c3e <_malloc_r+0x18e>
10011bd4:	ea10 0f0e 	tst.w	r0, lr
10011bd8:	d107      	bne.n	10011bea <_malloc_r+0x13a>
10011bda:	f02c 0c03 	bic.w	ip, ip, #3
10011bde:	0040      	lsls	r0, r0, #1
10011be0:	ea10 0f0e 	tst.w	r0, lr
10011be4:	f10c 0c04 	add.w	ip, ip, #4
10011be8:	d0f9      	beq.n	10011bde <_malloc_r+0x12e>
10011bea:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
10011bee:	4652      	mov	r2, sl
10011bf0:	46e1      	mov	r9, ip
10011bf2:	68d1      	ldr	r1, [r2, #12]
10011bf4:	e00e      	b.n	10011c14 <_malloc_r+0x164>
10011bf6:	684b      	ldr	r3, [r1, #4]
10011bf8:	f023 0303 	bic.w	r3, r3, #3
10011bfc:	eba3 0e05 	sub.w	lr, r3, r5
10011c00:	f1be 0f0f 	cmp.w	lr, #15
10011c04:	460c      	mov	r4, r1
10011c06:	68c9      	ldr	r1, [r1, #12]
10011c08:	f300 80c1 	bgt.w	10011d8e <_malloc_r+0x2de>
10011c0c:	f1be 0f00 	cmp.w	lr, #0
10011c10:	f280 80e2 	bge.w	10011dd8 <_malloc_r+0x328>
10011c14:	428a      	cmp	r2, r1
10011c16:	d1ee      	bne.n	10011bf6 <_malloc_r+0x146>
10011c18:	f109 0901 	add.w	r9, r9, #1
10011c1c:	f019 0f03 	tst.w	r9, #3
10011c20:	f102 0208 	add.w	r2, r2, #8
10011c24:	d1e5      	bne.n	10011bf2 <_malloc_r+0x142>
10011c26:	e121      	b.n	10011e6c <_malloc_r+0x3bc>
10011c28:	230c      	movs	r3, #12
10011c2a:	6033      	str	r3, [r6, #0]
10011c2c:	2400      	movs	r4, #0
10011c2e:	e768      	b.n	10011b02 <_malloc_r+0x52>
10011c30:	f44f 7300 	mov.w	r3, #512	@ 0x200
10011c34:	f04f 0c40 	mov.w	ip, #64	@ 0x40
10011c38:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
10011c3c:	e77f      	b.n	10011b3e <_malloc_r+0x8e>
10011c3e:	68bc      	ldr	r4, [r7, #8]
10011c40:	6863      	ldr	r3, [r4, #4]
10011c42:	f023 0903 	bic.w	r9, r3, #3
10011c46:	45a9      	cmp	r9, r5
10011c48:	d303      	bcc.n	10011c52 <_malloc_r+0x1a2>
10011c4a:	eba9 0305 	sub.w	r3, r9, r5
10011c4e:	2b0f      	cmp	r3, #15
10011c50:	dc53      	bgt.n	10011cfa <_malloc_r+0x24a>
10011c52:	4b5b      	ldr	r3, [pc, #364]	@ (10011dc0 <_malloc_r+0x310>)
10011c54:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 10011dd4 <_malloc_r+0x324>
10011c58:	681b      	ldr	r3, [r3, #0]
10011c5a:	2008      	movs	r0, #8
10011c5c:	f103 0810 	add.w	r8, r3, #16
10011c60:	f000 fab0 	bl	100121c4 <sysconf>
10011c64:	f8db 3000 	ldr.w	r3, [fp]
10011c68:	9001      	str	r0, [sp, #4]
10011c6a:	3301      	adds	r3, #1
10011c6c:	44a8      	add	r8, r5
10011c6e:	eb04 0209 	add.w	r2, r4, r9
10011c72:	d005      	beq.n	10011c80 <_malloc_r+0x1d0>
10011c74:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
10011c78:	4480      	add	r8, r0
10011c7a:	4243      	negs	r3, r0
10011c7c:	ea03 0808 	and.w	r8, r3, r8
10011c80:	4641      	mov	r1, r8
10011c82:	4630      	mov	r0, r6
10011c84:	9202      	str	r2, [sp, #8]
10011c86:	f001 ff43 	bl	10013b10 <_sbrk_r>
10011c8a:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10011c8e:	9a02      	ldr	r2, [sp, #8]
10011c90:	4682      	mov	sl, r0
10011c92:	f000 80dc 	beq.w	10011e4e <_malloc_r+0x39e>
10011c96:	4282      	cmp	r2, r0
10011c98:	f200 80d7 	bhi.w	10011e4a <_malloc_r+0x39a>
10011c9c:	4b49      	ldr	r3, [pc, #292]	@ (10011dc4 <_malloc_r+0x314>)
10011c9e:	9901      	ldr	r1, [sp, #4]
10011ca0:	6818      	ldr	r0, [r3, #0]
10011ca2:	4440      	add	r0, r8
10011ca4:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
10011ca8:	6018      	str	r0, [r3, #0]
10011caa:	4684      	mov	ip, r0
10011cac:	f040 80fc 	bne.w	10011ea8 <_malloc_r+0x3f8>
10011cb0:	ea1a 0f01 	tst.w	sl, r1
10011cb4:	f040 80f8 	bne.w	10011ea8 <_malloc_r+0x3f8>
10011cb8:	f8d7 a008 	ldr.w	sl, [r7, #8]
10011cbc:	44c8      	add	r8, r9
10011cbe:	f048 0201 	orr.w	r2, r8, #1
10011cc2:	f8ca 2004 	str.w	r2, [sl, #4]
10011cc6:	4b40      	ldr	r3, [pc, #256]	@ (10011dc8 <_malloc_r+0x318>)
10011cc8:	6819      	ldr	r1, [r3, #0]
10011cca:	4281      	cmp	r1, r0
10011ccc:	bf38      	it	cc
10011cce:	6018      	strcc	r0, [r3, #0]
10011cd0:	4b3e      	ldr	r3, [pc, #248]	@ (10011dcc <_malloc_r+0x31c>)
10011cd2:	6819      	ldr	r1, [r3, #0]
10011cd4:	4281      	cmp	r1, r0
10011cd6:	bf38      	it	cc
10011cd8:	6018      	strcc	r0, [r3, #0]
10011cda:	4654      	mov	r4, sl
10011cdc:	f022 0803 	bic.w	r8, r2, #3
10011ce0:	45a8      	cmp	r8, r5
10011ce2:	eba8 0305 	sub.w	r3, r8, r5
10011ce6:	d301      	bcc.n	10011cec <_malloc_r+0x23c>
10011ce8:	2b0f      	cmp	r3, #15
10011cea:	dc06      	bgt.n	10011cfa <_malloc_r+0x24a>
10011cec:	4630      	mov	r0, r6
10011cee:	f000 fae5 	bl	100122bc <__malloc_unlock>
10011cf2:	e79b      	b.n	10011c2c <_malloc_r+0x17c>
10011cf4:	f8d7 e004 	ldr.w	lr, [r7, #4]
10011cf8:	e766      	b.n	10011bc8 <_malloc_r+0x118>
10011cfa:	1962      	adds	r2, r4, r5
10011cfc:	f043 0301 	orr.w	r3, r3, #1
10011d00:	f045 0501 	orr.w	r5, r5, #1
10011d04:	6065      	str	r5, [r4, #4]
10011d06:	4630      	mov	r0, r6
10011d08:	60ba      	str	r2, [r7, #8]
10011d0a:	6053      	str	r3, [r2, #4]
10011d0c:	f000 fad6 	bl	100122bc <__malloc_unlock>
10011d10:	3408      	adds	r4, #8
10011d12:	4620      	mov	r0, r4
10011d14:	b005      	add	sp, #20
10011d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10011d1a:	68a2      	ldr	r2, [r4, #8]
10011d1c:	4423      	add	r3, r4
10011d1e:	60d1      	str	r1, [r2, #12]
10011d20:	4630      	mov	r0, r6
10011d22:	608a      	str	r2, [r1, #8]
10011d24:	e6e6      	b.n	10011af4 <_malloc_r+0x44>
10011d26:	68dc      	ldr	r4, [r3, #12]
10011d28:	42a3      	cmp	r3, r4
10011d2a:	f47f aeda 	bne.w	10011ae2 <_malloc_r+0x32>
10011d2e:	f10c 0c02 	add.w	ip, ip, #2
10011d32:	e71a      	b.n	10011b6a <_malloc_r+0xba>
10011d34:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
10011d38:	ea4f 2259 	mov.w	r2, r9, lsr #9
10011d3c:	d37e      	bcc.n	10011e3c <_malloc_r+0x38c>
10011d3e:	2a14      	cmp	r2, #20
10011d40:	f200 8115 	bhi.w	10011f6e <_malloc_r+0x4be>
10011d44:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
10011d48:	00db      	lsls	r3, r3, #3
10011d4a:	325b      	adds	r2, #91	@ 0x5b
10011d4c:	18f9      	adds	r1, r7, r3
10011d4e:	58fb      	ldr	r3, [r7, r3]
10011d50:	3908      	subs	r1, #8
10011d52:	4299      	cmp	r1, r3
10011d54:	d103      	bne.n	10011d5e <_malloc_r+0x2ae>
10011d56:	e0f0      	b.n	10011f3a <_malloc_r+0x48a>
10011d58:	689b      	ldr	r3, [r3, #8]
10011d5a:	4299      	cmp	r1, r3
10011d5c:	d004      	beq.n	10011d68 <_malloc_r+0x2b8>
10011d5e:	685a      	ldr	r2, [r3, #4]
10011d60:	f022 0203 	bic.w	r2, r2, #3
10011d64:	454a      	cmp	r2, r9
10011d66:	d8f7      	bhi.n	10011d58 <_malloc_r+0x2a8>
10011d68:	68d9      	ldr	r1, [r3, #12]
10011d6a:	e9c4 3102 	strd	r3, r1, [r4, #8]
10011d6e:	608c      	str	r4, [r1, #8]
10011d70:	60dc      	str	r4, [r3, #12]
10011d72:	e729      	b.n	10011bc8 <_malloc_r+0x118>
10011d74:	2b14      	cmp	r3, #20
10011d76:	d96d      	bls.n	10011e54 <_malloc_r+0x3a4>
10011d78:	2b54      	cmp	r3, #84	@ 0x54
10011d7a:	f200 8101 	bhi.w	10011f80 <_malloc_r+0x4d0>
10011d7e:	0b2b      	lsrs	r3, r5, #12
10011d80:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
10011d84:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
10011d88:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011d8c:	e6d7      	b.n	10011b3e <_malloc_r+0x8e>
10011d8e:	4630      	mov	r0, r6
10011d90:	68a6      	ldr	r6, [r4, #8]
10011d92:	1962      	adds	r2, r4, r5
10011d94:	f045 0501 	orr.w	r5, r5, #1
10011d98:	6065      	str	r5, [r4, #4]
10011d9a:	60f1      	str	r1, [r6, #12]
10011d9c:	608e      	str	r6, [r1, #8]
10011d9e:	f04e 0101 	orr.w	r1, lr, #1
10011da2:	e9c7 2204 	strd	r2, r2, [r7, #16]
10011da6:	f8c2 8008 	str.w	r8, [r2, #8]
10011daa:	f8c2 800c 	str.w	r8, [r2, #12]
10011dae:	6051      	str	r1, [r2, #4]
10011db0:	f844 e003 	str.w	lr, [r4, r3]
10011db4:	f000 fa82 	bl	100122bc <__malloc_unlock>
10011db8:	3408      	adds	r4, #8
10011dba:	e6a2      	b.n	10011b02 <_malloc_r+0x52>
10011dbc:	20000040 	.word	0x20000040
10011dc0:	2000145c 	.word	0x2000145c
10011dc4:	2000142c 	.word	0x2000142c
10011dc8:	20001458 	.word	0x20001458
10011dcc:	20001454 	.word	0x20001454
10011dd0:	20000048 	.word	0x20000048
10011dd4:	20000038 	.word	0x20000038
10011dd8:	4423      	add	r3, r4
10011dda:	4630      	mov	r0, r6
10011ddc:	685a      	ldr	r2, [r3, #4]
10011dde:	f042 0201 	orr.w	r2, r2, #1
10011de2:	605a      	str	r2, [r3, #4]
10011de4:	f854 3f08 	ldr.w	r3, [r4, #8]!
10011de8:	60d9      	str	r1, [r3, #12]
10011dea:	608b      	str	r3, [r1, #8]
10011dec:	f000 fa66 	bl	100122bc <__malloc_unlock>
10011df0:	e687      	b.n	10011b02 <_malloc_r+0x52>
10011df2:	44a1      	add	r9, r4
10011df4:	4630      	mov	r0, r6
10011df6:	f8d9 3004 	ldr.w	r3, [r9, #4]
10011dfa:	f043 0301 	orr.w	r3, r3, #1
10011dfe:	f8c9 3004 	str.w	r3, [r9, #4]
10011e02:	3408      	adds	r4, #8
10011e04:	f000 fa5a 	bl	100122bc <__malloc_unlock>
10011e08:	e67b      	b.n	10011b02 <_malloc_r+0x52>
10011e0a:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
10011e0e:	f105 0308 	add.w	r3, r5, #8
10011e12:	e65e      	b.n	10011ad2 <_malloc_r+0x22>
10011e14:	1962      	adds	r2, r4, r5
10011e16:	f043 0101 	orr.w	r1, r3, #1
10011e1a:	f045 0501 	orr.w	r5, r5, #1
10011e1e:	6065      	str	r5, [r4, #4]
10011e20:	4630      	mov	r0, r6
10011e22:	e9c7 2204 	strd	r2, r2, [r7, #16]
10011e26:	f8c2 8008 	str.w	r8, [r2, #8]
10011e2a:	f8c2 800c 	str.w	r8, [r2, #12]
10011e2e:	6051      	str	r1, [r2, #4]
10011e30:	f844 3009 	str.w	r3, [r4, r9]
10011e34:	f000 fa42 	bl	100122bc <__malloc_unlock>
10011e38:	3408      	adds	r4, #8
10011e3a:	e662      	b.n	10011b02 <_malloc_r+0x52>
10011e3c:	ea4f 1299 	mov.w	r2, r9, lsr #6
10011e40:	f102 0339 	add.w	r3, r2, #57	@ 0x39
10011e44:	00db      	lsls	r3, r3, #3
10011e46:	3238      	adds	r2, #56	@ 0x38
10011e48:	e780      	b.n	10011d4c <_malloc_r+0x29c>
10011e4a:	42bc      	cmp	r4, r7
10011e4c:	d024      	beq.n	10011e98 <_malloc_r+0x3e8>
10011e4e:	68bc      	ldr	r4, [r7, #8]
10011e50:	6862      	ldr	r2, [r4, #4]
10011e52:	e743      	b.n	10011cdc <_malloc_r+0x22c>
10011e54:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
10011e58:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
10011e5c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011e60:	e66d      	b.n	10011b3e <_malloc_r+0x8e>
10011e62:	f85a 3908 	ldr.w	r3, [sl], #-8
10011e66:	4553      	cmp	r3, sl
10011e68:	f040 80d8 	bne.w	1001201c <_malloc_r+0x56c>
10011e6c:	f01c 0f03 	tst.w	ip, #3
10011e70:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
10011e74:	d1f5      	bne.n	10011e62 <_malloc_r+0x3b2>
10011e76:	687b      	ldr	r3, [r7, #4]
10011e78:	ea23 0300 	bic.w	r3, r3, r0
10011e7c:	607b      	str	r3, [r7, #4]
10011e7e:	0040      	lsls	r0, r0, #1
10011e80:	4298      	cmp	r0, r3
10011e82:	f63f aedc 	bhi.w	10011c3e <_malloc_r+0x18e>
10011e86:	b918      	cbnz	r0, 10011e90 <_malloc_r+0x3e0>
10011e88:	e6d9      	b.n	10011c3e <_malloc_r+0x18e>
10011e8a:	0040      	lsls	r0, r0, #1
10011e8c:	f109 0904 	add.w	r9, r9, #4
10011e90:	4218      	tst	r0, r3
10011e92:	d0fa      	beq.n	10011e8a <_malloc_r+0x3da>
10011e94:	46cc      	mov	ip, r9
10011e96:	e6a8      	b.n	10011bea <_malloc_r+0x13a>
10011e98:	4b61      	ldr	r3, [pc, #388]	@ (10012020 <_malloc_r+0x570>)
10011e9a:	9901      	ldr	r1, [sp, #4]
10011e9c:	6818      	ldr	r0, [r3, #0]
10011e9e:	eb08 0c00 	add.w	ip, r8, r0
10011ea2:	3901      	subs	r1, #1
10011ea4:	f8c3 c000 	str.w	ip, [r3]
10011ea8:	f8db 0000 	ldr.w	r0, [fp]
10011eac:	3001      	adds	r0, #1
10011eae:	bf1b      	ittet	ne
10011eb0:	ebaa 0202 	subne.w	r2, sl, r2
10011eb4:	4462      	addne	r2, ip
10011eb6:	f8cb a000 	streq.w	sl, [fp]
10011eba:	601a      	strne	r2, [r3, #0]
10011ebc:	f01a 0207 	ands.w	r2, sl, #7
10011ec0:	e9cd 2302 	strd	r2, r3, [sp, #8]
10011ec4:	d042      	beq.n	10011f4c <_malloc_r+0x49c>
10011ec6:	f1c2 0208 	rsb	r2, r2, #8
10011eca:	9b01      	ldr	r3, [sp, #4]
10011ecc:	4492      	add	sl, r2
10011ece:	44d0      	add	r8, sl
10011ed0:	4413      	add	r3, r2
10011ed2:	ea08 0001 	and.w	r0, r8, r1
10011ed6:	1a1a      	subs	r2, r3, r0
10011ed8:	ea02 0b01 	and.w	fp, r2, r1
10011edc:	4659      	mov	r1, fp
10011ede:	4630      	mov	r0, r6
10011ee0:	f001 fe16 	bl	10013b10 <_sbrk_r>
10011ee4:	1c42      	adds	r2, r0, #1
10011ee6:	9b03      	ldr	r3, [sp, #12]
10011ee8:	d07a      	beq.n	10011fe0 <_malloc_r+0x530>
10011eea:	eba0 000a 	sub.w	r0, r0, sl
10011eee:	eb00 080b 	add.w	r8, r0, fp
10011ef2:	6818      	ldr	r0, [r3, #0]
10011ef4:	f8c7 a008 	str.w	sl, [r7, #8]
10011ef8:	f048 0201 	orr.w	r2, r8, #1
10011efc:	4458      	add	r0, fp
10011efe:	42bc      	cmp	r4, r7
10011f00:	f8ca 2004 	str.w	r2, [sl, #4]
10011f04:	6018      	str	r0, [r3, #0]
10011f06:	f43f aede 	beq.w	10011cc6 <_malloc_r+0x216>
10011f0a:	f1b9 0f0f 	cmp.w	r9, #15
10011f0e:	d942      	bls.n	10011f96 <_malloc_r+0x4e6>
10011f10:	6861      	ldr	r1, [r4, #4]
10011f12:	f1a9 020c 	sub.w	r2, r9, #12
10011f16:	f022 0207 	bic.w	r2, r2, #7
10011f1a:	f001 0101 	and.w	r1, r1, #1
10011f1e:	4311      	orrs	r1, r2
10011f20:	6061      	str	r1, [r4, #4]
10011f22:	18a1      	adds	r1, r4, r2
10011f24:	f04f 0c05 	mov.w	ip, #5
10011f28:	2a0f      	cmp	r2, #15
10011f2a:	f8c1 c004 	str.w	ip, [r1, #4]
10011f2e:	f8c1 c008 	str.w	ip, [r1, #8]
10011f32:	d84a      	bhi.n	10011fca <_malloc_r+0x51a>
10011f34:	f8da 2004 	ldr.w	r2, [sl, #4]
10011f38:	e6c5      	b.n	10011cc6 <_malloc_r+0x216>
10011f3a:	1092      	asrs	r2, r2, #2
10011f3c:	2001      	movs	r0, #1
10011f3e:	fa00 f202 	lsl.w	r2, r0, r2
10011f42:	ea4e 0e02 	orr.w	lr, lr, r2
10011f46:	f8c7 e004 	str.w	lr, [r7, #4]
10011f4a:	e70e      	b.n	10011d6a <_malloc_r+0x2ba>
10011f4c:	9b01      	ldr	r3, [sp, #4]
10011f4e:	eb0a 0208 	add.w	r2, sl, r8
10011f52:	400a      	ands	r2, r1
10011f54:	1a9a      	subs	r2, r3, r2
10011f56:	ea02 0b01 	and.w	fp, r2, r1
10011f5a:	4659      	mov	r1, fp
10011f5c:	4630      	mov	r0, r6
10011f5e:	f001 fdd7 	bl	10013b10 <_sbrk_r>
10011f62:	1c43      	adds	r3, r0, #1
10011f64:	9b03      	ldr	r3, [sp, #12]
10011f66:	d1c0      	bne.n	10011eea <_malloc_r+0x43a>
10011f68:	f8dd b008 	ldr.w	fp, [sp, #8]
10011f6c:	e7c1      	b.n	10011ef2 <_malloc_r+0x442>
10011f6e:	2a54      	cmp	r2, #84	@ 0x54
10011f70:	d815      	bhi.n	10011f9e <_malloc_r+0x4ee>
10011f72:	ea4f 3219 	mov.w	r2, r9, lsr #12
10011f76:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
10011f7a:	00db      	lsls	r3, r3, #3
10011f7c:	326e      	adds	r2, #110	@ 0x6e
10011f7e:	e6e5      	b.n	10011d4c <_malloc_r+0x29c>
10011f80:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10011f84:	d815      	bhi.n	10011fb2 <_malloc_r+0x502>
10011f86:	0beb      	lsrs	r3, r5, #15
10011f88:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
10011f8c:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
10011f90:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011f94:	e5d3      	b.n	10011b3e <_malloc_r+0x8e>
10011f96:	2301      	movs	r3, #1
10011f98:	f8ca 3004 	str.w	r3, [sl, #4]
10011f9c:	e6a6      	b.n	10011cec <_malloc_r+0x23c>
10011f9e:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
10011fa2:	d825      	bhi.n	10011ff0 <_malloc_r+0x540>
10011fa4:	ea4f 32d9 	mov.w	r2, r9, lsr #15
10011fa8:	f102 0378 	add.w	r3, r2, #120	@ 0x78
10011fac:	00db      	lsls	r3, r3, #3
10011fae:	3277      	adds	r2, #119	@ 0x77
10011fb0:	e6cc      	b.n	10011d4c <_malloc_r+0x29c>
10011fb2:	f240 5254 	movw	r2, #1364	@ 0x554
10011fb6:	4293      	cmp	r3, r2
10011fb8:	d825      	bhi.n	10012006 <_malloc_r+0x556>
10011fba:	0cab      	lsrs	r3, r5, #18
10011fbc:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
10011fc0:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
10011fc4:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011fc8:	e5b9      	b.n	10011b3e <_malloc_r+0x8e>
10011fca:	4630      	mov	r0, r6
10011fcc:	f104 0108 	add.w	r1, r4, #8
10011fd0:	9301      	str	r3, [sp, #4]
10011fd2:	f001 fc15 	bl	10013800 <_free_r>
10011fd6:	9b01      	ldr	r3, [sp, #4]
10011fd8:	f8d7 a008 	ldr.w	sl, [r7, #8]
10011fdc:	6818      	ldr	r0, [r3, #0]
10011fde:	e7a9      	b.n	10011f34 <_malloc_r+0x484>
10011fe0:	9a02      	ldr	r2, [sp, #8]
10011fe2:	3a08      	subs	r2, #8
10011fe4:	4490      	add	r8, r2
10011fe6:	eba8 080a 	sub.w	r8, r8, sl
10011fea:	f04f 0b00 	mov.w	fp, #0
10011fee:	e780      	b.n	10011ef2 <_malloc_r+0x442>
10011ff0:	f240 5354 	movw	r3, #1364	@ 0x554
10011ff4:	429a      	cmp	r2, r3
10011ff6:	d80d      	bhi.n	10012014 <_malloc_r+0x564>
10011ff8:	ea4f 4299 	mov.w	r2, r9, lsr #18
10011ffc:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
10012000:	00db      	lsls	r3, r3, #3
10012002:	327c      	adds	r2, #124	@ 0x7c
10012004:	e6a2      	b.n	10011d4c <_malloc_r+0x29c>
10012006:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
1001200a:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
1001200e:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
10012012:	e594      	b.n	10011b3e <_malloc_r+0x8e>
10012014:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10012018:	227e      	movs	r2, #126	@ 0x7e
1001201a:	e697      	b.n	10011d4c <_malloc_r+0x29c>
1001201c:	687b      	ldr	r3, [r7, #4]
1001201e:	e72e      	b.n	10011e7e <_malloc_r+0x3ce>
10012020:	2000142c 	.word	0x2000142c

10012024 <register_fini>:
10012024:	4b02      	ldr	r3, [pc, #8]	@ (10012030 <register_fini+0xc>)
10012026:	b113      	cbz	r3, 1001202e <register_fini+0xa>
10012028:	4802      	ldr	r0, [pc, #8]	@ (10012034 <register_fini+0x10>)
1001202a:	f000 b94d 	b.w	100122c8 <atexit>
1001202e:	4770      	bx	lr
10012030:	00000000 	.word	0x00000000
10012034:	10012179 	.word	0x10012179

10012038 <memset>:
10012038:	0783      	lsls	r3, r0, #30
1001203a:	b530      	push	{r4, r5, lr}
1001203c:	d047      	beq.n	100120ce <memset+0x96>
1001203e:	1e54      	subs	r4, r2, #1
10012040:	2a00      	cmp	r2, #0
10012042:	d03e      	beq.n	100120c2 <memset+0x8a>
10012044:	b2ca      	uxtb	r2, r1
10012046:	4603      	mov	r3, r0
10012048:	e001      	b.n	1001204e <memset+0x16>
1001204a:	3c01      	subs	r4, #1
1001204c:	d339      	bcc.n	100120c2 <memset+0x8a>
1001204e:	f803 2b01 	strb.w	r2, [r3], #1
10012052:	079d      	lsls	r5, r3, #30
10012054:	d1f9      	bne.n	1001204a <memset+0x12>
10012056:	2c03      	cmp	r4, #3
10012058:	d92c      	bls.n	100120b4 <memset+0x7c>
1001205a:	b2cd      	uxtb	r5, r1
1001205c:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10012060:	2c0f      	cmp	r4, #15
10012062:	eb05 4505 	add.w	r5, r5, r5, lsl #16
10012066:	d935      	bls.n	100120d4 <memset+0x9c>
10012068:	f1a4 0210 	sub.w	r2, r4, #16
1001206c:	f022 0c0f 	bic.w	ip, r2, #15
10012070:	f103 0e10 	add.w	lr, r3, #16
10012074:	44e6      	add	lr, ip
10012076:	ea4f 1c12 	mov.w	ip, r2, lsr #4
1001207a:	461a      	mov	r2, r3
1001207c:	6015      	str	r5, [r2, #0]
1001207e:	6055      	str	r5, [r2, #4]
10012080:	6095      	str	r5, [r2, #8]
10012082:	60d5      	str	r5, [r2, #12]
10012084:	3210      	adds	r2, #16
10012086:	4572      	cmp	r2, lr
10012088:	d1f8      	bne.n	1001207c <memset+0x44>
1001208a:	f10c 0201 	add.w	r2, ip, #1
1001208e:	f014 0f0c 	tst.w	r4, #12
10012092:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10012096:	f004 0c0f 	and.w	ip, r4, #15
1001209a:	d013      	beq.n	100120c4 <memset+0x8c>
1001209c:	f1ac 0304 	sub.w	r3, ip, #4
100120a0:	f023 0303 	bic.w	r3, r3, #3
100120a4:	3304      	adds	r3, #4
100120a6:	4413      	add	r3, r2
100120a8:	f842 5b04 	str.w	r5, [r2], #4
100120ac:	429a      	cmp	r2, r3
100120ae:	d1fb      	bne.n	100120a8 <memset+0x70>
100120b0:	f00c 0403 	and.w	r4, ip, #3
100120b4:	b12c      	cbz	r4, 100120c2 <memset+0x8a>
100120b6:	b2c9      	uxtb	r1, r1
100120b8:	441c      	add	r4, r3
100120ba:	f803 1b01 	strb.w	r1, [r3], #1
100120be:	429c      	cmp	r4, r3
100120c0:	d1fb      	bne.n	100120ba <memset+0x82>
100120c2:	bd30      	pop	{r4, r5, pc}
100120c4:	4664      	mov	r4, ip
100120c6:	4613      	mov	r3, r2
100120c8:	2c00      	cmp	r4, #0
100120ca:	d1f4      	bne.n	100120b6 <memset+0x7e>
100120cc:	e7f9      	b.n	100120c2 <memset+0x8a>
100120ce:	4603      	mov	r3, r0
100120d0:	4614      	mov	r4, r2
100120d2:	e7c0      	b.n	10012056 <memset+0x1e>
100120d4:	461a      	mov	r2, r3
100120d6:	46a4      	mov	ip, r4
100120d8:	e7e0      	b.n	1001209c <memset+0x64>
100120da:	bf00      	nop

100120dc <_wcrtomb_r>:
100120dc:	b570      	push	{r4, r5, r6, lr}
100120de:	4605      	mov	r5, r0
100120e0:	b084      	sub	sp, #16
100120e2:	b15b      	cbz	r3, 100120fc <_wcrtomb_r+0x20>
100120e4:	461c      	mov	r4, r3
100120e6:	4b0f      	ldr	r3, [pc, #60]	@ (10012124 <_wcrtomb_r+0x48>)
100120e8:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
100120ec:	4623      	mov	r3, r4
100120ee:	b169      	cbz	r1, 1001210c <_wcrtomb_r+0x30>
100120f0:	4628      	mov	r0, r5
100120f2:	47b0      	blx	r6
100120f4:	1c43      	adds	r3, r0, #1
100120f6:	d00f      	beq.n	10012118 <_wcrtomb_r+0x3c>
100120f8:	b004      	add	sp, #16
100120fa:	bd70      	pop	{r4, r5, r6, pc}
100120fc:	4b09      	ldr	r3, [pc, #36]	@ (10012124 <_wcrtomb_r+0x48>)
100120fe:	f500 7482 	add.w	r4, r0, #260	@ 0x104
10012102:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10012106:	4623      	mov	r3, r4
10012108:	2900      	cmp	r1, #0
1001210a:	d1f1      	bne.n	100120f0 <_wcrtomb_r+0x14>
1001210c:	460a      	mov	r2, r1
1001210e:	4628      	mov	r0, r5
10012110:	a901      	add	r1, sp, #4
10012112:	47b0      	blx	r6
10012114:	1c43      	adds	r3, r0, #1
10012116:	d1ef      	bne.n	100120f8 <_wcrtomb_r+0x1c>
10012118:	2200      	movs	r2, #0
1001211a:	238a      	movs	r3, #138	@ 0x8a
1001211c:	6022      	str	r2, [r4, #0]
1001211e:	602b      	str	r3, [r5, #0]
10012120:	b004      	add	sp, #16
10012122:	bd70      	pop	{r4, r5, r6, pc}
10012124:	2000044c 	.word	0x2000044c

10012128 <__libc_init_array>:
10012128:	b570      	push	{r4, r5, r6, lr}
1001212a:	4b0f      	ldr	r3, [pc, #60]	@ (10012168 <__libc_init_array+0x40>)
1001212c:	4d0f      	ldr	r5, [pc, #60]	@ (1001216c <__libc_init_array+0x44>)
1001212e:	42ab      	cmp	r3, r5
10012130:	eba3 0605 	sub.w	r6, r3, r5
10012134:	d007      	beq.n	10012146 <__libc_init_array+0x1e>
10012136:	10b6      	asrs	r6, r6, #2
10012138:	2400      	movs	r4, #0
1001213a:	f855 3b04 	ldr.w	r3, [r5], #4
1001213e:	3401      	adds	r4, #1
10012140:	4798      	blx	r3
10012142:	42a6      	cmp	r6, r4
10012144:	d8f9      	bhi.n	1001213a <__libc_init_array+0x12>
10012146:	f007 f9e7 	bl	10019518 <_init>
1001214a:	4d09      	ldr	r5, [pc, #36]	@ (10012170 <__libc_init_array+0x48>)
1001214c:	4b09      	ldr	r3, [pc, #36]	@ (10012174 <__libc_init_array+0x4c>)
1001214e:	1b5e      	subs	r6, r3, r5
10012150:	42ab      	cmp	r3, r5
10012152:	ea4f 06a6 	mov.w	r6, r6, asr #2
10012156:	d006      	beq.n	10012166 <__libc_init_array+0x3e>
10012158:	2400      	movs	r4, #0
1001215a:	f855 3b04 	ldr.w	r3, [r5], #4
1001215e:	3401      	adds	r4, #1
10012160:	4798      	blx	r3
10012162:	42a6      	cmp	r6, r4
10012164:	d8f9      	bhi.n	1001215a <__libc_init_array+0x32>
10012166:	bd70      	pop	{r4, r5, r6, pc}
10012168:	200006ec 	.word	0x200006ec
1001216c:	200006ec 	.word	0x200006ec
10012170:	200006ec 	.word	0x200006ec
10012174:	200006f4 	.word	0x200006f4

10012178 <__libc_fini_array>:
10012178:	b538      	push	{r3, r4, r5, lr}
1001217a:	4d07      	ldr	r5, [pc, #28]	@ (10012198 <__libc_fini_array+0x20>)
1001217c:	4c07      	ldr	r4, [pc, #28]	@ (1001219c <__libc_fini_array+0x24>)
1001217e:	1b2c      	subs	r4, r5, r4
10012180:	10a4      	asrs	r4, r4, #2
10012182:	d005      	beq.n	10012190 <__libc_fini_array+0x18>
10012184:	3c01      	subs	r4, #1
10012186:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1001218a:	4798      	blx	r3
1001218c:	2c00      	cmp	r4, #0
1001218e:	d1f9      	bne.n	10012184 <__libc_fini_array+0xc>
10012190:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10012194:	f007 b9c6 	b.w	10019524 <_fini>
10012198:	200006f8 	.word	0x200006f8
1001219c:	200006f4 	.word	0x200006f4

100121a0 <__retarget_lock_init_recursive>:
100121a0:	4770      	bx	lr
100121a2:	bf00      	nop

100121a4 <__retarget_lock_close_recursive>:
100121a4:	4770      	bx	lr
100121a6:	bf00      	nop

100121a8 <__retarget_lock_acquire_recursive>:
100121a8:	4770      	bx	lr
100121aa:	bf00      	nop

100121ac <__retarget_lock_release_recursive>:
100121ac:	4770      	bx	lr
100121ae:	bf00      	nop

100121b0 <__locale_mb_cur_max>:
100121b0:	4b01      	ldr	r3, [pc, #4]	@ (100121b8 <__locale_mb_cur_max+0x8>)
100121b2:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
100121b6:	4770      	bx	lr
100121b8:	2000044c 	.word	0x2000044c

100121bc <_localeconv_r>:
100121bc:	4800      	ldr	r0, [pc, #0]	@ (100121c0 <_localeconv_r+0x4>)
100121be:	4770      	bx	lr
100121c0:	2000053c 	.word	0x2000053c

100121c4 <sysconf>:
100121c4:	2808      	cmp	r0, #8
100121c6:	d102      	bne.n	100121ce <sysconf+0xa>
100121c8:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
100121cc:	4770      	bx	lr
100121ce:	b508      	push	{r3, lr}
100121d0:	f7fd fe98 	bl	1000ff04 <__errno>
100121d4:	2316      	movs	r3, #22
100121d6:	6003      	str	r3, [r0, #0]
100121d8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100121dc:	bd08      	pop	{r3, pc}
100121de:	bf00      	nop

100121e0 <printf>:
100121e0:	b40f      	push	{r0, r1, r2, r3}
100121e2:	b500      	push	{lr}
100121e4:	4907      	ldr	r1, [pc, #28]	@ (10012204 <printf+0x24>)
100121e6:	b083      	sub	sp, #12
100121e8:	ab04      	add	r3, sp, #16
100121ea:	6808      	ldr	r0, [r1, #0]
100121ec:	f853 2b04 	ldr.w	r2, [r3], #4
100121f0:	6881      	ldr	r1, [r0, #8]
100121f2:	9301      	str	r3, [sp, #4]
100121f4:	f001 fedc 	bl	10013fb0 <_vfprintf_r>
100121f8:	b003      	add	sp, #12
100121fa:	f85d eb04 	ldr.w	lr, [sp], #4
100121fe:	b004      	add	sp, #16
10012200:	4770      	bx	lr
10012202:	bf00      	nop
10012204:	200005b8 	.word	0x200005b8

10012208 <_puts_r>:
10012208:	b570      	push	{r4, r5, r6, lr}
1001220a:	4605      	mov	r5, r0
1001220c:	b088      	sub	sp, #32
1001220e:	4608      	mov	r0, r1
10012210:	460c      	mov	r4, r1
10012212:	f001 f9f5 	bl	10013600 <strlen>
10012216:	4e21      	ldr	r6, [pc, #132]	@ (1001229c <_puts_r+0x94>)
10012218:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
1001221a:	9005      	str	r0, [sp, #20]
1001221c:	2101      	movs	r1, #1
1001221e:	1843      	adds	r3, r0, r1
10012220:	e9cd 6106 	strd	r6, r1, [sp, #24]
10012224:	a804      	add	r0, sp, #16
10012226:	2102      	movs	r1, #2
10012228:	9404      	str	r4, [sp, #16]
1001222a:	9303      	str	r3, [sp, #12]
1001222c:	68ac      	ldr	r4, [r5, #8]
1001222e:	9001      	str	r0, [sp, #4]
10012230:	9102      	str	r1, [sp, #8]
10012232:	2a00      	cmp	r2, #0
10012234:	d02e      	beq.n	10012294 <_puts_r+0x8c>
10012236:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10012238:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001223c:	07d6      	lsls	r6, r2, #31
1001223e:	d401      	bmi.n	10012244 <_puts_r+0x3c>
10012240:	0598      	lsls	r0, r3, #22
10012242:	d521      	bpl.n	10012288 <_puts_r+0x80>
10012244:	0499      	lsls	r1, r3, #18
10012246:	d406      	bmi.n	10012256 <_puts_r+0x4e>
10012248:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001224a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001224e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10012252:	81a3      	strh	r3, [r4, #12]
10012254:	6662      	str	r2, [r4, #100]	@ 0x64
10012256:	4628      	mov	r0, r5
10012258:	aa01      	add	r2, sp, #4
1001225a:	4621      	mov	r1, r4
1001225c:	f001 fc6a 	bl	10013b34 <__sfvwrite_r>
10012260:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10012262:	2800      	cmp	r0, #0
10012264:	bf0c      	ite	eq
10012266:	250a      	moveq	r5, #10
10012268:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001226c:	07da      	lsls	r2, r3, #31
1001226e:	d402      	bmi.n	10012276 <_puts_r+0x6e>
10012270:	89a3      	ldrh	r3, [r4, #12]
10012272:	059b      	lsls	r3, r3, #22
10012274:	d502      	bpl.n	1001227c <_puts_r+0x74>
10012276:	4628      	mov	r0, r5
10012278:	b008      	add	sp, #32
1001227a:	bd70      	pop	{r4, r5, r6, pc}
1001227c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001227e:	f7ff ff95 	bl	100121ac <__retarget_lock_release_recursive>
10012282:	4628      	mov	r0, r5
10012284:	b008      	add	sp, #32
10012286:	bd70      	pop	{r4, r5, r6, pc}
10012288:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001228a:	f7ff ff8d 	bl	100121a8 <__retarget_lock_acquire_recursive>
1001228e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10012292:	e7d7      	b.n	10012244 <_puts_r+0x3c>
10012294:	4628      	mov	r0, r5
10012296:	f001 f885 	bl	100133a4 <__sinit>
1001229a:	e7cc      	b.n	10012236 <_puts_r+0x2e>
1001229c:	100191b8 	.word	0x100191b8

100122a0 <puts>:
100122a0:	4b02      	ldr	r3, [pc, #8]	@ (100122ac <puts+0xc>)
100122a2:	4601      	mov	r1, r0
100122a4:	6818      	ldr	r0, [r3, #0]
100122a6:	f7ff bfaf 	b.w	10012208 <_puts_r>
100122aa:	bf00      	nop
100122ac:	200005b8 	.word	0x200005b8

100122b0 <__malloc_lock>:
100122b0:	4801      	ldr	r0, [pc, #4]	@ (100122b8 <__malloc_lock+0x8>)
100122b2:	f7ff bf79 	b.w	100121a8 <__retarget_lock_acquire_recursive>
100122b6:	bf00      	nop
100122b8:	20001464 	.word	0x20001464

100122bc <__malloc_unlock>:
100122bc:	4801      	ldr	r0, [pc, #4]	@ (100122c4 <__malloc_unlock+0x8>)
100122be:	f7ff bf75 	b.w	100121ac <__retarget_lock_release_recursive>
100122c2:	bf00      	nop
100122c4:	20001464 	.word	0x20001464

100122c8 <atexit>:
100122c8:	2300      	movs	r3, #0
100122ca:	4601      	mov	r1, r0
100122cc:	461a      	mov	r2, r3
100122ce:	4618      	mov	r0, r3
100122d0:	f004 bd32 	b.w	10016d38 <__register_exitproc>

100122d4 <_wcsrtombs_r>:
100122d4:	b510      	push	{r4, lr}
100122d6:	b082      	sub	sp, #8
100122d8:	9c04      	ldr	r4, [sp, #16]
100122da:	e9cd 3400 	strd	r3, r4, [sp]
100122de:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100122e2:	f005 fbbb 	bl	10017a5c <_wcsnrtombs_r>
100122e6:	b002      	add	sp, #8
100122e8:	bd10      	pop	{r4, pc}
100122ea:	bf00      	nop

100122ec <quorem>:
100122ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100122f0:	6903      	ldr	r3, [r0, #16]
100122f2:	690c      	ldr	r4, [r1, #16]
100122f4:	42a3      	cmp	r3, r4
100122f6:	b083      	sub	sp, #12
100122f8:	f2c0 808a 	blt.w	10012410 <quorem+0x124>
100122fc:	3c01      	subs	r4, #1
100122fe:	f101 0514 	add.w	r5, r1, #20
10012302:	f100 0814 	add.w	r8, r0, #20
10012306:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
1001230a:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
1001230e:	3301      	adds	r3, #1
10012310:	429a      	cmp	r2, r3
10012312:	468e      	mov	lr, r1
10012314:	4681      	mov	r9, r0
10012316:	ea4f 0184 	mov.w	r1, r4, lsl #2
1001231a:	eb05 0784 	add.w	r7, r5, r4, lsl #2
1001231e:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
10012322:	fbb2 f6f3 	udiv	r6, r2, r3
10012326:	d33a      	bcc.n	1001239e <quorem+0xb2>
10012328:	e9cd 1500 	strd	r1, r5, [sp]
1001232c:	2200      	movs	r2, #0
1001232e:	46ac      	mov	ip, r5
10012330:	4640      	mov	r0, r8
10012332:	4613      	mov	r3, r2
10012334:	f85c 1b04 	ldr.w	r1, [ip], #4
10012338:	6805      	ldr	r5, [r0, #0]
1001233a:	fa1f fb81 	uxth.w	fp, r1
1001233e:	fb06 220b 	mla	r2, r6, fp, r2
10012342:	0c09      	lsrs	r1, r1, #16
10012344:	ea4f 4b12 	mov.w	fp, r2, lsr #16
10012348:	fb06 bb01 	mla	fp, r6, r1, fp
1001234c:	b292      	uxth	r2, r2
1001234e:	b2a9      	uxth	r1, r5
10012350:	1a89      	subs	r1, r1, r2
10012352:	4419      	add	r1, r3
10012354:	fa1f f38b 	uxth.w	r3, fp
10012358:	ebc3 4321 	rsb	r3, r3, r1, asr #16
1001235c:	eb03 4315 	add.w	r3, r3, r5, lsr #16
10012360:	b289      	uxth	r1, r1
10012362:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
10012366:	4567      	cmp	r7, ip
10012368:	f840 1b04 	str.w	r1, [r0], #4
1001236c:	ea4f 421b 	mov.w	r2, fp, lsr #16
10012370:	ea4f 4323 	mov.w	r3, r3, asr #16
10012374:	d2de      	bcs.n	10012334 <quorem+0x48>
10012376:	e9dd 1500 	ldrd	r1, r5, [sp]
1001237a:	f858 3001 	ldr.w	r3, [r8, r1]
1001237e:	b973      	cbnz	r3, 1001239e <quorem+0xb2>
10012380:	f1aa 0a04 	sub.w	sl, sl, #4
10012384:	45d0      	cmp	r8, sl
10012386:	d304      	bcc.n	10012392 <quorem+0xa6>
10012388:	e007      	b.n	1001239a <quorem+0xae>
1001238a:	45d0      	cmp	r8, sl
1001238c:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10012390:	d203      	bcs.n	1001239a <quorem+0xae>
10012392:	f85a 3904 	ldr.w	r3, [sl], #-4
10012396:	2b00      	cmp	r3, #0
10012398:	d0f7      	beq.n	1001238a <quorem+0x9e>
1001239a:	f8c9 4010 	str.w	r4, [r9, #16]
1001239e:	4671      	mov	r1, lr
100123a0:	4648      	mov	r0, r9
100123a2:	f005 f975 	bl	10017690 <__mcmp>
100123a6:	2800      	cmp	r0, #0
100123a8:	db2e      	blt.n	10012408 <quorem+0x11c>
100123aa:	4641      	mov	r1, r8
100123ac:	2200      	movs	r2, #0
100123ae:	f855 0b04 	ldr.w	r0, [r5], #4
100123b2:	f8d1 c000 	ldr.w	ip, [r1]
100123b6:	fa1f fe80 	uxth.w	lr, r0
100123ba:	fa1f f38c 	uxth.w	r3, ip
100123be:	eba3 030e 	sub.w	r3, r3, lr
100123c2:	4413      	add	r3, r2
100123c4:	0c02      	lsrs	r2, r0, #16
100123c6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
100123ca:	eb02 421c 	add.w	r2, r2, ip, lsr #16
100123ce:	b29b      	uxth	r3, r3
100123d0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
100123d4:	42af      	cmp	r7, r5
100123d6:	f841 3b04 	str.w	r3, [r1], #4
100123da:	ea4f 4222 	mov.w	r2, r2, asr #16
100123de:	d2e6      	bcs.n	100123ae <quorem+0xc2>
100123e0:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
100123e4:	eb08 0384 	add.w	r3, r8, r4, lsl #2
100123e8:	b96a      	cbnz	r2, 10012406 <quorem+0x11a>
100123ea:	3b04      	subs	r3, #4
100123ec:	4598      	cmp	r8, r3
100123ee:	d304      	bcc.n	100123fa <quorem+0x10e>
100123f0:	e007      	b.n	10012402 <quorem+0x116>
100123f2:	4598      	cmp	r8, r3
100123f4:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
100123f8:	d203      	bcs.n	10012402 <quorem+0x116>
100123fa:	f853 2904 	ldr.w	r2, [r3], #-4
100123fe:	2a00      	cmp	r2, #0
10012400:	d0f7      	beq.n	100123f2 <quorem+0x106>
10012402:	f8c9 4010 	str.w	r4, [r9, #16]
10012406:	3601      	adds	r6, #1
10012408:	4630      	mov	r0, r6
1001240a:	b003      	add	sp, #12
1001240c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10012410:	2000      	movs	r0, #0
10012412:	b003      	add	sp, #12
10012414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

10012418 <_dtoa_r>:
10012418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001241c:	6b81      	ldr	r1, [r0, #56]	@ 0x38
1001241e:	b09d      	sub	sp, #116	@ 0x74
10012420:	4616      	mov	r6, r2
10012422:	461f      	mov	r7, r3
10012424:	e9cd 6704 	strd	r6, r7, [sp, #16]
10012428:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001242a:	9002      	str	r0, [sp, #8]
1001242c:	b149      	cbz	r1, 10012442 <_dtoa_r+0x2a>
1001242e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
10012430:	604a      	str	r2, [r1, #4]
10012432:	2301      	movs	r3, #1
10012434:	4093      	lsls	r3, r2
10012436:	4604      	mov	r4, r0
10012438:	608b      	str	r3, [r1, #8]
1001243a:	f004 fec7 	bl	100171cc <_Bfree>
1001243e:	2300      	movs	r3, #0
10012440:	63a3      	str	r3, [r4, #56]	@ 0x38
10012442:	f1b7 0900 	subs.w	r9, r7, #0
10012446:	bfb4      	ite	lt
10012448:	2301      	movlt	r3, #1
1001244a:	2300      	movge	r3, #0
1001244c:	602b      	str	r3, [r5, #0]
1001244e:	4b76      	ldr	r3, [pc, #472]	@ (10012628 <_dtoa_r+0x210>)
10012450:	bfbc      	itt	lt
10012452:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
10012456:	f8cd 9014 	strlt.w	r9, [sp, #20]
1001245a:	ea33 0309 	bics.w	r3, r3, r9
1001245e:	f000 80aa 	beq.w	100125b6 <_dtoa_r+0x19e>
10012462:	ed9d 7b04 	vldr	d7, [sp, #16]
10012466:	2200      	movs	r2, #0
10012468:	ec51 0b17 	vmov	r0, r1, d7
1001246c:	2300      	movs	r3, #0
1001246e:	ed8d 7b06 	vstr	d7, [sp, #24]
10012472:	f006 fb2d 	bl	10018ad0 <__aeabi_dcmpeq>
10012476:	4680      	mov	r8, r0
10012478:	b168      	cbz	r0, 10012496 <_dtoa_r+0x7e>
1001247a:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
1001247c:	2301      	movs	r3, #1
1001247e:	6013      	str	r3, [r2, #0]
10012480:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10012482:	b113      	cbz	r3, 1001248a <_dtoa_r+0x72>
10012484:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10012486:	4b69      	ldr	r3, [pc, #420]	@ (1001262c <_dtoa_r+0x214>)
10012488:	6013      	str	r3, [r2, #0]
1001248a:	4b69      	ldr	r3, [pc, #420]	@ (10012630 <_dtoa_r+0x218>)
1001248c:	9303      	str	r3, [sp, #12]
1001248e:	9803      	ldr	r0, [sp, #12]
10012490:	b01d      	add	sp, #116	@ 0x74
10012492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10012496:	ab1a      	add	r3, sp, #104	@ 0x68
10012498:	9301      	str	r3, [sp, #4]
1001249a:	ab1b      	add	r3, sp, #108	@ 0x6c
1001249c:	9300      	str	r3, [sp, #0]
1001249e:	9802      	ldr	r0, [sp, #8]
100124a0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
100124a4:	f005 f9c8 	bl	10017838 <__d2b>
100124a8:	ea5f 5519 	movs.w	r5, r9, lsr #20
100124ac:	4682      	mov	sl, r0
100124ae:	f040 8098 	bne.w	100125e2 <_dtoa_r+0x1ca>
100124b2:	e9dd 851a 	ldrd	r8, r5, [sp, #104]	@ 0x68
100124b6:	4445      	add	r5, r8
100124b8:	f205 4332 	addw	r3, r5, #1074	@ 0x432
100124bc:	2b20      	cmp	r3, #32
100124be:	f340 8381 	ble.w	10012bc4 <_dtoa_r+0x7ac>
100124c2:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
100124c6:	fa09 f903 	lsl.w	r9, r9, r3
100124ca:	f205 4312 	addw	r3, r5, #1042	@ 0x412
100124ce:	fa26 f303 	lsr.w	r3, r6, r3
100124d2:	ea49 0003 	orr.w	r0, r9, r3
100124d6:	f006 f819 	bl	1001850c <__aeabi_ui2d>
100124da:	2301      	movs	r3, #1
100124dc:	3d01      	subs	r5, #1
100124de:	930f      	str	r3, [sp, #60]	@ 0x3c
100124e0:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
100124e4:	4b53      	ldr	r3, [pc, #332]	@ (10012634 <_dtoa_r+0x21c>)
100124e6:	2200      	movs	r2, #0
100124e8:	f005 fed2 	bl	10018290 <__aeabi_dsub>
100124ec:	a348      	add	r3, pc, #288	@ (adr r3, 10012610 <_dtoa_r+0x1f8>)
100124ee:	e9d3 2300 	ldrd	r2, r3, [r3]
100124f2:	f006 f885 	bl	10018600 <__aeabi_dmul>
100124f6:	a348      	add	r3, pc, #288	@ (adr r3, 10012618 <_dtoa_r+0x200>)
100124f8:	e9d3 2300 	ldrd	r2, r3, [r3]
100124fc:	f005 feca 	bl	10018294 <__adddf3>
10012500:	4606      	mov	r6, r0
10012502:	4628      	mov	r0, r5
10012504:	460f      	mov	r7, r1
10012506:	f006 f811 	bl	1001852c <__aeabi_i2d>
1001250a:	a345      	add	r3, pc, #276	@ (adr r3, 10012620 <_dtoa_r+0x208>)
1001250c:	e9d3 2300 	ldrd	r2, r3, [r3]
10012510:	f006 f876 	bl	10018600 <__aeabi_dmul>
10012514:	4602      	mov	r2, r0
10012516:	460b      	mov	r3, r1
10012518:	4630      	mov	r0, r6
1001251a:	4639      	mov	r1, r7
1001251c:	f005 feba 	bl	10018294 <__adddf3>
10012520:	4606      	mov	r6, r0
10012522:	460f      	mov	r7, r1
10012524:	f006 fb1c 	bl	10018b60 <__aeabi_d2iz>
10012528:	2200      	movs	r2, #0
1001252a:	4683      	mov	fp, r0
1001252c:	2300      	movs	r3, #0
1001252e:	4630      	mov	r0, r6
10012530:	4639      	mov	r1, r7
10012532:	f006 fad7 	bl	10018ae4 <__aeabi_dcmplt>
10012536:	2800      	cmp	r0, #0
10012538:	f040 8318 	bne.w	10012b6c <_dtoa_r+0x754>
1001253c:	eba8 0805 	sub.w	r8, r8, r5
10012540:	f1bb 0f16 	cmp.w	fp, #22
10012544:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
10012548:	f200 818a 	bhi.w	10012860 <_dtoa_r+0x448>
1001254c:	4d3a      	ldr	r5, [pc, #232]	@ (10012638 <_dtoa_r+0x220>)
1001254e:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
10012552:	e9d5 2300 	ldrd	r2, r3, [r5]
10012556:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1001255a:	f006 fac3 	bl	10018ae4 <__aeabi_dcmplt>
1001255e:	2800      	cmp	r0, #0
10012560:	d070      	beq.n	10012644 <_dtoa_r+0x22c>
10012562:	2300      	movs	r3, #0
10012564:	2c00      	cmp	r4, #0
10012566:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
1001256a:	930e      	str	r3, [sp, #56]	@ 0x38
1001256c:	f2c0 817d 	blt.w	1001286a <_dtoa_r+0x452>
10012570:	2300      	movs	r3, #0
10012572:	9309      	str	r3, [sp, #36]	@ 0x24
10012574:	f1bb 0f00 	cmp.w	fp, #0
10012578:	da6a      	bge.n	10012650 <_dtoa_r+0x238>
1001257a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001257c:	eba3 030b 	sub.w	r3, r3, fp
10012580:	9309      	str	r3, [sp, #36]	@ 0x24
10012582:	f1cb 0300 	rsb	r3, fp, #0
10012586:	e9cd b30c 	strd	fp, r3, [sp, #48]	@ 0x30
1001258a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
1001258c:	2b09      	cmp	r3, #9
1001258e:	f04f 0b00 	mov.w	fp, #0
10012592:	d865      	bhi.n	10012660 <_dtoa_r+0x248>
10012594:	2b05      	cmp	r3, #5
10012596:	f340 831a 	ble.w	10012bce <_dtoa_r+0x7b6>
1001259a:	3b04      	subs	r3, #4
1001259c:	9326      	str	r3, [sp, #152]	@ 0x98
1001259e:	2500      	movs	r5, #0
100125a0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
100125a2:	3b02      	subs	r3, #2
100125a4:	2b03      	cmp	r3, #3
100125a6:	f200 8621 	bhi.w	100131ec <_dtoa_r+0xdd4>
100125aa:	e8df f013 	tbh	[pc, r3, lsl #1]
100125ae:	045e      	.short	0x045e
100125b0:	0452045b 	.word	0x0452045b
100125b4:	0436      	.short	0x0436
100125b6:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
100125b8:	f3c9 0913 	ubfx	r9, r9, #0, #20
100125bc:	f242 730f 	movw	r3, #9999	@ 0x270f
100125c0:	ea59 0906 	orrs.w	r9, r9, r6
100125c4:	6013      	str	r3, [r2, #0]
100125c6:	d11c      	bne.n	10012602 <_dtoa_r+0x1ea>
100125c8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
100125ca:	2b00      	cmp	r3, #0
100125cc:	f000 8629 	beq.w	10013222 <_dtoa_r+0xe0a>
100125d0:	4b1a      	ldr	r3, [pc, #104]	@ (1001263c <_dtoa_r+0x224>)
100125d2:	9303      	str	r3, [sp, #12]
100125d4:	3308      	adds	r3, #8
100125d6:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100125d8:	9803      	ldr	r0, [sp, #12]
100125da:	6013      	str	r3, [r2, #0]
100125dc:	b01d      	add	sp, #116	@ 0x74
100125de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100125e2:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
100125e6:	f3c2 0313 	ubfx	r3, r2, #0, #20
100125ea:	4608      	mov	r0, r1
100125ec:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
100125f0:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
100125f4:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
100125f8:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
100125fc:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
10012600:	e770      	b.n	100124e4 <_dtoa_r+0xcc>
10012602:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10012604:	2b00      	cmp	r3, #0
10012606:	f040 83e5 	bne.w	10012dd4 <_dtoa_r+0x9bc>
1001260a:	4b0d      	ldr	r3, [pc, #52]	@ (10012640 <_dtoa_r+0x228>)
1001260c:	9303      	str	r3, [sp, #12]
1001260e:	e73e      	b.n	1001248e <_dtoa_r+0x76>
10012610:	636f4361 	.word	0x636f4361
10012614:	3fd287a7 	.word	0x3fd287a7
10012618:	8b60c8b3 	.word	0x8b60c8b3
1001261c:	3fc68a28 	.word	0x3fc68a28
10012620:	509f79fb 	.word	0x509f79fb
10012624:	3fd34413 	.word	0x3fd34413
10012628:	7ff00000 	.word	0x7ff00000
1001262c:	10019151 	.word	0x10019151
10012630:	10019150 	.word	0x10019150
10012634:	3ff80000 	.word	0x3ff80000
10012638:	10019450 	.word	0x10019450
1001263c:	100191bc 	.word	0x100191bc
10012640:	100191c8 	.word	0x100191c8
10012644:	f1b8 0f00 	cmp.w	r8, #0
10012648:	f340 845e 	ble.w	10012f08 <_dtoa_r+0xaf0>
1001264c:	900e      	str	r0, [sp, #56]	@ 0x38
1001264e:	9009      	str	r0, [sp, #36]	@ 0x24
10012650:	2300      	movs	r3, #0
10012652:	930d      	str	r3, [sp, #52]	@ 0x34
10012654:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10012656:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001265a:	2b09      	cmp	r3, #9
1001265c:	445c      	add	r4, fp
1001265e:	d999      	bls.n	10012594 <_dtoa_r+0x17c>
10012660:	2300      	movs	r3, #0
10012662:	e9cd 3326 	strd	r3, r3, [sp, #152]	@ 0x98
10012666:	2501      	movs	r5, #1
10012668:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001266c:	950a      	str	r5, [sp, #40]	@ 0x28
1001266e:	9308      	str	r3, [sp, #32]
10012670:	9b02      	ldr	r3, [sp, #8]
10012672:	2100      	movs	r1, #0
10012674:	63d9      	str	r1, [r3, #60]	@ 0x3c
10012676:	9b08      	ldr	r3, [sp, #32]
10012678:	9316      	str	r3, [sp, #88]	@ 0x58
1001267a:	9802      	ldr	r0, [sp, #8]
1001267c:	f004 fd80 	bl	10017180 <_Balloc>
10012680:	9003      	str	r0, [sp, #12]
10012682:	2800      	cmp	r0, #0
10012684:	f000 85bb 	beq.w	100131fe <_dtoa_r+0xde6>
10012688:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
1001268c:	639a      	str	r2, [r3, #56]	@ 0x38
1001268e:	9b08      	ldr	r3, [sp, #32]
10012690:	2b0e      	cmp	r3, #14
10012692:	f200 8114 	bhi.w	100128be <_dtoa_r+0x4a6>
10012696:	2d00      	cmp	r5, #0
10012698:	f000 8111 	beq.w	100128be <_dtoa_r+0x4a6>
1001269c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001269e:	2a00      	cmp	r2, #0
100126a0:	f340 8439 	ble.w	10012f16 <_dtoa_r+0xafe>
100126a4:	4db1      	ldr	r5, [pc, #708]	@ (1001296c <_dtoa_r+0x554>)
100126a6:	f002 030f 	and.w	r3, r2, #15
100126aa:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
100126ae:	1115      	asrs	r5, r2, #4
100126b0:	05d2      	lsls	r2, r2, #23
100126b2:	e9d3 8900 	ldrd	r8, r9, [r3]
100126b6:	f140 83f9 	bpl.w	10012eac <_dtoa_r+0xa94>
100126ba:	4bad      	ldr	r3, [pc, #692]	@ (10012970 <_dtoa_r+0x558>)
100126bc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
100126c0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
100126c4:	f006 f8c6 	bl	10018854 <__aeabi_ddiv>
100126c8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
100126cc:	f005 050f 	and.w	r5, r5, #15
100126d0:	2703      	movs	r7, #3
100126d2:	b17d      	cbz	r5, 100126f4 <_dtoa_r+0x2dc>
100126d4:	4ea6      	ldr	r6, [pc, #664]	@ (10012970 <_dtoa_r+0x558>)
100126d6:	07eb      	lsls	r3, r5, #31
100126d8:	d508      	bpl.n	100126ec <_dtoa_r+0x2d4>
100126da:	4640      	mov	r0, r8
100126dc:	4649      	mov	r1, r9
100126de:	e9d6 2300 	ldrd	r2, r3, [r6]
100126e2:	f005 ff8d 	bl	10018600 <__aeabi_dmul>
100126e6:	3701      	adds	r7, #1
100126e8:	4680      	mov	r8, r0
100126ea:	4689      	mov	r9, r1
100126ec:	106d      	asrs	r5, r5, #1
100126ee:	f106 0608 	add.w	r6, r6, #8
100126f2:	d1f0      	bne.n	100126d6 <_dtoa_r+0x2be>
100126f4:	4642      	mov	r2, r8
100126f6:	464b      	mov	r3, r9
100126f8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
100126fc:	f006 f8aa 	bl	10018854 <__aeabi_ddiv>
10012700:	4680      	mov	r8, r0
10012702:	4689      	mov	r9, r1
10012704:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012706:	b143      	cbz	r3, 1001271a <_dtoa_r+0x302>
10012708:	4b9a      	ldr	r3, [pc, #616]	@ (10012974 <_dtoa_r+0x55c>)
1001270a:	2200      	movs	r2, #0
1001270c:	4640      	mov	r0, r8
1001270e:	4649      	mov	r1, r9
10012710:	f006 f9e8 	bl	10018ae4 <__aeabi_dcmplt>
10012714:	2800      	cmp	r0, #0
10012716:	f040 84f0 	bne.w	100130fa <_dtoa_r+0xce2>
1001271a:	4638      	mov	r0, r7
1001271c:	f005 ff06 	bl	1001852c <__aeabi_i2d>
10012720:	4642      	mov	r2, r8
10012722:	464b      	mov	r3, r9
10012724:	f005 ff6c 	bl	10018600 <__aeabi_dmul>
10012728:	4b93      	ldr	r3, [pc, #588]	@ (10012978 <_dtoa_r+0x560>)
1001272a:	2200      	movs	r2, #0
1001272c:	f005 fdb2 	bl	10018294 <__adddf3>
10012730:	9b08      	ldr	r3, [sp, #32]
10012732:	4606      	mov	r6, r0
10012734:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10012738:	2b00      	cmp	r3, #0
1001273a:	f000 80a9 	beq.w	10012890 <_dtoa_r+0x478>
1001273e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10012740:	9317      	str	r3, [sp, #92]	@ 0x5c
10012742:	9b08      	ldr	r3, [sp, #32]
10012744:	9310      	str	r3, [sp, #64]	@ 0x40
10012746:	9b03      	ldr	r3, [sp, #12]
10012748:	4d88      	ldr	r5, [pc, #544]	@ (1001296c <_dtoa_r+0x554>)
1001274a:	4649      	mov	r1, r9
1001274c:	4640      	mov	r0, r8
1001274e:	e9cd 6712 	strd	r6, r7, [sp, #72]	@ 0x48
10012752:	1c5e      	adds	r6, r3, #1
10012754:	f006 fa04 	bl	10018b60 <__aeabi_d2iz>
10012758:	9910      	ldr	r1, [sp, #64]	@ 0x40
1001275a:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
1001275e:	ed13 7b02 	vldr	d7, [r3, #-8]
10012762:	4607      	mov	r7, r0
10012764:	ed8d 7b14 	vstr	d7, [sp, #80]	@ 0x50
10012768:	f005 fee0 	bl	1001852c <__aeabi_i2d>
1001276c:	4602      	mov	r2, r0
1001276e:	460b      	mov	r3, r1
10012770:	4640      	mov	r0, r8
10012772:	4649      	mov	r1, r9
10012774:	f005 fd8c 	bl	10018290 <__aeabi_dsub>
10012778:	4689      	mov	r9, r1
1001277a:	990a      	ldr	r1, [sp, #40]	@ 0x28
1001277c:	3730      	adds	r7, #48	@ 0x30
1001277e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
10012782:	4680      	mov	r8, r0
10012784:	b2ff      	uxtb	r7, r7
10012786:	2900      	cmp	r1, #0
10012788:	f000 8452 	beq.w	10013030 <_dtoa_r+0xc18>
1001278c:	497b      	ldr	r1, [pc, #492]	@ (1001297c <_dtoa_r+0x564>)
1001278e:	2000      	movs	r0, #0
10012790:	f006 f860 	bl	10018854 <__aeabi_ddiv>
10012794:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
10012798:	f005 fd7a 	bl	10018290 <__aeabi_dsub>
1001279c:	9d03      	ldr	r5, [sp, #12]
1001279e:	4602      	mov	r2, r0
100127a0:	460b      	mov	r3, r1
100127a2:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
100127a6:	702f      	strb	r7, [r5, #0]
100127a8:	4642      	mov	r2, r8
100127aa:	464b      	mov	r3, r9
100127ac:	f006 f9b8 	bl	10018b20 <__aeabi_dcmpgt>
100127b0:	2800      	cmp	r0, #0
100127b2:	f040 8496 	bne.w	100130e2 <_dtoa_r+0xcca>
100127b6:	e9cd b418 	strd	fp, r4, [sp, #96]	@ 0x60
100127ba:	f8cd a050 	str.w	sl, [sp, #80]	@ 0x50
100127be:	9d10      	ldr	r5, [sp, #64]	@ 0x40
100127c0:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	@ 0x48
100127c4:	2700      	movs	r7, #0
100127c6:	e02a      	b.n	1001281e <_dtoa_r+0x406>
100127c8:	3701      	adds	r7, #1
100127ca:	42af      	cmp	r7, r5
100127cc:	f280 84dd 	bge.w	1001318a <_dtoa_r+0xd72>
100127d0:	4b6b      	ldr	r3, [pc, #428]	@ (10012980 <_dtoa_r+0x568>)
100127d2:	4650      	mov	r0, sl
100127d4:	4659      	mov	r1, fp
100127d6:	2200      	movs	r2, #0
100127d8:	f005 ff12 	bl	10018600 <__aeabi_dmul>
100127dc:	4b68      	ldr	r3, [pc, #416]	@ (10012980 <_dtoa_r+0x568>)
100127de:	2200      	movs	r2, #0
100127e0:	4682      	mov	sl, r0
100127e2:	468b      	mov	fp, r1
100127e4:	4640      	mov	r0, r8
100127e6:	4649      	mov	r1, r9
100127e8:	f005 ff0a 	bl	10018600 <__aeabi_dmul>
100127ec:	4689      	mov	r9, r1
100127ee:	4680      	mov	r8, r0
100127f0:	f006 f9b6 	bl	10018b60 <__aeabi_d2iz>
100127f4:	4604      	mov	r4, r0
100127f6:	f005 fe99 	bl	1001852c <__aeabi_i2d>
100127fa:	4602      	mov	r2, r0
100127fc:	460b      	mov	r3, r1
100127fe:	4640      	mov	r0, r8
10012800:	4649      	mov	r1, r9
10012802:	f005 fd45 	bl	10018290 <__aeabi_dsub>
10012806:	3430      	adds	r4, #48	@ 0x30
10012808:	f806 4b01 	strb.w	r4, [r6], #1
1001280c:	4652      	mov	r2, sl
1001280e:	465b      	mov	r3, fp
10012810:	4680      	mov	r8, r0
10012812:	4689      	mov	r9, r1
10012814:	f006 f966 	bl	10018ae4 <__aeabi_dcmplt>
10012818:	2800      	cmp	r0, #0
1001281a:	f040 84b3 	bne.w	10013184 <_dtoa_r+0xd6c>
1001281e:	4642      	mov	r2, r8
10012820:	464b      	mov	r3, r9
10012822:	4954      	ldr	r1, [pc, #336]	@ (10012974 <_dtoa_r+0x55c>)
10012824:	2000      	movs	r0, #0
10012826:	f005 fd33 	bl	10018290 <__aeabi_dsub>
1001282a:	4652      	mov	r2, sl
1001282c:	465b      	mov	r3, fp
1001282e:	f006 f959 	bl	10018ae4 <__aeabi_dcmplt>
10012832:	2800      	cmp	r0, #0
10012834:	d0c8      	beq.n	100127c8 <_dtoa_r+0x3b0>
10012836:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10012838:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
1001283c:	9a03      	ldr	r2, [sp, #12]
1001283e:	4637      	mov	r7, r6
10012840:	f103 0801 	add.w	r8, r3, #1
10012844:	e002      	b.n	1001284c <_dtoa_r+0x434>
10012846:	4297      	cmp	r7, r2
10012848:	f000 847b 	beq.w	10013142 <_dtoa_r+0xd2a>
1001284c:	463e      	mov	r6, r7
1001284e:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
10012852:	2b39      	cmp	r3, #57	@ 0x39
10012854:	d0f7      	beq.n	10012846 <_dtoa_r+0x42e>
10012856:	3301      	adds	r3, #1
10012858:	b2db      	uxtb	r3, r3
1001285a:	703b      	strb	r3, [r7, #0]
1001285c:	4645      	mov	r5, r8
1001285e:	e174      	b.n	10012b4a <_dtoa_r+0x732>
10012860:	2301      	movs	r3, #1
10012862:	2c00      	cmp	r4, #0
10012864:	930e      	str	r3, [sp, #56]	@ 0x38
10012866:	f6bf ae83 	bge.w	10012570 <_dtoa_r+0x158>
1001286a:	f1c8 0301 	rsb	r3, r8, #1
1001286e:	9309      	str	r3, [sp, #36]	@ 0x24
10012870:	2400      	movs	r4, #0
10012872:	e67f      	b.n	10012574 <_dtoa_r+0x15c>
10012874:	4638      	mov	r0, r7
10012876:	f005 fe59 	bl	1001852c <__aeabi_i2d>
1001287a:	4642      	mov	r2, r8
1001287c:	464b      	mov	r3, r9
1001287e:	f005 febf 	bl	10018600 <__aeabi_dmul>
10012882:	4b3d      	ldr	r3, [pc, #244]	@ (10012978 <_dtoa_r+0x560>)
10012884:	2200      	movs	r2, #0
10012886:	f005 fd05 	bl	10018294 <__adddf3>
1001288a:	4606      	mov	r6, r0
1001288c:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10012890:	4b3c      	ldr	r3, [pc, #240]	@ (10012984 <_dtoa_r+0x56c>)
10012892:	4640      	mov	r0, r8
10012894:	4649      	mov	r1, r9
10012896:	2200      	movs	r2, #0
10012898:	f005 fcfa 	bl	10018290 <__aeabi_dsub>
1001289c:	4632      	mov	r2, r6
1001289e:	463b      	mov	r3, r7
100128a0:	4680      	mov	r8, r0
100128a2:	4689      	mov	r9, r1
100128a4:	f006 f93c 	bl	10018b20 <__aeabi_dcmpgt>
100128a8:	2800      	cmp	r0, #0
100128aa:	f040 8459 	bne.w	10013160 <_dtoa_r+0xd48>
100128ae:	4640      	mov	r0, r8
100128b0:	4649      	mov	r1, r9
100128b2:	4632      	mov	r2, r6
100128b4:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
100128b8:	f006 f914 	bl	10018ae4 <__aeabi_dcmplt>
100128bc:	bb28      	cbnz	r0, 1001290a <_dtoa_r+0x4f2>
100128be:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
100128c0:	2b00      	cmp	r3, #0
100128c2:	f2c0 8091 	blt.w	100129e8 <_dtoa_r+0x5d0>
100128c6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
100128c8:	2a0e      	cmp	r2, #14
100128ca:	f300 808d 	bgt.w	100129e8 <_dtoa_r+0x5d0>
100128ce:	4d27      	ldr	r5, [pc, #156]	@ (1001296c <_dtoa_r+0x554>)
100128d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100128d2:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
100128d6:	ed95 7b00 	vldr	d7, [r5]
100128da:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
100128dc:	2b00      	cmp	r3, #0
100128de:	ed8d 7b04 	vstr	d7, [sp, #16]
100128e2:	da19      	bge.n	10012918 <_dtoa_r+0x500>
100128e4:	9b08      	ldr	r3, [sp, #32]
100128e6:	2b00      	cmp	r3, #0
100128e8:	dc16      	bgt.n	10012918 <_dtoa_r+0x500>
100128ea:	d10e      	bne.n	1001290a <_dtoa_r+0x4f2>
100128ec:	4b25      	ldr	r3, [pc, #148]	@ (10012984 <_dtoa_r+0x56c>)
100128ee:	2200      	movs	r2, #0
100128f0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
100128f4:	f005 fe84 	bl	10018600 <__aeabi_dmul>
100128f8:	4602      	mov	r2, r0
100128fa:	460b      	mov	r3, r1
100128fc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10012900:	f006 f8fa 	bl	10018af8 <__aeabi_dcmple>
10012904:	2800      	cmp	r0, #0
10012906:	f000 842b 	beq.w	10013160 <_dtoa_r+0xd48>
1001290a:	f04f 0900 	mov.w	r9, #0
1001290e:	9e03      	ldr	r6, [sp, #12]
10012910:	464f      	mov	r7, r9
10012912:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10012914:	43dd      	mvns	r5, r3
10012916:	e224      	b.n	10012d62 <_dtoa_r+0x94a>
10012918:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001291c:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10012920:	4622      	mov	r2, r4
10012922:	462b      	mov	r3, r5
10012924:	4640      	mov	r0, r8
10012926:	4649      	mov	r1, r9
10012928:	f005 ff94 	bl	10018854 <__aeabi_ddiv>
1001292c:	f006 f918 	bl	10018b60 <__aeabi_d2iz>
10012930:	4606      	mov	r6, r0
10012932:	f005 fdfb 	bl	1001852c <__aeabi_i2d>
10012936:	4622      	mov	r2, r4
10012938:	462b      	mov	r3, r5
1001293a:	f005 fe61 	bl	10018600 <__aeabi_dmul>
1001293e:	9f03      	ldr	r7, [sp, #12]
10012940:	460b      	mov	r3, r1
10012942:	4602      	mov	r2, r0
10012944:	4649      	mov	r1, r9
10012946:	4640      	mov	r0, r8
10012948:	f005 fca2 	bl	10018290 <__aeabi_dsub>
1001294c:	f106 0330 	add.w	r3, r6, #48	@ 0x30
10012950:	f807 3b01 	strb.w	r3, [r7], #1
10012954:	9b08      	ldr	r3, [sp, #32]
10012956:	2b01      	cmp	r3, #1
10012958:	f000 8311 	beq.w	10012f7e <_dtoa_r+0xb66>
1001295c:	2501      	movs	r5, #1
1001295e:	f8cd a018 	str.w	sl, [sp, #24]
10012962:	4699      	mov	r9, r3
10012964:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
10012968:	46a8      	mov	r8, r5
1001296a:	e02b      	b.n	100129c4 <_dtoa_r+0x5ac>
1001296c:	10019450 	.word	0x10019450
10012970:	10019428 	.word	0x10019428
10012974:	3ff00000 	.word	0x3ff00000
10012978:	401c0000 	.word	0x401c0000
1001297c:	3fe00000 	.word	0x3fe00000
10012980:	40240000 	.word	0x40240000
10012984:	40140000 	.word	0x40140000
10012988:	4652      	mov	r2, sl
1001298a:	465b      	mov	r3, fp
1001298c:	4620      	mov	r0, r4
1001298e:	4629      	mov	r1, r5
10012990:	f005 ff60 	bl	10018854 <__aeabi_ddiv>
10012994:	f006 f8e4 	bl	10018b60 <__aeabi_d2iz>
10012998:	4606      	mov	r6, r0
1001299a:	f005 fdc7 	bl	1001852c <__aeabi_i2d>
1001299e:	4652      	mov	r2, sl
100129a0:	465b      	mov	r3, fp
100129a2:	f005 fe2d 	bl	10018600 <__aeabi_dmul>
100129a6:	f108 0801 	add.w	r8, r8, #1
100129aa:	460b      	mov	r3, r1
100129ac:	4602      	mov	r2, r0
100129ae:	4629      	mov	r1, r5
100129b0:	4620      	mov	r0, r4
100129b2:	f005 fc6d 	bl	10018290 <__aeabi_dsub>
100129b6:	f106 0330 	add.w	r3, r6, #48	@ 0x30
100129ba:	45c8      	cmp	r8, r9
100129bc:	f807 3b01 	strb.w	r3, [r7], #1
100129c0:	f000 82db 	beq.w	10012f7a <_dtoa_r+0xb62>
100129c4:	4bb9      	ldr	r3, [pc, #740]	@ (10012cac <_dtoa_r+0x894>)
100129c6:	2200      	movs	r2, #0
100129c8:	f005 fe1a 	bl	10018600 <__aeabi_dmul>
100129cc:	2200      	movs	r2, #0
100129ce:	2300      	movs	r3, #0
100129d0:	4604      	mov	r4, r0
100129d2:	460d      	mov	r5, r1
100129d4:	f006 f87c 	bl	10018ad0 <__aeabi_dcmpeq>
100129d8:	2800      	cmp	r0, #0
100129da:	d0d5      	beq.n	10012988 <_dtoa_r+0x570>
100129dc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100129de:	f8dd a018 	ldr.w	sl, [sp, #24]
100129e2:	3501      	adds	r5, #1
100129e4:	463e      	mov	r6, r7
100129e6:	e0b0      	b.n	10012b4a <_dtoa_r+0x732>
100129e8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100129ea:	2a00      	cmp	r2, #0
100129ec:	f040 80d2 	bne.w	10012b94 <_dtoa_r+0x77c>
100129f0:	2300      	movs	r3, #0
100129f2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
100129f4:	9e09      	ldr	r6, [sp, #36]	@ 0x24
100129f6:	930a      	str	r3, [sp, #40]	@ 0x28
100129f8:	461f      	mov	r7, r3
100129fa:	b156      	cbz	r6, 10012a12 <_dtoa_r+0x5fa>
100129fc:	2c00      	cmp	r4, #0
100129fe:	dd08      	ble.n	10012a12 <_dtoa_r+0x5fa>
10012a00:	42a6      	cmp	r6, r4
10012a02:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10012a04:	4633      	mov	r3, r6
10012a06:	bfa8      	it	ge
10012a08:	4623      	movge	r3, r4
10012a0a:	1ad2      	subs	r2, r2, r3
10012a0c:	9209      	str	r2, [sp, #36]	@ 0x24
10012a0e:	1af6      	subs	r6, r6, r3
10012a10:	1ae4      	subs	r4, r4, r3
10012a12:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012a14:	b153      	cbz	r3, 10012a2c <_dtoa_r+0x614>
10012a16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012a18:	b113      	cbz	r3, 10012a20 <_dtoa_r+0x608>
10012a1a:	2d00      	cmp	r5, #0
10012a1c:	f040 82e8 	bne.w	10012ff0 <_dtoa_r+0xbd8>
10012a20:	4651      	mov	r1, sl
10012a22:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10012a24:	9802      	ldr	r0, [sp, #8]
10012a26:	f004 fd61 	bl	100174ec <__pow5mult>
10012a2a:	4682      	mov	sl, r0
10012a2c:	9802      	ldr	r0, [sp, #8]
10012a2e:	2101      	movs	r1, #1
10012a30:	f004 fc78 	bl	10017324 <__i2b>
10012a34:	4681      	mov	r9, r0
10012a36:	f1bb 0f00 	cmp.w	fp, #0
10012a3a:	f040 81b6 	bne.w	10012daa <_dtoa_r+0x992>
10012a3e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10012a40:	2b01      	cmp	r3, #1
10012a42:	f340 81cc 	ble.w	10012dde <_dtoa_r+0x9c6>
10012a46:	2001      	movs	r0, #1
10012a48:	4420      	add	r0, r4
10012a4a:	f010 001f 	ands.w	r0, r0, #31
10012a4e:	f000 809a 	beq.w	10012b86 <_dtoa_r+0x76e>
10012a52:	f1c0 0320 	rsb	r3, r0, #32
10012a56:	2b04      	cmp	r3, #4
10012a58:	f340 81da 	ble.w	10012e10 <_dtoa_r+0x9f8>
10012a5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012a5e:	f1c0 001c 	rsb	r0, r0, #28
10012a62:	4403      	add	r3, r0
10012a64:	9309      	str	r3, [sp, #36]	@ 0x24
10012a66:	4406      	add	r6, r0
10012a68:	4404      	add	r4, r0
10012a6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012a6c:	2b00      	cmp	r3, #0
10012a6e:	dd05      	ble.n	10012a7c <_dtoa_r+0x664>
10012a70:	4651      	mov	r1, sl
10012a72:	9802      	ldr	r0, [sp, #8]
10012a74:	461a      	mov	r2, r3
10012a76:	f004 fd93 	bl	100175a0 <__lshift>
10012a7a:	4682      	mov	sl, r0
10012a7c:	2c00      	cmp	r4, #0
10012a7e:	dd05      	ble.n	10012a8c <_dtoa_r+0x674>
10012a80:	4649      	mov	r1, r9
10012a82:	9802      	ldr	r0, [sp, #8]
10012a84:	4622      	mov	r2, r4
10012a86:	f004 fd8b 	bl	100175a0 <__lshift>
10012a8a:	4681      	mov	r9, r0
10012a8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012a8e:	2b00      	cmp	r3, #0
10012a90:	f040 8170 	bne.w	10012d74 <_dtoa_r+0x95c>
10012a94:	9b08      	ldr	r3, [sp, #32]
10012a96:	2b00      	cmp	r3, #0
10012a98:	f340 8148 	ble.w	10012d2c <_dtoa_r+0x914>
10012a9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012a9e:	2b00      	cmp	r3, #0
10012aa0:	f040 80a4 	bne.w	10012bec <_dtoa_r+0x7d4>
10012aa4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10012aa6:	3501      	adds	r5, #1
10012aa8:	f8dd 800c 	ldr.w	r8, [sp, #12]
10012aac:	9c08      	ldr	r4, [sp, #32]
10012aae:	f8dd b008 	ldr.w	fp, [sp, #8]
10012ab2:	2601      	movs	r6, #1
10012ab4:	e007      	b.n	10012ac6 <_dtoa_r+0x6ae>
10012ab6:	4651      	mov	r1, sl
10012ab8:	2300      	movs	r3, #0
10012aba:	220a      	movs	r2, #10
10012abc:	4658      	mov	r0, fp
10012abe:	f004 fb8f 	bl	100171e0 <__multadd>
10012ac2:	3601      	adds	r6, #1
10012ac4:	4682      	mov	sl, r0
10012ac6:	4649      	mov	r1, r9
10012ac8:	4650      	mov	r0, sl
10012aca:	f7ff fc0f 	bl	100122ec <quorem>
10012ace:	42a6      	cmp	r6, r4
10012ad0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
10012ad4:	f808 3b01 	strb.w	r3, [r8], #1
10012ad8:	dbed      	blt.n	10012ab6 <_dtoa_r+0x69e>
10012ada:	9a08      	ldr	r2, [sp, #32]
10012adc:	2a00      	cmp	r2, #0
10012ade:	bfc8      	it	gt
10012ae0:	4616      	movgt	r6, r2
10012ae2:	9a03      	ldr	r2, [sp, #12]
10012ae4:	bfd8      	it	le
10012ae6:	2601      	movle	r6, #1
10012ae8:	eb02 0b06 	add.w	fp, r2, r6
10012aec:	2400      	movs	r4, #0
10012aee:	4651      	mov	r1, sl
10012af0:	2201      	movs	r2, #1
10012af2:	9802      	ldr	r0, [sp, #8]
10012af4:	9304      	str	r3, [sp, #16]
10012af6:	f004 fd53 	bl	100175a0 <__lshift>
10012afa:	4649      	mov	r1, r9
10012afc:	4682      	mov	sl, r0
10012afe:	f004 fdc7 	bl	10017690 <__mcmp>
10012b02:	2800      	cmp	r0, #0
10012b04:	f340 81e3 	ble.w	10012ece <_dtoa_r+0xab6>
10012b08:	9a03      	ldr	r2, [sp, #12]
10012b0a:	e002      	b.n	10012b12 <_dtoa_r+0x6fa>
10012b0c:	455a      	cmp	r2, fp
10012b0e:	f000 81e9 	beq.w	10012ee4 <_dtoa_r+0xacc>
10012b12:	465e      	mov	r6, fp
10012b14:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10012b18:	f816 3c01 	ldrb.w	r3, [r6, #-1]
10012b1c:	2b39      	cmp	r3, #57	@ 0x39
10012b1e:	d0f5      	beq.n	10012b0c <_dtoa_r+0x6f4>
10012b20:	3301      	adds	r3, #1
10012b22:	f88b 3000 	strb.w	r3, [fp]
10012b26:	f8dd 8008 	ldr.w	r8, [sp, #8]
10012b2a:	4649      	mov	r1, r9
10012b2c:	4640      	mov	r0, r8
10012b2e:	f004 fb4d 	bl	100171cc <_Bfree>
10012b32:	b157      	cbz	r7, 10012b4a <_dtoa_r+0x732>
10012b34:	b12c      	cbz	r4, 10012b42 <_dtoa_r+0x72a>
10012b36:	42bc      	cmp	r4, r7
10012b38:	d003      	beq.n	10012b42 <_dtoa_r+0x72a>
10012b3a:	4621      	mov	r1, r4
10012b3c:	4640      	mov	r0, r8
10012b3e:	f004 fb45 	bl	100171cc <_Bfree>
10012b42:	9802      	ldr	r0, [sp, #8]
10012b44:	4639      	mov	r1, r7
10012b46:	f004 fb41 	bl	100171cc <_Bfree>
10012b4a:	9802      	ldr	r0, [sp, #8]
10012b4c:	4651      	mov	r1, sl
10012b4e:	f004 fb3d 	bl	100171cc <_Bfree>
10012b52:	2300      	movs	r3, #0
10012b54:	7033      	strb	r3, [r6, #0]
10012b56:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10012b58:	601d      	str	r5, [r3, #0]
10012b5a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10012b5c:	2b00      	cmp	r3, #0
10012b5e:	f43f ac96 	beq.w	1001248e <_dtoa_r+0x76>
10012b62:	9803      	ldr	r0, [sp, #12]
10012b64:	601e      	str	r6, [r3, #0]
10012b66:	b01d      	add	sp, #116	@ 0x74
10012b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10012b6c:	4658      	mov	r0, fp
10012b6e:	f005 fcdd 	bl	1001852c <__aeabi_i2d>
10012b72:	4632      	mov	r2, r6
10012b74:	463b      	mov	r3, r7
10012b76:	f005 ffab 	bl	10018ad0 <__aeabi_dcmpeq>
10012b7a:	2800      	cmp	r0, #0
10012b7c:	f47f acde 	bne.w	1001253c <_dtoa_r+0x124>
10012b80:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10012b84:	e4da      	b.n	1001253c <_dtoa_r+0x124>
10012b86:	231c      	movs	r3, #28
10012b88:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10012b8a:	441a      	add	r2, r3
10012b8c:	9209      	str	r2, [sp, #36]	@ 0x24
10012b8e:	441e      	add	r6, r3
10012b90:	441c      	add	r4, r3
10012b92:	e76a      	b.n	10012a6a <_dtoa_r+0x652>
10012b94:	9a26      	ldr	r2, [sp, #152]	@ 0x98
10012b96:	2a01      	cmp	r2, #1
10012b98:	f340 81a9 	ble.w	10012eee <_dtoa_r+0xad6>
10012b9c:	9b08      	ldr	r3, [sp, #32]
10012b9e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10012ba0:	1e5d      	subs	r5, r3, #1
10012ba2:	42aa      	cmp	r2, r5
10012ba4:	f2c0 816b 	blt.w	10012e7e <_dtoa_r+0xa66>
10012ba8:	2b00      	cmp	r3, #0
10012baa:	eba2 0505 	sub.w	r5, r2, r5
10012bae:	f280 82dd 	bge.w	1001316c <_dtoa_r+0xd54>
10012bb2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10012bb6:	1a9e      	subs	r6, r3, r2
10012bb8:	9802      	ldr	r0, [sp, #8]
10012bba:	2101      	movs	r1, #1
10012bbc:	f004 fbb2 	bl	10017324 <__i2b>
10012bc0:	4607      	mov	r7, r0
10012bc2:	e71a      	b.n	100129fa <_dtoa_r+0x5e2>
10012bc4:	f1c3 0320 	rsb	r3, r3, #32
10012bc8:	fa06 f003 	lsl.w	r0, r6, r3
10012bcc:	e483      	b.n	100124d6 <_dtoa_r+0xbe>
10012bce:	2501      	movs	r5, #1
10012bd0:	e4e6      	b.n	100125a0 <_dtoa_r+0x188>
10012bd2:	4639      	mov	r1, r7
10012bd4:	2300      	movs	r3, #0
10012bd6:	9802      	ldr	r0, [sp, #8]
10012bd8:	220a      	movs	r2, #10
10012bda:	f004 fb01 	bl	100171e0 <__multadd>
10012bde:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10012be0:	2b00      	cmp	r3, #0
10012be2:	4607      	mov	r7, r0
10012be4:	f340 82ef 	ble.w	100131c6 <_dtoa_r+0xdae>
10012be8:	950c      	str	r5, [sp, #48]	@ 0x30
10012bea:	9308      	str	r3, [sp, #32]
10012bec:	2e00      	cmp	r6, #0
10012bee:	f300 813f 	bgt.w	10012e70 <_dtoa_r+0xa58>
10012bf2:	f1bb 0f00 	cmp.w	fp, #0
10012bf6:	f040 81df 	bne.w	10012fb8 <_dtoa_r+0xba0>
10012bfa:	46b8      	mov	r8, r7
10012bfc:	9e03      	ldr	r6, [sp, #12]
10012bfe:	9c08      	ldr	r4, [sp, #32]
10012c00:	1e73      	subs	r3, r6, #1
10012c02:	441c      	add	r4, r3
10012c04:	9b04      	ldr	r3, [sp, #16]
10012c06:	940a      	str	r4, [sp, #40]	@ 0x28
10012c08:	f003 0301 	and.w	r3, r3, #1
10012c0c:	9c02      	ldr	r4, [sp, #8]
10012c0e:	930d      	str	r3, [sp, #52]	@ 0x34
10012c10:	4649      	mov	r1, r9
10012c12:	4650      	mov	r0, sl
10012c14:	f7ff fb6a 	bl	100122ec <quorem>
10012c18:	4639      	mov	r1, r7
10012c1a:	4683      	mov	fp, r0
10012c1c:	4650      	mov	r0, sl
10012c1e:	f004 fd37 	bl	10017690 <__mcmp>
10012c22:	4642      	mov	r2, r8
10012c24:	4649      	mov	r1, r9
10012c26:	4605      	mov	r5, r0
10012c28:	4620      	mov	r0, r4
10012c2a:	f004 fd53 	bl	100176d4 <__mdiff>
10012c2e:	68c2      	ldr	r2, [r0, #12]
10012c30:	4601      	mov	r1, r0
10012c32:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
10012c36:	2a00      	cmp	r2, #0
10012c38:	d13a      	bne.n	10012cb0 <_dtoa_r+0x898>
10012c3a:	e9cd 0308 	strd	r0, r3, [sp, #32]
10012c3e:	4650      	mov	r0, sl
10012c40:	f004 fd26 	bl	10017690 <__mcmp>
10012c44:	9908      	ldr	r1, [sp, #32]
10012c46:	9006      	str	r0, [sp, #24]
10012c48:	4620      	mov	r0, r4
10012c4a:	f004 fabf 	bl	100171cc <_Bfree>
10012c4e:	9a06      	ldr	r2, [sp, #24]
10012c50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012c52:	2a00      	cmp	r2, #0
10012c54:	d15a      	bne.n	10012d0c <_dtoa_r+0x8f4>
10012c56:	9a26      	ldr	r2, [sp, #152]	@ 0x98
10012c58:	b91a      	cbnz	r2, 10012c62 <_dtoa_r+0x84a>
10012c5a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10012c5c:	2a00      	cmp	r2, #0
10012c5e:	f000 829a 	beq.w	10013196 <_dtoa_r+0xd7e>
10012c62:	2d00      	cmp	r5, #0
10012c64:	db45      	blt.n	10012cf2 <_dtoa_r+0x8da>
10012c66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012c68:	46b3      	mov	fp, r6
10012c6a:	42b2      	cmp	r2, r6
10012c6c:	f80b 3b01 	strb.w	r3, [fp], #1
10012c70:	f000 81b9 	beq.w	10012fe6 <_dtoa_r+0xbce>
10012c74:	4651      	mov	r1, sl
10012c76:	2300      	movs	r3, #0
10012c78:	220a      	movs	r2, #10
10012c7a:	4620      	mov	r0, r4
10012c7c:	f004 fab0 	bl	100171e0 <__multadd>
10012c80:	4547      	cmp	r7, r8
10012c82:	4682      	mov	sl, r0
10012c84:	4639      	mov	r1, r7
10012c86:	f04f 0300 	mov.w	r3, #0
10012c8a:	f04f 020a 	mov.w	r2, #10
10012c8e:	4620      	mov	r0, r4
10012c90:	d036      	beq.n	10012d00 <_dtoa_r+0x8e8>
10012c92:	f004 faa5 	bl	100171e0 <__multadd>
10012c96:	4641      	mov	r1, r8
10012c98:	4607      	mov	r7, r0
10012c9a:	2300      	movs	r3, #0
10012c9c:	220a      	movs	r2, #10
10012c9e:	4620      	mov	r0, r4
10012ca0:	f004 fa9e 	bl	100171e0 <__multadd>
10012ca4:	465e      	mov	r6, fp
10012ca6:	4680      	mov	r8, r0
10012ca8:	e7b2      	b.n	10012c10 <_dtoa_r+0x7f8>
10012caa:	bf00      	nop
10012cac:	40240000 	.word	0x40240000
10012cb0:	9802      	ldr	r0, [sp, #8]
10012cb2:	9306      	str	r3, [sp, #24]
10012cb4:	f004 fa8a 	bl	100171cc <_Bfree>
10012cb8:	2d00      	cmp	r5, #0
10012cba:	9b06      	ldr	r3, [sp, #24]
10012cbc:	db06      	blt.n	10012ccc <_dtoa_r+0x8b4>
10012cbe:	9a04      	ldr	r2, [sp, #16]
10012cc0:	9926      	ldr	r1, [sp, #152]	@ 0x98
10012cc2:	f002 0201 	and.w	r2, r2, #1
10012cc6:	430d      	orrs	r5, r1
10012cc8:	432a      	orrs	r2, r5
10012cca:	d12a      	bne.n	10012d22 <_dtoa_r+0x90a>
10012ccc:	4651      	mov	r1, sl
10012cce:	2201      	movs	r2, #1
10012cd0:	9802      	ldr	r0, [sp, #8]
10012cd2:	9304      	str	r3, [sp, #16]
10012cd4:	f004 fc64 	bl	100175a0 <__lshift>
10012cd8:	4649      	mov	r1, r9
10012cda:	4682      	mov	sl, r0
10012cdc:	f004 fcd8 	bl	10017690 <__mcmp>
10012ce0:	2800      	cmp	r0, #0
10012ce2:	9b04      	ldr	r3, [sp, #16]
10012ce4:	f340 80e8 	ble.w	10012eb8 <_dtoa_r+0xaa0>
10012ce8:	2b39      	cmp	r3, #57	@ 0x39
10012cea:	f000 822f 	beq.w	1001314c <_dtoa_r+0xd34>
10012cee:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
10012cf2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10012cf4:	f806 3b01 	strb.w	r3, [r6], #1
10012cf8:	463c      	mov	r4, r7
10012cfa:	3501      	adds	r5, #1
10012cfc:	4647      	mov	r7, r8
10012cfe:	e712      	b.n	10012b26 <_dtoa_r+0x70e>
10012d00:	f004 fa6e 	bl	100171e0 <__multadd>
10012d04:	465e      	mov	r6, fp
10012d06:	4607      	mov	r7, r0
10012d08:	4680      	mov	r8, r0
10012d0a:	e781      	b.n	10012c10 <_dtoa_r+0x7f8>
10012d0c:	2d00      	cmp	r5, #0
10012d0e:	f2c0 827d 	blt.w	1001320c <_dtoa_r+0xdf4>
10012d12:	9926      	ldr	r1, [sp, #152]	@ 0x98
10012d14:	430d      	orrs	r5, r1
10012d16:	990d      	ldr	r1, [sp, #52]	@ 0x34
10012d18:	430d      	orrs	r5, r1
10012d1a:	f000 8277 	beq.w	1001320c <_dtoa_r+0xdf4>
10012d1e:	2a00      	cmp	r2, #0
10012d20:	dda1      	ble.n	10012c66 <_dtoa_r+0x84e>
10012d22:	2b39      	cmp	r3, #57	@ 0x39
10012d24:	f000 8212 	beq.w	1001314c <_dtoa_r+0xd34>
10012d28:	3301      	adds	r3, #1
10012d2a:	e7e2      	b.n	10012cf2 <_dtoa_r+0x8da>
10012d2c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10012d2e:	2b02      	cmp	r3, #2
10012d30:	f77f aeb4 	ble.w	10012a9c <_dtoa_r+0x684>
10012d34:	9b08      	ldr	r3, [sp, #32]
10012d36:	2b00      	cmp	r3, #0
10012d38:	f040 811d 	bne.w	10012f76 <_dtoa_r+0xb5e>
10012d3c:	4649      	mov	r1, r9
10012d3e:	2205      	movs	r2, #5
10012d40:	9802      	ldr	r0, [sp, #8]
10012d42:	f004 fa4d 	bl	100171e0 <__multadd>
10012d46:	4601      	mov	r1, r0
10012d48:	4681      	mov	r9, r0
10012d4a:	4650      	mov	r0, sl
10012d4c:	f004 fca0 	bl	10017690 <__mcmp>
10012d50:	2800      	cmp	r0, #0
10012d52:	f340 8110 	ble.w	10012f76 <_dtoa_r+0xb5e>
10012d56:	9e03      	ldr	r6, [sp, #12]
10012d58:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10012d5a:	2331      	movs	r3, #49	@ 0x31
10012d5c:	f806 3b01 	strb.w	r3, [r6], #1
10012d60:	3501      	adds	r5, #1
10012d62:	9802      	ldr	r0, [sp, #8]
10012d64:	4649      	mov	r1, r9
10012d66:	3501      	adds	r5, #1
10012d68:	f004 fa30 	bl	100171cc <_Bfree>
10012d6c:	2f00      	cmp	r7, #0
10012d6e:	f47f aee8 	bne.w	10012b42 <_dtoa_r+0x72a>
10012d72:	e6ea      	b.n	10012b4a <_dtoa_r+0x732>
10012d74:	4649      	mov	r1, r9
10012d76:	4650      	mov	r0, sl
10012d78:	f004 fc8a 	bl	10017690 <__mcmp>
10012d7c:	2800      	cmp	r0, #0
10012d7e:	f6bf ae89 	bge.w	10012a94 <_dtoa_r+0x67c>
10012d82:	4651      	mov	r1, sl
10012d84:	2300      	movs	r3, #0
10012d86:	9802      	ldr	r0, [sp, #8]
10012d88:	220a      	movs	r2, #10
10012d8a:	f004 fa29 	bl	100171e0 <__multadd>
10012d8e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10012d90:	1e5d      	subs	r5, r3, #1
10012d92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012d94:	4682      	mov	sl, r0
10012d96:	2b00      	cmp	r3, #0
10012d98:	f47f af1b 	bne.w	10012bd2 <_dtoa_r+0x7ba>
10012d9c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10012d9e:	2b00      	cmp	r3, #0
10012da0:	f340 81ff 	ble.w	100131a2 <_dtoa_r+0xd8a>
10012da4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10012da6:	9308      	str	r3, [sp, #32]
10012da8:	e67e      	b.n	10012aa8 <_dtoa_r+0x690>
10012daa:	4601      	mov	r1, r0
10012dac:	465a      	mov	r2, fp
10012dae:	9802      	ldr	r0, [sp, #8]
10012db0:	f004 fb9c 	bl	100174ec <__pow5mult>
10012db4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10012db6:	2b01      	cmp	r3, #1
10012db8:	4681      	mov	r9, r0
10012dba:	dd6c      	ble.n	10012e96 <_dtoa_r+0xa7e>
10012dbc:	f04f 0b00 	mov.w	fp, #0
10012dc0:	f8d9 3010 	ldr.w	r3, [r9, #16]
10012dc4:	eb09 0383 	add.w	r3, r9, r3, lsl #2
10012dc8:	6918      	ldr	r0, [r3, #16]
10012dca:	f004 fa59 	bl	10017280 <__hi0bits>
10012dce:	f1c0 0020 	rsb	r0, r0, #32
10012dd2:	e639      	b.n	10012a48 <_dtoa_r+0x630>
10012dd4:	4b92      	ldr	r3, [pc, #584]	@ (10013020 <_dtoa_r+0xc08>)
10012dd6:	9303      	str	r3, [sp, #12]
10012dd8:	3303      	adds	r3, #3
10012dda:	f7ff bbfc 	b.w	100125d6 <_dtoa_r+0x1be>
10012dde:	9b04      	ldr	r3, [sp, #16]
10012de0:	2b00      	cmp	r3, #0
10012de2:	f47f ae30 	bne.w	10012a46 <_dtoa_r+0x62e>
10012de6:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
10012dea:	f3c2 0313 	ubfx	r3, r2, #0, #20
10012dee:	2b00      	cmp	r3, #0
10012df0:	f47f ae29 	bne.w	10012a46 <_dtoa_r+0x62e>
10012df4:	4b8b      	ldr	r3, [pc, #556]	@ (10013024 <_dtoa_r+0xc0c>)
10012df6:	4013      	ands	r3, r2
10012df8:	b123      	cbz	r3, 10012e04 <_dtoa_r+0x9ec>
10012dfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012dfc:	3301      	adds	r3, #1
10012dfe:	9309      	str	r3, [sp, #36]	@ 0x24
10012e00:	3401      	adds	r4, #1
10012e02:	2301      	movs	r3, #1
10012e04:	f1bb 0f00 	cmp.w	fp, #0
10012e08:	f040 81ae 	bne.w	10013168 <_dtoa_r+0xd50>
10012e0c:	469b      	mov	fp, r3
10012e0e:	e61a      	b.n	10012a46 <_dtoa_r+0x62e>
10012e10:	f43f ae2b 	beq.w	10012a6a <_dtoa_r+0x652>
10012e14:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
10012e18:	e6b6      	b.n	10012b88 <_dtoa_r+0x770>
10012e1a:	2301      	movs	r3, #1
10012e1c:	930a      	str	r3, [sp, #40]	@ 0x28
10012e1e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10012e20:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10012e22:	4413      	add	r3, r2
10012e24:	9316      	str	r3, [sp, #88]	@ 0x58
10012e26:	3301      	adds	r3, #1
10012e28:	2b01      	cmp	r3, #1
10012e2a:	461e      	mov	r6, r3
10012e2c:	9308      	str	r3, [sp, #32]
10012e2e:	bfb8      	it	lt
10012e30:	2601      	movlt	r6, #1
10012e32:	2e17      	cmp	r6, #23
10012e34:	f340 81d5 	ble.w	100131e2 <_dtoa_r+0xdca>
10012e38:	2201      	movs	r2, #1
10012e3a:	2304      	movs	r3, #4
10012e3c:	005b      	lsls	r3, r3, #1
10012e3e:	f103 0014 	add.w	r0, r3, #20
10012e42:	42b0      	cmp	r0, r6
10012e44:	4611      	mov	r1, r2
10012e46:	f102 0201 	add.w	r2, r2, #1
10012e4a:	d9f7      	bls.n	10012e3c <_dtoa_r+0xa24>
10012e4c:	9b02      	ldr	r3, [sp, #8]
10012e4e:	63d9      	str	r1, [r3, #60]	@ 0x3c
10012e50:	e413      	b.n	1001267a <_dtoa_r+0x262>
10012e52:	2301      	movs	r3, #1
10012e54:	930a      	str	r3, [sp, #40]	@ 0x28
10012e56:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10012e58:	2b00      	cmp	r3, #0
10012e5a:	dd33      	ble.n	10012ec4 <_dtoa_r+0xaac>
10012e5c:	9316      	str	r3, [sp, #88]	@ 0x58
10012e5e:	9308      	str	r3, [sp, #32]
10012e60:	461e      	mov	r6, r3
10012e62:	e7e6      	b.n	10012e32 <_dtoa_r+0xa1a>
10012e64:	2300      	movs	r3, #0
10012e66:	930a      	str	r3, [sp, #40]	@ 0x28
10012e68:	e7d9      	b.n	10012e1e <_dtoa_r+0xa06>
10012e6a:	2300      	movs	r3, #0
10012e6c:	930a      	str	r3, [sp, #40]	@ 0x28
10012e6e:	e7f2      	b.n	10012e56 <_dtoa_r+0xa3e>
10012e70:	4639      	mov	r1, r7
10012e72:	9802      	ldr	r0, [sp, #8]
10012e74:	4632      	mov	r2, r6
10012e76:	f004 fb93 	bl	100175a0 <__lshift>
10012e7a:	4607      	mov	r7, r0
10012e7c:	e6b9      	b.n	10012bf2 <_dtoa_r+0x7da>
10012e7e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012e80:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10012e82:	950d      	str	r5, [sp, #52]	@ 0x34
10012e84:	1aeb      	subs	r3, r5, r3
10012e86:	449b      	add	fp, r3
10012e88:	9b08      	ldr	r3, [sp, #32]
10012e8a:	4616      	mov	r6, r2
10012e8c:	441a      	add	r2, r3
10012e8e:	441c      	add	r4, r3
10012e90:	9209      	str	r2, [sp, #36]	@ 0x24
10012e92:	2500      	movs	r5, #0
10012e94:	e690      	b.n	10012bb8 <_dtoa_r+0x7a0>
10012e96:	9b04      	ldr	r3, [sp, #16]
10012e98:	2b00      	cmp	r3, #0
10012e9a:	d18f      	bne.n	10012dbc <_dtoa_r+0x9a4>
10012e9c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10012ea0:	f3c1 0313 	ubfx	r3, r1, #0, #20
10012ea4:	460a      	mov	r2, r1
10012ea6:	2b00      	cmp	r3, #0
10012ea8:	d188      	bne.n	10012dbc <_dtoa_r+0x9a4>
10012eaa:	e7a3      	b.n	10012df4 <_dtoa_r+0x9dc>
10012eac:	ed9d 7b06 	vldr	d7, [sp, #24]
10012eb0:	2702      	movs	r7, #2
10012eb2:	ed8d 7b10 	vstr	d7, [sp, #64]	@ 0x40
10012eb6:	e40c      	b.n	100126d2 <_dtoa_r+0x2ba>
10012eb8:	f47f af1b 	bne.w	10012cf2 <_dtoa_r+0x8da>
10012ebc:	07da      	lsls	r2, r3, #31
10012ebe:	f57f af18 	bpl.w	10012cf2 <_dtoa_r+0x8da>
10012ec2:	e711      	b.n	10012ce8 <_dtoa_r+0x8d0>
10012ec4:	2301      	movs	r3, #1
10012ec6:	9327      	str	r3, [sp, #156]	@ 0x9c
10012ec8:	9308      	str	r3, [sp, #32]
10012eca:	f7ff bbd1 	b.w	10012670 <_dtoa_r+0x258>
10012ece:	d103      	bne.n	10012ed8 <_dtoa_r+0xac0>
10012ed0:	9b04      	ldr	r3, [sp, #16]
10012ed2:	07db      	lsls	r3, r3, #31
10012ed4:	f53f ae18 	bmi.w	10012b08 <_dtoa_r+0x6f0>
10012ed8:	465e      	mov	r6, fp
10012eda:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
10012ede:	2b30      	cmp	r3, #48	@ 0x30
10012ee0:	d0fa      	beq.n	10012ed8 <_dtoa_r+0xac0>
10012ee2:	e620      	b.n	10012b26 <_dtoa_r+0x70e>
10012ee4:	9a03      	ldr	r2, [sp, #12]
10012ee6:	2331      	movs	r3, #49	@ 0x31
10012ee8:	3501      	adds	r5, #1
10012eea:	7013      	strb	r3, [r2, #0]
10012eec:	e61b      	b.n	10012b26 <_dtoa_r+0x70e>
10012eee:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10012ef0:	2a00      	cmp	r2, #0
10012ef2:	f000 80f9 	beq.w	100130e8 <_dtoa_r+0xcd0>
10012ef6:	f203 4333 	addw	r3, r3, #1075	@ 0x433
10012efa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10012efc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
10012efe:	4616      	mov	r6, r2
10012f00:	441a      	add	r2, r3
10012f02:	441c      	add	r4, r3
10012f04:	9209      	str	r2, [sp, #36]	@ 0x24
10012f06:	e657      	b.n	10012bb8 <_dtoa_r+0x7a0>
10012f08:	f1c8 0301 	rsb	r3, r8, #1
10012f0c:	4604      	mov	r4, r0
10012f0e:	9309      	str	r3, [sp, #36]	@ 0x24
10012f10:	900e      	str	r0, [sp, #56]	@ 0x38
10012f12:	f7ff bb9d 	b.w	10012650 <_dtoa_r+0x238>
10012f16:	f000 80eb 	beq.w	100130f0 <_dtoa_r+0xcd8>
10012f1a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10012f1c:	4d42      	ldr	r5, [pc, #264]	@ (10013028 <_dtoa_r+0xc10>)
10012f1e:	425e      	negs	r6, r3
10012f20:	f006 030f 	and.w	r3, r6, #15
10012f24:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10012f28:	e9d3 2300 	ldrd	r2, r3, [r3]
10012f2c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10012f30:	f005 fb66 	bl	10018600 <__aeabi_dmul>
10012f34:	1135      	asrs	r5, r6, #4
10012f36:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
10012f3a:	f000 814d 	beq.w	100131d8 <_dtoa_r+0xdc0>
10012f3e:	4e3b      	ldr	r6, [pc, #236]	@ (1001302c <_dtoa_r+0xc14>)
10012f40:	2300      	movs	r3, #0
10012f42:	2702      	movs	r7, #2
10012f44:	4680      	mov	r8, r0
10012f46:	4689      	mov	r9, r1
10012f48:	07e8      	lsls	r0, r5, #31
10012f4a:	d509      	bpl.n	10012f60 <_dtoa_r+0xb48>
10012f4c:	e9d6 2300 	ldrd	r2, r3, [r6]
10012f50:	4640      	mov	r0, r8
10012f52:	4649      	mov	r1, r9
10012f54:	f005 fb54 	bl	10018600 <__aeabi_dmul>
10012f58:	3701      	adds	r7, #1
10012f5a:	4680      	mov	r8, r0
10012f5c:	4689      	mov	r9, r1
10012f5e:	2301      	movs	r3, #1
10012f60:	106d      	asrs	r5, r5, #1
10012f62:	f106 0608 	add.w	r6, r6, #8
10012f66:	d1ef      	bne.n	10012f48 <_dtoa_r+0xb30>
10012f68:	2b00      	cmp	r3, #0
10012f6a:	f47f abcb 	bne.w	10012704 <_dtoa_r+0x2ec>
10012f6e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10012f72:	f7ff bbc7 	b.w	10012704 <_dtoa_r+0x2ec>
10012f76:	9e03      	ldr	r6, [sp, #12]
10012f78:	e4cb      	b.n	10012912 <_dtoa_r+0x4fa>
10012f7a:	f8dd a018 	ldr.w	sl, [sp, #24]
10012f7e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10012f80:	4602      	mov	r2, r0
10012f82:	460b      	mov	r3, r1
10012f84:	f005 f986 	bl	10018294 <__adddf3>
10012f88:	4602      	mov	r2, r0
10012f8a:	460b      	mov	r3, r1
10012f8c:	e9cd 2306 	strd	r2, r3, [sp, #24]
10012f90:	3501      	adds	r5, #1
10012f92:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10012f96:	46a8      	mov	r8, r5
10012f98:	f005 fdc2 	bl	10018b20 <__aeabi_dcmpgt>
10012f9c:	b940      	cbnz	r0, 10012fb0 <_dtoa_r+0xb98>
10012f9e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10012fa2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10012fa6:	f005 fd93 	bl	10018ad0 <__aeabi_dcmpeq>
10012faa:	b118      	cbz	r0, 10012fb4 <_dtoa_r+0xb9c>
10012fac:	07f1      	lsls	r1, r6, #31
10012fae:	d501      	bpl.n	10012fb4 <_dtoa_r+0xb9c>
10012fb0:	9a03      	ldr	r2, [sp, #12]
10012fb2:	e44b      	b.n	1001284c <_dtoa_r+0x434>
10012fb4:	463e      	mov	r6, r7
10012fb6:	e5c8      	b.n	10012b4a <_dtoa_r+0x732>
10012fb8:	6879      	ldr	r1, [r7, #4]
10012fba:	9802      	ldr	r0, [sp, #8]
10012fbc:	f004 f8e0 	bl	10017180 <_Balloc>
10012fc0:	4605      	mov	r5, r0
10012fc2:	2800      	cmp	r0, #0
10012fc4:	f000 8126 	beq.w	10013214 <_dtoa_r+0xdfc>
10012fc8:	693b      	ldr	r3, [r7, #16]
10012fca:	3302      	adds	r3, #2
10012fcc:	009a      	lsls	r2, r3, #2
10012fce:	f107 010c 	add.w	r1, r7, #12
10012fd2:	300c      	adds	r0, #12
10012fd4:	f000 fa64 	bl	100134a0 <memcpy>
10012fd8:	9802      	ldr	r0, [sp, #8]
10012fda:	4629      	mov	r1, r5
10012fdc:	2201      	movs	r2, #1
10012fde:	f004 fadf 	bl	100175a0 <__lshift>
10012fe2:	4680      	mov	r8, r0
10012fe4:	e60a      	b.n	10012bfc <_dtoa_r+0x7e4>
10012fe6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10012fe8:	463c      	mov	r4, r7
10012fea:	3501      	adds	r5, #1
10012fec:	4647      	mov	r7, r8
10012fee:	e57e      	b.n	10012aee <_dtoa_r+0x6d6>
10012ff0:	f8dd 8008 	ldr.w	r8, [sp, #8]
10012ff4:	4639      	mov	r1, r7
10012ff6:	462a      	mov	r2, r5
10012ff8:	4640      	mov	r0, r8
10012ffa:	f004 fa77 	bl	100174ec <__pow5mult>
10012ffe:	4652      	mov	r2, sl
10013000:	4601      	mov	r1, r0
10013002:	4607      	mov	r7, r0
10013004:	4640      	mov	r0, r8
10013006:	f004 f9bb 	bl	10017380 <__multiply>
1001300a:	4651      	mov	r1, sl
1001300c:	4682      	mov	sl, r0
1001300e:	4640      	mov	r0, r8
10013010:	f004 f8dc 	bl	100171cc <_Bfree>
10013014:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10013016:	1b5b      	subs	r3, r3, r5
10013018:	930d      	str	r3, [sp, #52]	@ 0x34
1001301a:	f43f ad07 	beq.w	10012a2c <_dtoa_r+0x614>
1001301e:	e4ff      	b.n	10012a20 <_dtoa_r+0x608>
10013020:	100191c8 	.word	0x100191c8
10013024:	7ff00000 	.word	0x7ff00000
10013028:	10019450 	.word	0x10019450
1001302c:	10019428 	.word	0x10019428
10013030:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
10013034:	f005 fae4 	bl	10018600 <__aeabi_dmul>
10013038:	9b03      	ldr	r3, [sp, #12]
1001303a:	701f      	strb	r7, [r3, #0]
1001303c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001303e:	2b01      	cmp	r3, #1
10013040:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
10013044:	f000 80c6 	beq.w	100131d4 <_dtoa_r+0xdbc>
10013048:	9f10      	ldr	r7, [sp, #64]	@ 0x40
1001304a:	9b03      	ldr	r3, [sp, #12]
1001304c:	f8cd b03c 	str.w	fp, [sp, #60]	@ 0x3c
10013050:	441f      	add	r7, r3
10013052:	4b7c      	ldr	r3, [pc, #496]	@ (10013244 <_dtoa_r+0xe2c>)
10013054:	2200      	movs	r2, #0
10013056:	4640      	mov	r0, r8
10013058:	4649      	mov	r1, r9
1001305a:	f005 fad1 	bl	10018600 <__aeabi_dmul>
1001305e:	4689      	mov	r9, r1
10013060:	4680      	mov	r8, r0
10013062:	f005 fd7d 	bl	10018b60 <__aeabi_d2iz>
10013066:	4683      	mov	fp, r0
10013068:	f005 fa60 	bl	1001852c <__aeabi_i2d>
1001306c:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
10013070:	4602      	mov	r2, r0
10013072:	460b      	mov	r3, r1
10013074:	4640      	mov	r0, r8
10013076:	4649      	mov	r1, r9
10013078:	f005 f90a 	bl	10018290 <__aeabi_dsub>
1001307c:	f806 bb01 	strb.w	fp, [r6], #1
10013080:	42b7      	cmp	r7, r6
10013082:	4680      	mov	r8, r0
10013084:	4689      	mov	r9, r1
10013086:	d1e4      	bne.n	10013052 <_dtoa_r+0xc3a>
10013088:	f8dd b03c 	ldr.w	fp, [sp, #60]	@ 0x3c
1001308c:	4b6e      	ldr	r3, [pc, #440]	@ (10013248 <_dtoa_r+0xe30>)
1001308e:	2200      	movs	r2, #0
10013090:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
10013094:	f005 f8fe 	bl	10018294 <__adddf3>
10013098:	4602      	mov	r2, r0
1001309a:	460b      	mov	r3, r1
1001309c:	4640      	mov	r0, r8
1001309e:	4649      	mov	r1, r9
100130a0:	f005 fd3e 	bl	10018b20 <__aeabi_dcmpgt>
100130a4:	2800      	cmp	r0, #0
100130a6:	d167      	bne.n	10013178 <_dtoa_r+0xd60>
100130a8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
100130ac:	4966      	ldr	r1, [pc, #408]	@ (10013248 <_dtoa_r+0xe30>)
100130ae:	2000      	movs	r0, #0
100130b0:	f005 f8ee 	bl	10018290 <__aeabi_dsub>
100130b4:	4602      	mov	r2, r0
100130b6:	460b      	mov	r3, r1
100130b8:	4640      	mov	r0, r8
100130ba:	4649      	mov	r1, r9
100130bc:	f005 fd12 	bl	10018ae4 <__aeabi_dcmplt>
100130c0:	b948      	cbnz	r0, 100130d6 <_dtoa_r+0xcbe>
100130c2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
100130c4:	2b00      	cmp	r3, #0
100130c6:	f6ff ac93 	blt.w	100129f0 <_dtoa_r+0x5d8>
100130ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100130cc:	2b0e      	cmp	r3, #14
100130ce:	f73f ac8f 	bgt.w	100129f0 <_dtoa_r+0x5d8>
100130d2:	f7ff bbfd 	b.w	100128d0 <_dtoa_r+0x4b8>
100130d6:	463e      	mov	r6, r7
100130d8:	3f01      	subs	r7, #1
100130da:	f816 3c01 	ldrb.w	r3, [r6, #-1]
100130de:	2b30      	cmp	r3, #48	@ 0x30
100130e0:	d0f9      	beq.n	100130d6 <_dtoa_r+0xcbe>
100130e2:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
100130e4:	3501      	adds	r5, #1
100130e6:	e530      	b.n	10012b4a <_dtoa_r+0x732>
100130e8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
100130ea:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
100130ee:	e704      	b.n	10012efa <_dtoa_r+0xae2>
100130f0:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
100130f4:	2702      	movs	r7, #2
100130f6:	f7ff bb05 	b.w	10012704 <_dtoa_r+0x2ec>
100130fa:	9b08      	ldr	r3, [sp, #32]
100130fc:	2b00      	cmp	r3, #0
100130fe:	f43f abb9 	beq.w	10012874 <_dtoa_r+0x45c>
10013102:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10013104:	2b00      	cmp	r3, #0
10013106:	f77f abda 	ble.w	100128be <_dtoa_r+0x4a6>
1001310a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001310c:	9310      	str	r3, [sp, #64]	@ 0x40
1001310e:	3a01      	subs	r2, #1
10013110:	4b4c      	ldr	r3, [pc, #304]	@ (10013244 <_dtoa_r+0xe2c>)
10013112:	9217      	str	r2, [sp, #92]	@ 0x5c
10013114:	4640      	mov	r0, r8
10013116:	2200      	movs	r2, #0
10013118:	4649      	mov	r1, r9
1001311a:	f005 fa71 	bl	10018600 <__aeabi_dmul>
1001311e:	4680      	mov	r8, r0
10013120:	4689      	mov	r9, r1
10013122:	1c78      	adds	r0, r7, #1
10013124:	f005 fa02 	bl	1001852c <__aeabi_i2d>
10013128:	4642      	mov	r2, r8
1001312a:	464b      	mov	r3, r9
1001312c:	f005 fa68 	bl	10018600 <__aeabi_dmul>
10013130:	4b46      	ldr	r3, [pc, #280]	@ (1001324c <_dtoa_r+0xe34>)
10013132:	2200      	movs	r2, #0
10013134:	f005 f8ae 	bl	10018294 <__adddf3>
10013138:	4606      	mov	r6, r0
1001313a:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001313e:	f7ff bb02 	b.w	10012746 <_dtoa_r+0x32e>
10013142:	f108 0801 	add.w	r8, r8, #1
10013146:	2331      	movs	r3, #49	@ 0x31
10013148:	f7ff bb87 	b.w	1001285a <_dtoa_r+0x442>
1001314c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
1001314e:	9a03      	ldr	r2, [sp, #12]
10013150:	46b3      	mov	fp, r6
10013152:	2339      	movs	r3, #57	@ 0x39
10013154:	463c      	mov	r4, r7
10013156:	f80b 3b01 	strb.w	r3, [fp], #1
1001315a:	3501      	adds	r5, #1
1001315c:	4647      	mov	r7, r8
1001315e:	e4d8      	b.n	10012b12 <_dtoa_r+0x6fa>
10013160:	f04f 0900 	mov.w	r9, #0
10013164:	464f      	mov	r7, r9
10013166:	e5f6      	b.n	10012d56 <_dtoa_r+0x93e>
10013168:	469b      	mov	fp, r3
1001316a:	e629      	b.n	10012dc0 <_dtoa_r+0x9a8>
1001316c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001316e:	4616      	mov	r6, r2
10013170:	441a      	add	r2, r3
10013172:	441c      	add	r4, r3
10013174:	9209      	str	r2, [sp, #36]	@ 0x24
10013176:	e51f      	b.n	10012bb8 <_dtoa_r+0x7a0>
10013178:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001317a:	9a03      	ldr	r2, [sp, #12]
1001317c:	f103 0801 	add.w	r8, r3, #1
10013180:	f7ff bb64 	b.w	1001284c <_dtoa_r+0x434>
10013184:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
10013188:	e7ab      	b.n	100130e2 <_dtoa_r+0xcca>
1001318a:	e9dd b418 	ldrd	fp, r4, [sp, #96]	@ 0x60
1001318e:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
10013192:	f7ff bb94 	b.w	100128be <_dtoa_r+0x4a6>
10013196:	2b39      	cmp	r3, #57	@ 0x39
10013198:	d0d8      	beq.n	1001314c <_dtoa_r+0xd34>
1001319a:	2d00      	cmp	r5, #0
1001319c:	f73f ada7 	bgt.w	10012cee <_dtoa_r+0x8d6>
100131a0:	e5a7      	b.n	10012cf2 <_dtoa_r+0x8da>
100131a2:	9b26      	ldr	r3, [sp, #152]	@ 0x98
100131a4:	2b02      	cmp	r3, #2
100131a6:	dc0a      	bgt.n	100131be <_dtoa_r+0xda6>
100131a8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
100131aa:	9308      	str	r3, [sp, #32]
100131ac:	4649      	mov	r1, r9
100131ae:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100131b0:	f7ff f89c 	bl	100122ec <quorem>
100131b4:	9a03      	ldr	r2, [sp, #12]
100131b6:	f100 0330 	add.w	r3, r0, #48	@ 0x30
100131ba:	7013      	strb	r3, [r2, #0]
100131bc:	e48d      	b.n	10012ada <_dtoa_r+0x6c2>
100131be:	9b16      	ldr	r3, [sp, #88]	@ 0x58
100131c0:	9308      	str	r3, [sp, #32]
100131c2:	950c      	str	r5, [sp, #48]	@ 0x30
100131c4:	e5b6      	b.n	10012d34 <_dtoa_r+0x91c>
100131c6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
100131c8:	2b02      	cmp	r3, #2
100131ca:	dcf8      	bgt.n	100131be <_dtoa_r+0xda6>
100131cc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
100131ce:	950c      	str	r5, [sp, #48]	@ 0x30
100131d0:	9308      	str	r3, [sp, #32]
100131d2:	e50b      	b.n	10012bec <_dtoa_r+0x7d4>
100131d4:	4637      	mov	r7, r6
100131d6:	e759      	b.n	1001308c <_dtoa_r+0xc74>
100131d8:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
100131dc:	2702      	movs	r7, #2
100131de:	f7ff ba91 	b.w	10012704 <_dtoa_r+0x2ec>
100131e2:	9b02      	ldr	r3, [sp, #8]
100131e4:	2100      	movs	r1, #0
100131e6:	63d9      	str	r1, [r3, #60]	@ 0x3c
100131e8:	f7ff ba47 	b.w	1001267a <_dtoa_r+0x262>
100131ec:	9b02      	ldr	r3, [sp, #8]
100131ee:	2500      	movs	r5, #0
100131f0:	63dd      	str	r5, [r3, #60]	@ 0x3c
100131f2:	4629      	mov	r1, r5
100131f4:	4618      	mov	r0, r3
100131f6:	f003 ffc3 	bl	10017180 <_Balloc>
100131fa:	9003      	str	r0, [sp, #12]
100131fc:	b9a8      	cbnz	r0, 1001322a <_dtoa_r+0xe12>
100131fe:	4b14      	ldr	r3, [pc, #80]	@ (10013250 <_dtoa_r+0xe38>)
10013200:	4814      	ldr	r0, [pc, #80]	@ (10013254 <_dtoa_r+0xe3c>)
10013202:	2200      	movs	r2, #0
10013204:	f240 11af 	movw	r1, #431	@ 0x1af
10013208:	f003 fe6c 	bl	10016ee4 <__assert_func>
1001320c:	2a00      	cmp	r2, #0
1001320e:	f77f ad70 	ble.w	10012cf2 <_dtoa_r+0x8da>
10013212:	e55b      	b.n	10012ccc <_dtoa_r+0x8b4>
10013214:	4b0e      	ldr	r3, [pc, #56]	@ (10013250 <_dtoa_r+0xe38>)
10013216:	480f      	ldr	r0, [pc, #60]	@ (10013254 <_dtoa_r+0xe3c>)
10013218:	462a      	mov	r2, r5
1001321a:	f240 21ef 	movw	r1, #751	@ 0x2ef
1001321e:	f003 fe61 	bl	10016ee4 <__assert_func>
10013222:	4b0d      	ldr	r3, [pc, #52]	@ (10013258 <_dtoa_r+0xe40>)
10013224:	9303      	str	r3, [sp, #12]
10013226:	f7ff b932 	b.w	1001248e <_dtoa_r+0x76>
1001322a:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
1001322e:	639a      	str	r2, [r3, #56]	@ 0x38
10013230:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10013234:	2201      	movs	r2, #1
10013236:	9527      	str	r5, [sp, #156]	@ 0x9c
10013238:	9316      	str	r3, [sp, #88]	@ 0x58
1001323a:	920a      	str	r2, [sp, #40]	@ 0x28
1001323c:	9308      	str	r3, [sp, #32]
1001323e:	f7ff bb3e 	b.w	100128be <_dtoa_r+0x4a6>
10013242:	bf00      	nop
10013244:	40240000 	.word	0x40240000
10013248:	3fe00000 	.word	0x3fe00000
1001324c:	401c0000 	.word	0x401c0000
10013250:	100191cc 	.word	0x100191cc
10013254:	100191e0 	.word	0x100191e0
10013258:	100191bc 	.word	0x100191bc

1001325c <stdio_exit_handler>:
1001325c:	4a02      	ldr	r2, [pc, #8]	@ (10013268 <stdio_exit_handler+0xc>)
1001325e:	4903      	ldr	r1, [pc, #12]	@ (1001326c <stdio_exit_handler+0x10>)
10013260:	4803      	ldr	r0, [pc, #12]	@ (10013270 <stdio_exit_handler+0x14>)
10013262:	f000 bdfd 	b.w	10013e60 <_fwalk_sglue>
10013266:	bf00      	nop
10013268:	200006e0 	.word	0x200006e0
1001326c:	10016f25 	.word	0x10016f25
10013270:	200005c0 	.word	0x200005c0

10013274 <cleanup_stdio>:
10013274:	4b0c      	ldr	r3, [pc, #48]	@ (100132a8 <cleanup_stdio+0x34>)
10013276:	6841      	ldr	r1, [r0, #4]
10013278:	4299      	cmp	r1, r3
1001327a:	b510      	push	{r4, lr}
1001327c:	4604      	mov	r4, r0
1001327e:	d001      	beq.n	10013284 <cleanup_stdio+0x10>
10013280:	f003 fe50 	bl	10016f24 <_fclose_r>
10013284:	68a1      	ldr	r1, [r4, #8]
10013286:	4b09      	ldr	r3, [pc, #36]	@ (100132ac <cleanup_stdio+0x38>)
10013288:	4299      	cmp	r1, r3
1001328a:	d002      	beq.n	10013292 <cleanup_stdio+0x1e>
1001328c:	4620      	mov	r0, r4
1001328e:	f003 fe49 	bl	10016f24 <_fclose_r>
10013292:	68e1      	ldr	r1, [r4, #12]
10013294:	4b06      	ldr	r3, [pc, #24]	@ (100132b0 <cleanup_stdio+0x3c>)
10013296:	4299      	cmp	r1, r3
10013298:	d004      	beq.n	100132a4 <cleanup_stdio+0x30>
1001329a:	4620      	mov	r0, r4
1001329c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100132a0:	f003 be40 	b.w	10016f24 <_fclose_r>
100132a4:	bd10      	pop	{r4, pc}
100132a6:	bf00      	nop
100132a8:	20001470 	.word	0x20001470
100132ac:	200014d8 	.word	0x200014d8
100132b0:	20001540 	.word	0x20001540

100132b4 <global_stdio_init.part.0>:
100132b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100132b8:	4c31      	ldr	r4, [pc, #196]	@ (10013380 <global_stdio_init.part.0+0xcc>)
100132ba:	4b32      	ldr	r3, [pc, #200]	@ (10013384 <global_stdio_init.part.0+0xd0>)
100132bc:	4832      	ldr	r0, [pc, #200]	@ (10013388 <global_stdio_init.part.0+0xd4>)
100132be:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 1001339c <global_stdio_init.part.0+0xe8>
100132c2:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 100133a0 <global_stdio_init.part.0+0xec>
100132c6:	4f31      	ldr	r7, [pc, #196]	@ (1001338c <global_stdio_init.part.0+0xd8>)
100132c8:	6018      	str	r0, [r3, #0]
100132ca:	2500      	movs	r5, #0
100132cc:	4629      	mov	r1, r5
100132ce:	2304      	movs	r3, #4
100132d0:	2208      	movs	r2, #8
100132d2:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
100132d6:	4e2e      	ldr	r6, [pc, #184]	@ (10013390 <global_stdio_init.part.0+0xdc>)
100132d8:	60e3      	str	r3, [r4, #12]
100132da:	e9c4 5500 	strd	r5, r5, [r4]
100132de:	e9c4 5504 	strd	r5, r5, [r4, #16]
100132e2:	60a5      	str	r5, [r4, #8]
100132e4:	6665      	str	r5, [r4, #100]	@ 0x64
100132e6:	61a5      	str	r5, [r4, #24]
100132e8:	f7fe fea6 	bl	10012038 <memset>
100132ec:	f104 0058 	add.w	r0, r4, #88	@ 0x58
100132f0:	e9c4 4907 	strd	r4, r9, [r4, #28]
100132f4:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
100132f8:	62e6      	str	r6, [r4, #44]	@ 0x2c
100132fa:	f7fe ff51 	bl	100121a0 <__retarget_lock_init_recursive>
100132fe:	4629      	mov	r1, r5
10013300:	4b24      	ldr	r3, [pc, #144]	@ (10013394 <global_stdio_init.part.0+0xe0>)
10013302:	6763      	str	r3, [r4, #116]	@ 0x74
10013304:	2208      	movs	r2, #8
10013306:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
1001330a:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
1001330e:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
10013312:	6725      	str	r5, [r4, #112]	@ 0x70
10013314:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
10013318:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
1001331c:	f7fe fe8c 	bl	10012038 <memset>
10013320:	f104 0368 	add.w	r3, r4, #104	@ 0x68
10013324:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
10013328:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
1001332c:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
10013330:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
10013334:	f7fe ff34 	bl	100121a0 <__retarget_lock_init_recursive>
10013338:	4b17      	ldr	r3, [pc, #92]	@ (10013398 <global_stdio_init.part.0+0xe4>)
1001333a:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
1001333e:	4629      	mov	r1, r5
10013340:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
10013344:	2208      	movs	r2, #8
10013346:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
1001334a:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
1001334e:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
10013352:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
10013356:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
1001335a:	f7fe fe6d 	bl	10012038 <memset>
1001335e:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
10013362:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
10013366:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
1001336a:	f504 7094 	add.w	r0, r4, #296	@ 0x128
1001336e:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
10013372:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
10013376:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001337a:	f7fe bf11 	b.w	100121a0 <__retarget_lock_init_recursive>
1001337e:	bf00      	nop
10013380:	20001470 	.word	0x20001470
10013384:	200015a8 	.word	0x200015a8
10013388:	1001325d 	.word	0x1001325d
1001338c:	10013ac9 	.word	0x10013ac9
10013390:	10013aed 	.word	0x10013aed
10013394:	00010009 	.word	0x00010009
10013398:	00020012 	.word	0x00020012
1001339c:	10013a65 	.word	0x10013a65
100133a0:	10013a89 	.word	0x10013a89

100133a4 <__sinit>:
100133a4:	b510      	push	{r4, lr}
100133a6:	4604      	mov	r4, r0
100133a8:	480a      	ldr	r0, [pc, #40]	@ (100133d4 <__sinit+0x30>)
100133aa:	f7fe fefd 	bl	100121a8 <__retarget_lock_acquire_recursive>
100133ae:	6b63      	ldr	r3, [r4, #52]	@ 0x34
100133b0:	b923      	cbnz	r3, 100133bc <__sinit+0x18>
100133b2:	4b09      	ldr	r3, [pc, #36]	@ (100133d8 <__sinit+0x34>)
100133b4:	4a09      	ldr	r2, [pc, #36]	@ (100133dc <__sinit+0x38>)
100133b6:	681b      	ldr	r3, [r3, #0]
100133b8:	6362      	str	r2, [r4, #52]	@ 0x34
100133ba:	b123      	cbz	r3, 100133c6 <__sinit+0x22>
100133bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100133c0:	4804      	ldr	r0, [pc, #16]	@ (100133d4 <__sinit+0x30>)
100133c2:	f7fe bef3 	b.w	100121ac <__retarget_lock_release_recursive>
100133c6:	f7ff ff75 	bl	100132b4 <global_stdio_init.part.0>
100133ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100133ce:	4801      	ldr	r0, [pc, #4]	@ (100133d4 <__sinit+0x30>)
100133d0:	f7fe beec 	b.w	100121ac <__retarget_lock_release_recursive>
100133d4:	2000146c 	.word	0x2000146c
100133d8:	200015a8 	.word	0x200015a8
100133dc:	10013275 	.word	0x10013275

100133e0 <__sfp_lock_acquire>:
100133e0:	4801      	ldr	r0, [pc, #4]	@ (100133e8 <__sfp_lock_acquire+0x8>)
100133e2:	f7fe bee1 	b.w	100121a8 <__retarget_lock_acquire_recursive>
100133e6:	bf00      	nop
100133e8:	2000146c 	.word	0x2000146c

100133ec <__sfp_lock_release>:
100133ec:	4801      	ldr	r0, [pc, #4]	@ (100133f4 <__sfp_lock_release+0x8>)
100133ee:	f7fe bedd 	b.w	100121ac <__retarget_lock_release_recursive>
100133f2:	bf00      	nop
100133f4:	2000146c 	.word	0x2000146c
	...

10013400 <memchr>:
10013400:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10013404:	2a10      	cmp	r2, #16
10013406:	db2b      	blt.n	10013460 <memchr+0x60>
10013408:	f010 0f07 	tst.w	r0, #7
1001340c:	d008      	beq.n	10013420 <memchr+0x20>
1001340e:	f810 3b01 	ldrb.w	r3, [r0], #1
10013412:	3a01      	subs	r2, #1
10013414:	428b      	cmp	r3, r1
10013416:	d02d      	beq.n	10013474 <memchr+0x74>
10013418:	f010 0f07 	tst.w	r0, #7
1001341c:	b342      	cbz	r2, 10013470 <memchr+0x70>
1001341e:	d1f6      	bne.n	1001340e <memchr+0xe>
10013420:	b4f0      	push	{r4, r5, r6, r7}
10013422:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
10013426:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1001342a:	f022 0407 	bic.w	r4, r2, #7
1001342e:	f07f 0700 	mvns.w	r7, #0
10013432:	2300      	movs	r3, #0
10013434:	e8f0 5602 	ldrd	r5, r6, [r0], #8
10013438:	3c08      	subs	r4, #8
1001343a:	ea85 0501 	eor.w	r5, r5, r1
1001343e:	ea86 0601 	eor.w	r6, r6, r1
10013442:	fa85 f547 	uadd8	r5, r5, r7
10013446:	faa3 f587 	sel	r5, r3, r7
1001344a:	fa86 f647 	uadd8	r6, r6, r7
1001344e:	faa5 f687 	sel	r6, r5, r7
10013452:	b98e      	cbnz	r6, 10013478 <memchr+0x78>
10013454:	d1ee      	bne.n	10013434 <memchr+0x34>
10013456:	bcf0      	pop	{r4, r5, r6, r7}
10013458:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001345c:	f002 0207 	and.w	r2, r2, #7
10013460:	b132      	cbz	r2, 10013470 <memchr+0x70>
10013462:	f810 3b01 	ldrb.w	r3, [r0], #1
10013466:	3a01      	subs	r2, #1
10013468:	ea83 0301 	eor.w	r3, r3, r1
1001346c:	b113      	cbz	r3, 10013474 <memchr+0x74>
1001346e:	d1f8      	bne.n	10013462 <memchr+0x62>
10013470:	2000      	movs	r0, #0
10013472:	4770      	bx	lr
10013474:	3801      	subs	r0, #1
10013476:	4770      	bx	lr
10013478:	2d00      	cmp	r5, #0
1001347a:	bf06      	itte	eq
1001347c:	4635      	moveq	r5, r6
1001347e:	3803      	subeq	r0, #3
10013480:	3807      	subne	r0, #7
10013482:	f015 0f01 	tst.w	r5, #1
10013486:	d107      	bne.n	10013498 <memchr+0x98>
10013488:	3001      	adds	r0, #1
1001348a:	f415 7f80 	tst.w	r5, #256	@ 0x100
1001348e:	bf02      	ittt	eq
10013490:	3001      	addeq	r0, #1
10013492:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
10013496:	3001      	addeq	r0, #1
10013498:	bcf0      	pop	{r4, r5, r6, r7}
1001349a:	3801      	subs	r0, #1
1001349c:	4770      	bx	lr
1001349e:	bf00      	nop

100134a0 <memcpy>:
100134a0:	4684      	mov	ip, r0
100134a2:	ea41 0300 	orr.w	r3, r1, r0
100134a6:	f013 0303 	ands.w	r3, r3, #3
100134aa:	d16d      	bne.n	10013588 <memcpy+0xe8>
100134ac:	3a40      	subs	r2, #64	@ 0x40
100134ae:	d341      	bcc.n	10013534 <memcpy+0x94>
100134b0:	f851 3b04 	ldr.w	r3, [r1], #4
100134b4:	f840 3b04 	str.w	r3, [r0], #4
100134b8:	f851 3b04 	ldr.w	r3, [r1], #4
100134bc:	f840 3b04 	str.w	r3, [r0], #4
100134c0:	f851 3b04 	ldr.w	r3, [r1], #4
100134c4:	f840 3b04 	str.w	r3, [r0], #4
100134c8:	f851 3b04 	ldr.w	r3, [r1], #4
100134cc:	f840 3b04 	str.w	r3, [r0], #4
100134d0:	f851 3b04 	ldr.w	r3, [r1], #4
100134d4:	f840 3b04 	str.w	r3, [r0], #4
100134d8:	f851 3b04 	ldr.w	r3, [r1], #4
100134dc:	f840 3b04 	str.w	r3, [r0], #4
100134e0:	f851 3b04 	ldr.w	r3, [r1], #4
100134e4:	f840 3b04 	str.w	r3, [r0], #4
100134e8:	f851 3b04 	ldr.w	r3, [r1], #4
100134ec:	f840 3b04 	str.w	r3, [r0], #4
100134f0:	f851 3b04 	ldr.w	r3, [r1], #4
100134f4:	f840 3b04 	str.w	r3, [r0], #4
100134f8:	f851 3b04 	ldr.w	r3, [r1], #4
100134fc:	f840 3b04 	str.w	r3, [r0], #4
10013500:	f851 3b04 	ldr.w	r3, [r1], #4
10013504:	f840 3b04 	str.w	r3, [r0], #4
10013508:	f851 3b04 	ldr.w	r3, [r1], #4
1001350c:	f840 3b04 	str.w	r3, [r0], #4
10013510:	f851 3b04 	ldr.w	r3, [r1], #4
10013514:	f840 3b04 	str.w	r3, [r0], #4
10013518:	f851 3b04 	ldr.w	r3, [r1], #4
1001351c:	f840 3b04 	str.w	r3, [r0], #4
10013520:	f851 3b04 	ldr.w	r3, [r1], #4
10013524:	f840 3b04 	str.w	r3, [r0], #4
10013528:	f851 3b04 	ldr.w	r3, [r1], #4
1001352c:	f840 3b04 	str.w	r3, [r0], #4
10013530:	3a40      	subs	r2, #64	@ 0x40
10013532:	d2bd      	bcs.n	100134b0 <memcpy+0x10>
10013534:	3230      	adds	r2, #48	@ 0x30
10013536:	d311      	bcc.n	1001355c <memcpy+0xbc>
10013538:	f851 3b04 	ldr.w	r3, [r1], #4
1001353c:	f840 3b04 	str.w	r3, [r0], #4
10013540:	f851 3b04 	ldr.w	r3, [r1], #4
10013544:	f840 3b04 	str.w	r3, [r0], #4
10013548:	f851 3b04 	ldr.w	r3, [r1], #4
1001354c:	f840 3b04 	str.w	r3, [r0], #4
10013550:	f851 3b04 	ldr.w	r3, [r1], #4
10013554:	f840 3b04 	str.w	r3, [r0], #4
10013558:	3a10      	subs	r2, #16
1001355a:	d2ed      	bcs.n	10013538 <memcpy+0x98>
1001355c:	320c      	adds	r2, #12
1001355e:	d305      	bcc.n	1001356c <memcpy+0xcc>
10013560:	f851 3b04 	ldr.w	r3, [r1], #4
10013564:	f840 3b04 	str.w	r3, [r0], #4
10013568:	3a04      	subs	r2, #4
1001356a:	d2f9      	bcs.n	10013560 <memcpy+0xc0>
1001356c:	3204      	adds	r2, #4
1001356e:	d008      	beq.n	10013582 <memcpy+0xe2>
10013570:	07d2      	lsls	r2, r2, #31
10013572:	bf1c      	itt	ne
10013574:	f811 3b01 	ldrbne.w	r3, [r1], #1
10013578:	f800 3b01 	strbne.w	r3, [r0], #1
1001357c:	d301      	bcc.n	10013582 <memcpy+0xe2>
1001357e:	880b      	ldrh	r3, [r1, #0]
10013580:	8003      	strh	r3, [r0, #0]
10013582:	4660      	mov	r0, ip
10013584:	4770      	bx	lr
10013586:	bf00      	nop
10013588:	2a08      	cmp	r2, #8
1001358a:	d313      	bcc.n	100135b4 <memcpy+0x114>
1001358c:	078b      	lsls	r3, r1, #30
1001358e:	d08d      	beq.n	100134ac <memcpy+0xc>
10013590:	f010 0303 	ands.w	r3, r0, #3
10013594:	d08a      	beq.n	100134ac <memcpy+0xc>
10013596:	f1c3 0304 	rsb	r3, r3, #4
1001359a:	1ad2      	subs	r2, r2, r3
1001359c:	07db      	lsls	r3, r3, #31
1001359e:	bf1c      	itt	ne
100135a0:	f811 3b01 	ldrbne.w	r3, [r1], #1
100135a4:	f800 3b01 	strbne.w	r3, [r0], #1
100135a8:	d380      	bcc.n	100134ac <memcpy+0xc>
100135aa:	f831 3b02 	ldrh.w	r3, [r1], #2
100135ae:	f820 3b02 	strh.w	r3, [r0], #2
100135b2:	e77b      	b.n	100134ac <memcpy+0xc>
100135b4:	3a04      	subs	r2, #4
100135b6:	d3d9      	bcc.n	1001356c <memcpy+0xcc>
100135b8:	3a01      	subs	r2, #1
100135ba:	f811 3b01 	ldrb.w	r3, [r1], #1
100135be:	f800 3b01 	strb.w	r3, [r0], #1
100135c2:	d2f9      	bcs.n	100135b8 <memcpy+0x118>
100135c4:	780b      	ldrb	r3, [r1, #0]
100135c6:	7003      	strb	r3, [r0, #0]
100135c8:	784b      	ldrb	r3, [r1, #1]
100135ca:	7043      	strb	r3, [r0, #1]
100135cc:	788b      	ldrb	r3, [r1, #2]
100135ce:	7083      	strb	r3, [r0, #2]
100135d0:	4660      	mov	r0, ip
100135d2:	4770      	bx	lr
	...

10013600 <strlen>:
10013600:	b430      	push	{r4, r5}
10013602:	f890 f000 	pld	[r0]
10013606:	f020 0107 	bic.w	r1, r0, #7
1001360a:	f06f 0c00 	mvn.w	ip, #0
1001360e:	f010 0407 	ands.w	r4, r0, #7
10013612:	f891 f020 	pld	[r1, #32]
10013616:	f040 8048 	bne.w	100136aa <strlen+0xaa>
1001361a:	f04f 0400 	mov.w	r4, #0
1001361e:	f06f 0007 	mvn.w	r0, #7
10013622:	e9d1 2300 	ldrd	r2, r3, [r1]
10013626:	f891 f040 	pld	[r1, #64]	@ 0x40
1001362a:	f100 0008 	add.w	r0, r0, #8
1001362e:	fa82 f24c 	uadd8	r2, r2, ip
10013632:	faa4 f28c 	sel	r2, r4, ip
10013636:	fa83 f34c 	uadd8	r3, r3, ip
1001363a:	faa2 f38c 	sel	r3, r2, ip
1001363e:	bb4b      	cbnz	r3, 10013694 <strlen+0x94>
10013640:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
10013644:	fa82 f24c 	uadd8	r2, r2, ip
10013648:	f100 0008 	add.w	r0, r0, #8
1001364c:	faa4 f28c 	sel	r2, r4, ip
10013650:	fa83 f34c 	uadd8	r3, r3, ip
10013654:	faa2 f38c 	sel	r3, r2, ip
10013658:	b9e3      	cbnz	r3, 10013694 <strlen+0x94>
1001365a:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1001365e:	fa82 f24c 	uadd8	r2, r2, ip
10013662:	f100 0008 	add.w	r0, r0, #8
10013666:	faa4 f28c 	sel	r2, r4, ip
1001366a:	fa83 f34c 	uadd8	r3, r3, ip
1001366e:	faa2 f38c 	sel	r3, r2, ip
10013672:	b97b      	cbnz	r3, 10013694 <strlen+0x94>
10013674:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
10013678:	f101 0120 	add.w	r1, r1, #32
1001367c:	fa82 f24c 	uadd8	r2, r2, ip
10013680:	f100 0008 	add.w	r0, r0, #8
10013684:	faa4 f28c 	sel	r2, r4, ip
10013688:	fa83 f34c 	uadd8	r3, r3, ip
1001368c:	faa2 f38c 	sel	r3, r2, ip
10013690:	2b00      	cmp	r3, #0
10013692:	d0c6      	beq.n	10013622 <strlen+0x22>
10013694:	2a00      	cmp	r2, #0
10013696:	bf04      	itt	eq
10013698:	3004      	addeq	r0, #4
1001369a:	461a      	moveq	r2, r3
1001369c:	ba12      	rev	r2, r2
1001369e:	fab2 f282 	clz	r2, r2
100136a2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
100136a6:	bc30      	pop	{r4, r5}
100136a8:	4770      	bx	lr
100136aa:	e9d1 2300 	ldrd	r2, r3, [r1]
100136ae:	f004 0503 	and.w	r5, r4, #3
100136b2:	f1c4 0000 	rsb	r0, r4, #0
100136b6:	ea4f 05c5 	mov.w	r5, r5, lsl #3
100136ba:	f014 0f04 	tst.w	r4, #4
100136be:	f891 f040 	pld	[r1, #64]	@ 0x40
100136c2:	fa0c f505 	lsl.w	r5, ip, r5
100136c6:	ea62 0205 	orn	r2, r2, r5
100136ca:	bf1c      	itt	ne
100136cc:	ea63 0305 	ornne	r3, r3, r5
100136d0:	4662      	movne	r2, ip
100136d2:	f04f 0400 	mov.w	r4, #0
100136d6:	e7aa      	b.n	1001362e <strlen+0x2e>

100136d8 <frexp>:
100136d8:	f8df c064 	ldr.w	ip, [pc, #100]	@ 10013740 <frexp+0x68>
100136dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100136de:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
100136e2:	2700      	movs	r7, #0
100136e4:	4563      	cmp	r3, ip
100136e6:	4604      	mov	r4, r0
100136e8:	460d      	mov	r5, r1
100136ea:	4616      	mov	r6, r2
100136ec:	6017      	str	r7, [r2, #0]
100136ee:	d822      	bhi.n	10013736 <frexp+0x5e>
100136f0:	4684      	mov	ip, r0
100136f2:	ea53 0c0c 	orrs.w	ip, r3, ip
100136f6:	d01e      	beq.n	10013736 <frexp+0x5e>
100136f8:	f8df c048 	ldr.w	ip, [pc, #72]	@ 10013744 <frexp+0x6c>
100136fc:	ea01 0c0c 	and.w	ip, r1, ip
10013700:	460a      	mov	r2, r1
10013702:	f1bc 0f00 	cmp.w	ip, #0
10013706:	d109      	bne.n	1001371c <frexp+0x44>
10013708:	4b0c      	ldr	r3, [pc, #48]	@ (1001373c <frexp+0x64>)
1001370a:	2200      	movs	r2, #0
1001370c:	f004 ff78 	bl	10018600 <__aeabi_dmul>
10013710:	f06f 0735 	mvn.w	r7, #53	@ 0x35
10013714:	4604      	mov	r4, r0
10013716:	460a      	mov	r2, r1
10013718:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
1001371c:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
10013720:	151b      	asrs	r3, r3, #20
10013722:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
10013726:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
1001372a:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
1001372e:	443b      	add	r3, r7
10013730:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
10013734:	6033      	str	r3, [r6, #0]
10013736:	4620      	mov	r0, r4
10013738:	4629      	mov	r1, r5
1001373a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001373c:	43500000 	.word	0x43500000
10013740:	7fefffff 	.word	0x7fefffff
10013744:	7ff00000 	.word	0x7ff00000

10013748 <_malloc_trim_r>:
10013748:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001374c:	4606      	mov	r6, r0
1001374e:	2008      	movs	r0, #8
10013750:	4689      	mov	r9, r1
10013752:	f7fe fd37 	bl	100121c4 <sysconf>
10013756:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 100137fc <_malloc_trim_r+0xb4>
1001375a:	4605      	mov	r5, r0
1001375c:	4630      	mov	r0, r6
1001375e:	f7fe fda7 	bl	100122b0 <__malloc_lock>
10013762:	f8d8 3008 	ldr.w	r3, [r8, #8]
10013766:	685f      	ldr	r7, [r3, #4]
10013768:	f027 0703 	bic.w	r7, r7, #3
1001376c:	f1a7 0411 	sub.w	r4, r7, #17
10013770:	eba4 0409 	sub.w	r4, r4, r9
10013774:	442c      	add	r4, r5
10013776:	fbb4 f4f5 	udiv	r4, r4, r5
1001377a:	3c01      	subs	r4, #1
1001377c:	fb05 f404 	mul.w	r4, r5, r4
10013780:	42a5      	cmp	r5, r4
10013782:	dc08      	bgt.n	10013796 <_malloc_trim_r+0x4e>
10013784:	2100      	movs	r1, #0
10013786:	4630      	mov	r0, r6
10013788:	f000 f9c2 	bl	10013b10 <_sbrk_r>
1001378c:	f8d8 3008 	ldr.w	r3, [r8, #8]
10013790:	443b      	add	r3, r7
10013792:	4298      	cmp	r0, r3
10013794:	d005      	beq.n	100137a2 <_malloc_trim_r+0x5a>
10013796:	4630      	mov	r0, r6
10013798:	f7fe fd90 	bl	100122bc <__malloc_unlock>
1001379c:	2000      	movs	r0, #0
1001379e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
100137a2:	4261      	negs	r1, r4
100137a4:	4630      	mov	r0, r6
100137a6:	f000 f9b3 	bl	10013b10 <_sbrk_r>
100137aa:	3001      	adds	r0, #1
100137ac:	d00f      	beq.n	100137ce <_malloc_trim_r+0x86>
100137ae:	4a11      	ldr	r2, [pc, #68]	@ (100137f4 <_malloc_trim_r+0xac>)
100137b0:	f8d8 3008 	ldr.w	r3, [r8, #8]
100137b4:	1b3f      	subs	r7, r7, r4
100137b6:	f047 0701 	orr.w	r7, r7, #1
100137ba:	605f      	str	r7, [r3, #4]
100137bc:	6813      	ldr	r3, [r2, #0]
100137be:	4630      	mov	r0, r6
100137c0:	1b1b      	subs	r3, r3, r4
100137c2:	6013      	str	r3, [r2, #0]
100137c4:	f7fe fd7a 	bl	100122bc <__malloc_unlock>
100137c8:	2001      	movs	r0, #1
100137ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
100137ce:	2100      	movs	r1, #0
100137d0:	4630      	mov	r0, r6
100137d2:	f000 f99d 	bl	10013b10 <_sbrk_r>
100137d6:	f8d8 2008 	ldr.w	r2, [r8, #8]
100137da:	1a83      	subs	r3, r0, r2
100137dc:	2b0f      	cmp	r3, #15
100137de:	ddda      	ble.n	10013796 <_malloc_trim_r+0x4e>
100137e0:	f043 0301 	orr.w	r3, r3, #1
100137e4:	6053      	str	r3, [r2, #4]
100137e6:	4b04      	ldr	r3, [pc, #16]	@ (100137f8 <_malloc_trim_r+0xb0>)
100137e8:	4902      	ldr	r1, [pc, #8]	@ (100137f4 <_malloc_trim_r+0xac>)
100137ea:	681b      	ldr	r3, [r3, #0]
100137ec:	1ac0      	subs	r0, r0, r3
100137ee:	6008      	str	r0, [r1, #0]
100137f0:	e7d1      	b.n	10013796 <_malloc_trim_r+0x4e>
100137f2:	bf00      	nop
100137f4:	2000142c 	.word	0x2000142c
100137f8:	20000038 	.word	0x20000038
100137fc:	20000040 	.word	0x20000040

10013800 <_free_r>:
10013800:	2900      	cmp	r1, #0
10013802:	d07c      	beq.n	100138fe <_free_r+0xfe>
10013804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10013808:	460c      	mov	r4, r1
1001380a:	4680      	mov	r8, r0
1001380c:	f7fe fd50 	bl	100122b0 <__malloc_lock>
10013810:	f854 3c04 	ldr.w	r3, [r4, #-4]
10013814:	4f76      	ldr	r7, [pc, #472]	@ (100139f0 <_free_r+0x1f0>)
10013816:	f1a4 0508 	sub.w	r5, r4, #8
1001381a:	f023 0101 	bic.w	r1, r3, #1
1001381e:	1868      	adds	r0, r5, r1
10013820:	68be      	ldr	r6, [r7, #8]
10013822:	6842      	ldr	r2, [r0, #4]
10013824:	4286      	cmp	r6, r0
10013826:	f022 0203 	bic.w	r2, r2, #3
1001382a:	f000 8083 	beq.w	10013934 <_free_r+0x134>
1001382e:	07de      	lsls	r6, r3, #31
10013830:	6042      	str	r2, [r0, #4]
10013832:	eb00 0c02 	add.w	ip, r0, r2
10013836:	d433      	bmi.n	100138a0 <_free_r+0xa0>
10013838:	f854 4c08 	ldr.w	r4, [r4, #-8]
1001383c:	f8dc 3004 	ldr.w	r3, [ip, #4]
10013840:	1b2d      	subs	r5, r5, r4
10013842:	4421      	add	r1, r4
10013844:	68ac      	ldr	r4, [r5, #8]
10013846:	f107 0c08 	add.w	ip, r7, #8
1001384a:	4564      	cmp	r4, ip
1001384c:	f003 0301 	and.w	r3, r3, #1
10013850:	d064      	beq.n	1001391c <_free_r+0x11c>
10013852:	f8d5 e00c 	ldr.w	lr, [r5, #12]
10013856:	f8c4 e00c 	str.w	lr, [r4, #12]
1001385a:	f8ce 4008 	str.w	r4, [lr, #8]
1001385e:	2b00      	cmp	r3, #0
10013860:	f000 8081 	beq.w	10013966 <_free_r+0x166>
10013864:	f041 0301 	orr.w	r3, r1, #1
10013868:	606b      	str	r3, [r5, #4]
1001386a:	6001      	str	r1, [r0, #0]
1001386c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10013870:	d222      	bcs.n	100138b8 <_free_r+0xb8>
10013872:	6878      	ldr	r0, [r7, #4]
10013874:	08cb      	lsrs	r3, r1, #3
10013876:	2201      	movs	r2, #1
10013878:	0949      	lsrs	r1, r1, #5
1001387a:	3301      	adds	r3, #1
1001387c:	408a      	lsls	r2, r1
1001387e:	4302      	orrs	r2, r0
10013880:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
10013884:	607a      	str	r2, [r7, #4]
10013886:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
1001388a:	3a08      	subs	r2, #8
1001388c:	e9c5 1202 	strd	r1, r2, [r5, #8]
10013890:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
10013894:	60cd      	str	r5, [r1, #12]
10013896:	4640      	mov	r0, r8
10013898:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
1001389c:	f7fe bd0e 	b.w	100122bc <__malloc_unlock>
100138a0:	f8dc 3004 	ldr.w	r3, [ip, #4]
100138a4:	07db      	lsls	r3, r3, #31
100138a6:	d52b      	bpl.n	10013900 <_free_r+0x100>
100138a8:	f041 0301 	orr.w	r3, r1, #1
100138ac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100138b0:	f844 3c04 	str.w	r3, [r4, #-4]
100138b4:	6001      	str	r1, [r0, #0]
100138b6:	d3dc      	bcc.n	10013872 <_free_r+0x72>
100138b8:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
100138bc:	ea4f 2351 	mov.w	r3, r1, lsr #9
100138c0:	d253      	bcs.n	1001396a <_free_r+0x16a>
100138c2:	098b      	lsrs	r3, r1, #6
100138c4:	f103 0039 	add.w	r0, r3, #57	@ 0x39
100138c8:	f103 0238 	add.w	r2, r3, #56	@ 0x38
100138cc:	00c3      	lsls	r3, r0, #3
100138ce:	18f8      	adds	r0, r7, r3
100138d0:	58fb      	ldr	r3, [r7, r3]
100138d2:	3808      	subs	r0, #8
100138d4:	4298      	cmp	r0, r3
100138d6:	d103      	bne.n	100138e0 <_free_r+0xe0>
100138d8:	e063      	b.n	100139a2 <_free_r+0x1a2>
100138da:	689b      	ldr	r3, [r3, #8]
100138dc:	4298      	cmp	r0, r3
100138de:	d004      	beq.n	100138ea <_free_r+0xea>
100138e0:	685a      	ldr	r2, [r3, #4]
100138e2:	f022 0203 	bic.w	r2, r2, #3
100138e6:	428a      	cmp	r2, r1
100138e8:	d8f7      	bhi.n	100138da <_free_r+0xda>
100138ea:	68d8      	ldr	r0, [r3, #12]
100138ec:	e9c5 3002 	strd	r3, r0, [r5, #8]
100138f0:	6085      	str	r5, [r0, #8]
100138f2:	60dd      	str	r5, [r3, #12]
100138f4:	4640      	mov	r0, r8
100138f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
100138fa:	f7fe bcdf 	b.w	100122bc <__malloc_unlock>
100138fe:	4770      	bx	lr
10013900:	4411      	add	r1, r2
10013902:	f107 0c08 	add.w	ip, r7, #8
10013906:	6883      	ldr	r3, [r0, #8]
10013908:	4563      	cmp	r3, ip
1001390a:	d03f      	beq.n	1001398c <_free_r+0x18c>
1001390c:	68c2      	ldr	r2, [r0, #12]
1001390e:	60da      	str	r2, [r3, #12]
10013910:	6093      	str	r3, [r2, #8]
10013912:	f041 0301 	orr.w	r3, r1, #1
10013916:	606b      	str	r3, [r5, #4]
10013918:	5069      	str	r1, [r5, r1]
1001391a:	e7a7      	b.n	1001386c <_free_r+0x6c>
1001391c:	2b00      	cmp	r3, #0
1001391e:	d161      	bne.n	100139e4 <_free_r+0x1e4>
10013920:	440a      	add	r2, r1
10013922:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
10013926:	60cb      	str	r3, [r1, #12]
10013928:	6099      	str	r1, [r3, #8]
1001392a:	f042 0301 	orr.w	r3, r2, #1
1001392e:	606b      	str	r3, [r5, #4]
10013930:	50aa      	str	r2, [r5, r2]
10013932:	e7b0      	b.n	10013896 <_free_r+0x96>
10013934:	07db      	lsls	r3, r3, #31
10013936:	440a      	add	r2, r1
10013938:	d407      	bmi.n	1001394a <_free_r+0x14a>
1001393a:	f854 3c08 	ldr.w	r3, [r4, #-8]
1001393e:	1aed      	subs	r5, r5, r3
10013940:	441a      	add	r2, r3
10013942:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
10013946:	60cb      	str	r3, [r1, #12]
10013948:	6099      	str	r1, [r3, #8]
1001394a:	f042 0301 	orr.w	r3, r2, #1
1001394e:	606b      	str	r3, [r5, #4]
10013950:	4b28      	ldr	r3, [pc, #160]	@ (100139f4 <_free_r+0x1f4>)
10013952:	60bd      	str	r5, [r7, #8]
10013954:	681b      	ldr	r3, [r3, #0]
10013956:	4293      	cmp	r3, r2
10013958:	d89d      	bhi.n	10013896 <_free_r+0x96>
1001395a:	4b27      	ldr	r3, [pc, #156]	@ (100139f8 <_free_r+0x1f8>)
1001395c:	4640      	mov	r0, r8
1001395e:	6819      	ldr	r1, [r3, #0]
10013960:	f7ff fef2 	bl	10013748 <_malloc_trim_r>
10013964:	e797      	b.n	10013896 <_free_r+0x96>
10013966:	4411      	add	r1, r2
10013968:	e7cd      	b.n	10013906 <_free_r+0x106>
1001396a:	2b14      	cmp	r3, #20
1001396c:	d908      	bls.n	10013980 <_free_r+0x180>
1001396e:	2b54      	cmp	r3, #84	@ 0x54
10013970:	d81f      	bhi.n	100139b2 <_free_r+0x1b2>
10013972:	0b0b      	lsrs	r3, r1, #12
10013974:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
10013978:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
1001397c:	00c3      	lsls	r3, r0, #3
1001397e:	e7a6      	b.n	100138ce <_free_r+0xce>
10013980:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
10013984:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
10013988:	00c3      	lsls	r3, r0, #3
1001398a:	e7a0      	b.n	100138ce <_free_r+0xce>
1001398c:	f041 0301 	orr.w	r3, r1, #1
10013990:	613d      	str	r5, [r7, #16]
10013992:	617d      	str	r5, [r7, #20]
10013994:	f8c5 c008 	str.w	ip, [r5, #8]
10013998:	f8c5 c00c 	str.w	ip, [r5, #12]
1001399c:	606b      	str	r3, [r5, #4]
1001399e:	5069      	str	r1, [r5, r1]
100139a0:	e779      	b.n	10013896 <_free_r+0x96>
100139a2:	6879      	ldr	r1, [r7, #4]
100139a4:	1092      	asrs	r2, r2, #2
100139a6:	2401      	movs	r4, #1
100139a8:	fa04 f202 	lsl.w	r2, r4, r2
100139ac:	430a      	orrs	r2, r1
100139ae:	607a      	str	r2, [r7, #4]
100139b0:	e79c      	b.n	100138ec <_free_r+0xec>
100139b2:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
100139b6:	d806      	bhi.n	100139c6 <_free_r+0x1c6>
100139b8:	0bcb      	lsrs	r3, r1, #15
100139ba:	f103 0078 	add.w	r0, r3, #120	@ 0x78
100139be:	f103 0277 	add.w	r2, r3, #119	@ 0x77
100139c2:	00c3      	lsls	r3, r0, #3
100139c4:	e783      	b.n	100138ce <_free_r+0xce>
100139c6:	f240 5254 	movw	r2, #1364	@ 0x554
100139ca:	4293      	cmp	r3, r2
100139cc:	d806      	bhi.n	100139dc <_free_r+0x1dc>
100139ce:	0c8b      	lsrs	r3, r1, #18
100139d0:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
100139d4:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
100139d8:	00c3      	lsls	r3, r0, #3
100139da:	e778      	b.n	100138ce <_free_r+0xce>
100139dc:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100139e0:	227e      	movs	r2, #126	@ 0x7e
100139e2:	e774      	b.n	100138ce <_free_r+0xce>
100139e4:	f041 0301 	orr.w	r3, r1, #1
100139e8:	606b      	str	r3, [r5, #4]
100139ea:	6001      	str	r1, [r0, #0]
100139ec:	e753      	b.n	10013896 <_free_r+0x96>
100139ee:	bf00      	nop
100139f0:	20000040 	.word	0x20000040
100139f4:	2000003c 	.word	0x2000003c
100139f8:	2000145c 	.word	0x2000145c

100139fc <strncpy>:
100139fc:	ea40 0301 	orr.w	r3, r0, r1
10013a00:	079b      	lsls	r3, r3, #30
10013a02:	b510      	push	{r4, lr}
10013a04:	d101      	bne.n	10013a0a <strncpy+0xe>
10013a06:	2a03      	cmp	r2, #3
10013a08:	d817      	bhi.n	10013a3a <strncpy+0x3e>
10013a0a:	4684      	mov	ip, r0
10013a0c:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10013a10:	e007      	b.n	10013a22 <strncpy+0x26>
10013a12:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
10013a16:	f803 1b01 	strb.w	r1, [r3], #1
10013a1a:	1e54      	subs	r4, r2, #1
10013a1c:	b129      	cbz	r1, 10013a2a <strncpy+0x2e>
10013a1e:	469c      	mov	ip, r3
10013a20:	4622      	mov	r2, r4
10013a22:	4663      	mov	r3, ip
10013a24:	2a00      	cmp	r2, #0
10013a26:	d1f4      	bne.n	10013a12 <strncpy+0x16>
10013a28:	bd10      	pop	{r4, pc}
10013a2a:	4494      	add	ip, r2
10013a2c:	2c00      	cmp	r4, #0
10013a2e:	d0fb      	beq.n	10013a28 <strncpy+0x2c>
10013a30:	f803 1b01 	strb.w	r1, [r3], #1
10013a34:	4563      	cmp	r3, ip
10013a36:	d1fb      	bne.n	10013a30 <strncpy+0x34>
10013a38:	bd10      	pop	{r4, pc}
10013a3a:	468e      	mov	lr, r1
10013a3c:	4684      	mov	ip, r0
10013a3e:	f8de 4000 	ldr.w	r4, [lr]
10013a42:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
10013a46:	ea23 0304 	bic.w	r3, r3, r4
10013a4a:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
10013a4e:	4671      	mov	r1, lr
10013a50:	f10e 0e04 	add.w	lr, lr, #4
10013a54:	d1da      	bne.n	10013a0c <strncpy+0x10>
10013a56:	3a04      	subs	r2, #4
10013a58:	2a03      	cmp	r2, #3
10013a5a:	f84c 4b04 	str.w	r4, [ip], #4
10013a5e:	d8ee      	bhi.n	10013a3e <strncpy+0x42>
10013a60:	4671      	mov	r1, lr
10013a62:	e7d3      	b.n	10013a0c <strncpy+0x10>

10013a64 <__sread>:
10013a64:	b510      	push	{r4, lr}
10013a66:	460c      	mov	r4, r1
10013a68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10013a6c:	f004 fac0 	bl	10017ff0 <_read_r>
10013a70:	2800      	cmp	r0, #0
10013a72:	db03      	blt.n	10013a7c <__sread+0x18>
10013a74:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10013a76:	4403      	add	r3, r0
10013a78:	6523      	str	r3, [r4, #80]	@ 0x50
10013a7a:	bd10      	pop	{r4, pc}
10013a7c:	89a3      	ldrh	r3, [r4, #12]
10013a7e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10013a82:	81a3      	strh	r3, [r4, #12]
10013a84:	bd10      	pop	{r4, pc}
10013a86:	bf00      	nop

10013a88 <__swrite>:
10013a88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10013a8c:	460c      	mov	r4, r1
10013a8e:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10013a92:	461f      	mov	r7, r3
10013a94:	05cb      	lsls	r3, r1, #23
10013a96:	4605      	mov	r5, r0
10013a98:	4616      	mov	r6, r2
10013a9a:	d40b      	bmi.n	10013ab4 <__swrite+0x2c>
10013a9c:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10013aa0:	81a1      	strh	r1, [r4, #12]
10013aa2:	463b      	mov	r3, r7
10013aa4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10013aa8:	4632      	mov	r2, r6
10013aaa:	4628      	mov	r0, r5
10013aac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10013ab0:	f000 b9c0 	b.w	10013e34 <_write_r>
10013ab4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10013ab8:	2302      	movs	r3, #2
10013aba:	2200      	movs	r2, #0
10013abc:	f004 fa82 	bl	10017fc4 <_lseek_r>
10013ac0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
10013ac4:	e7ea      	b.n	10013a9c <__swrite+0x14>
10013ac6:	bf00      	nop

10013ac8 <__sseek>:
10013ac8:	b510      	push	{r4, lr}
10013aca:	460c      	mov	r4, r1
10013acc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10013ad0:	f004 fa78 	bl	10017fc4 <_lseek_r>
10013ad4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013ad8:	1c42      	adds	r2, r0, #1
10013ada:	bf0e      	itee	eq
10013adc:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
10013ae0:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
10013ae4:	6520      	strne	r0, [r4, #80]	@ 0x50
10013ae6:	81a3      	strh	r3, [r4, #12]
10013ae8:	bd10      	pop	{r4, pc}
10013aea:	bf00      	nop

10013aec <__sclose>:
10013aec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10013af0:	f003 bfc6 	b.w	10017a80 <_close_r>

10013af4 <__ascii_wctomb>:
10013af4:	b149      	cbz	r1, 10013b0a <__ascii_wctomb+0x16>
10013af6:	2aff      	cmp	r2, #255	@ 0xff
10013af8:	d802      	bhi.n	10013b00 <__ascii_wctomb+0xc>
10013afa:	700a      	strb	r2, [r1, #0]
10013afc:	2001      	movs	r0, #1
10013afe:	4770      	bx	lr
10013b00:	238a      	movs	r3, #138	@ 0x8a
10013b02:	6003      	str	r3, [r0, #0]
10013b04:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013b08:	4770      	bx	lr
10013b0a:	4608      	mov	r0, r1
10013b0c:	4770      	bx	lr
10013b0e:	bf00      	nop

10013b10 <_sbrk_r>:
10013b10:	b538      	push	{r3, r4, r5, lr}
10013b12:	4d07      	ldr	r5, [pc, #28]	@ (10013b30 <_sbrk_r+0x20>)
10013b14:	2200      	movs	r2, #0
10013b16:	4604      	mov	r4, r0
10013b18:	4608      	mov	r0, r1
10013b1a:	602a      	str	r2, [r5, #0]
10013b1c:	f7fa ffc6 	bl	1000eaac <_sbrk>
10013b20:	1c43      	adds	r3, r0, #1
10013b22:	d000      	beq.n	10013b26 <_sbrk_r+0x16>
10013b24:	bd38      	pop	{r3, r4, r5, pc}
10013b26:	682b      	ldr	r3, [r5, #0]
10013b28:	2b00      	cmp	r3, #0
10013b2a:	d0fb      	beq.n	10013b24 <_sbrk_r+0x14>
10013b2c:	6023      	str	r3, [r4, #0]
10013b2e:	bd38      	pop	{r3, r4, r5, pc}
10013b30:	2000173c 	.word	0x2000173c

10013b34 <__sfvwrite_r>:
10013b34:	6893      	ldr	r3, [r2, #8]
10013b36:	2b00      	cmp	r3, #0
10013b38:	f000 80f8 	beq.w	10013d2c <__sfvwrite_r+0x1f8>
10013b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013b40:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
10013b44:	f01c 0f08 	tst.w	ip, #8
10013b48:	b083      	sub	sp, #12
10013b4a:	4690      	mov	r8, r2
10013b4c:	4681      	mov	r9, r0
10013b4e:	460c      	mov	r4, r1
10013b50:	d031      	beq.n	10013bb6 <__sfvwrite_r+0x82>
10013b52:	690b      	ldr	r3, [r1, #16]
10013b54:	b37b      	cbz	r3, 10013bb6 <__sfvwrite_r+0x82>
10013b56:	f01c 0702 	ands.w	r7, ip, #2
10013b5a:	f8d8 6000 	ldr.w	r6, [r8]
10013b5e:	d038      	beq.n	10013bd2 <__sfvwrite_r+0x9e>
10013b60:	2700      	movs	r7, #0
10013b62:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10013b66:	69e1      	ldr	r1, [r4, #28]
10013b68:	f8df a2c4 	ldr.w	sl, [pc, #708]	@ 10013e30 <__sfvwrite_r+0x2fc>
10013b6c:	463d      	mov	r5, r7
10013b6e:	4555      	cmp	r5, sl
10013b70:	462b      	mov	r3, r5
10013b72:	463a      	mov	r2, r7
10013b74:	bf28      	it	cs
10013b76:	4653      	movcs	r3, sl
10013b78:	4648      	mov	r0, r9
10013b7a:	b1c5      	cbz	r5, 10013bae <__sfvwrite_r+0x7a>
10013b7c:	47d8      	blx	fp
10013b7e:	2800      	cmp	r0, #0
10013b80:	f340 80ca 	ble.w	10013d18 <__sfvwrite_r+0x1e4>
10013b84:	f8d8 3008 	ldr.w	r3, [r8, #8]
10013b88:	1a1b      	subs	r3, r3, r0
10013b8a:	4407      	add	r7, r0
10013b8c:	1a2d      	subs	r5, r5, r0
10013b8e:	f8c8 3008 	str.w	r3, [r8, #8]
10013b92:	2b00      	cmp	r3, #0
10013b94:	f000 80b6 	beq.w	10013d04 <__sfvwrite_r+0x1d0>
10013b98:	4555      	cmp	r5, sl
10013b9a:	462b      	mov	r3, r5
10013b9c:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10013ba0:	69e1      	ldr	r1, [r4, #28]
10013ba2:	bf28      	it	cs
10013ba4:	4653      	movcs	r3, sl
10013ba6:	463a      	mov	r2, r7
10013ba8:	4648      	mov	r0, r9
10013baa:	2d00      	cmp	r5, #0
10013bac:	d1e6      	bne.n	10013b7c <__sfvwrite_r+0x48>
10013bae:	e9d6 7500 	ldrd	r7, r5, [r6]
10013bb2:	3608      	adds	r6, #8
10013bb4:	e7db      	b.n	10013b6e <__sfvwrite_r+0x3a>
10013bb6:	4621      	mov	r1, r4
10013bb8:	4648      	mov	r0, r9
10013bba:	f003 fa13 	bl	10016fe4 <__swsetup_r>
10013bbe:	2800      	cmp	r0, #0
10013bc0:	f040 80af 	bne.w	10013d22 <__sfvwrite_r+0x1ee>
10013bc4:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10013bc8:	f8d8 6000 	ldr.w	r6, [r8]
10013bcc:	f01c 0702 	ands.w	r7, ip, #2
10013bd0:	d1c6      	bne.n	10013b60 <__sfvwrite_r+0x2c>
10013bd2:	f01c 0a01 	ands.w	sl, ip, #1
10013bd6:	d163      	bne.n	10013ca0 <__sfvwrite_r+0x16c>
10013bd8:	6823      	ldr	r3, [r4, #0]
10013bda:	68a1      	ldr	r1, [r4, #8]
10013bdc:	4657      	mov	r7, sl
10013bde:	4618      	mov	r0, r3
10013be0:	468b      	mov	fp, r1
10013be2:	2f00      	cmp	r7, #0
10013be4:	d058      	beq.n	10013c98 <__sfvwrite_r+0x164>
10013be6:	f41c 7f00 	tst.w	ip, #512	@ 0x200
10013bea:	f000 80b5 	beq.w	10013d58 <__sfvwrite_r+0x224>
10013bee:	42b9      	cmp	r1, r7
10013bf0:	460a      	mov	r2, r1
10013bf2:	f200 80e1 	bhi.w	10013db8 <__sfvwrite_r+0x284>
10013bf6:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
10013bfa:	d02f      	beq.n	10013c5c <__sfvwrite_r+0x128>
10013bfc:	6921      	ldr	r1, [r4, #16]
10013bfe:	6962      	ldr	r2, [r4, #20]
10013c00:	1a5d      	subs	r5, r3, r1
10013c02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
10013c06:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10013c0a:	1c6b      	adds	r3, r5, #1
10013c0c:	1052      	asrs	r2, r2, #1
10013c0e:	443b      	add	r3, r7
10013c10:	4293      	cmp	r3, r2
10013c12:	bf92      	itee	ls
10013c14:	4693      	movls	fp, r2
10013c16:	469b      	movhi	fp, r3
10013c18:	461a      	movhi	r2, r3
10013c1a:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
10013c1e:	f000 80ea 	beq.w	10013df6 <__sfvwrite_r+0x2c2>
10013c22:	4611      	mov	r1, r2
10013c24:	4648      	mov	r0, r9
10013c26:	f7fd ff43 	bl	10011ab0 <_malloc_r>
10013c2a:	2800      	cmp	r0, #0
10013c2c:	f000 80f9 	beq.w	10013e22 <__sfvwrite_r+0x2ee>
10013c30:	462a      	mov	r2, r5
10013c32:	6921      	ldr	r1, [r4, #16]
10013c34:	9000      	str	r0, [sp, #0]
10013c36:	f7ff fc33 	bl	100134a0 <memcpy>
10013c3a:	89a2      	ldrh	r2, [r4, #12]
10013c3c:	9b00      	ldr	r3, [sp, #0]
10013c3e:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10013c42:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10013c46:	81a2      	strh	r2, [r4, #12]
10013c48:	1958      	adds	r0, r3, r5
10013c4a:	ebab 0505 	sub.w	r5, fp, r5
10013c4e:	f8c4 b014 	str.w	fp, [r4, #20]
10013c52:	6123      	str	r3, [r4, #16]
10013c54:	60a5      	str	r5, [r4, #8]
10013c56:	6020      	str	r0, [r4, #0]
10013c58:	46bb      	mov	fp, r7
10013c5a:	463a      	mov	r2, r7
10013c5c:	4651      	mov	r1, sl
10013c5e:	9200      	str	r2, [sp, #0]
10013c60:	f003 f8c0 	bl	10016de4 <memmove>
10013c64:	68a1      	ldr	r1, [r4, #8]
10013c66:	6823      	ldr	r3, [r4, #0]
10013c68:	9a00      	ldr	r2, [sp, #0]
10013c6a:	eba1 010b 	sub.w	r1, r1, fp
10013c6e:	441a      	add	r2, r3
10013c70:	463d      	mov	r5, r7
10013c72:	60a1      	str	r1, [r4, #8]
10013c74:	6022      	str	r2, [r4, #0]
10013c76:	2700      	movs	r7, #0
10013c78:	f8d8 3008 	ldr.w	r3, [r8, #8]
10013c7c:	1b5b      	subs	r3, r3, r5
10013c7e:	44aa      	add	sl, r5
10013c80:	f8c8 3008 	str.w	r3, [r8, #8]
10013c84:	2b00      	cmp	r3, #0
10013c86:	d03d      	beq.n	10013d04 <__sfvwrite_r+0x1d0>
10013c88:	6823      	ldr	r3, [r4, #0]
10013c8a:	68a1      	ldr	r1, [r4, #8]
10013c8c:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10013c90:	4618      	mov	r0, r3
10013c92:	468b      	mov	fp, r1
10013c94:	2f00      	cmp	r7, #0
10013c96:	d1a6      	bne.n	10013be6 <__sfvwrite_r+0xb2>
10013c98:	e9d6 a700 	ldrd	sl, r7, [r6]
10013c9c:	3608      	adds	r6, #8
10013c9e:	e79e      	b.n	10013bde <__sfvwrite_r+0xaa>
10013ca0:	4638      	mov	r0, r7
10013ca2:	46bb      	mov	fp, r7
10013ca4:	463d      	mov	r5, r7
10013ca6:	9700      	str	r7, [sp, #0]
10013ca8:	2d00      	cmp	r5, #0
10013caa:	d041      	beq.n	10013d30 <__sfvwrite_r+0x1fc>
10013cac:	2800      	cmp	r0, #0
10013cae:	d046      	beq.n	10013d3e <__sfvwrite_r+0x20a>
10013cb0:	9a00      	ldr	r2, [sp, #0]
10013cb2:	6820      	ldr	r0, [r4, #0]
10013cb4:	68a1      	ldr	r1, [r4, #8]
10013cb6:	e9d4 7304 	ldrd	r7, r3, [r4, #16]
10013cba:	42aa      	cmp	r2, r5
10013cbc:	bf28      	it	cs
10013cbe:	462a      	movcs	r2, r5
10013cc0:	42b8      	cmp	r0, r7
10013cc2:	d904      	bls.n	10013cce <__sfvwrite_r+0x19a>
10013cc4:	eb01 0a03 	add.w	sl, r1, r3
10013cc8:	4552      	cmp	r2, sl
10013cca:	f300 8085 	bgt.w	10013dd8 <__sfvwrite_r+0x2a4>
10013cce:	4293      	cmp	r3, r2
10013cd0:	dc75      	bgt.n	10013dbe <__sfvwrite_r+0x28a>
10013cd2:	69e1      	ldr	r1, [r4, #28]
10013cd4:	6a67      	ldr	r7, [r4, #36]	@ 0x24
10013cd6:	465a      	mov	r2, fp
10013cd8:	4648      	mov	r0, r9
10013cda:	47b8      	blx	r7
10013cdc:	f1b0 0a00 	subs.w	sl, r0, #0
10013ce0:	dd1a      	ble.n	10013d18 <__sfvwrite_r+0x1e4>
10013ce2:	9b00      	ldr	r3, [sp, #0]
10013ce4:	ebb3 030a 	subs.w	r3, r3, sl
10013ce8:	9300      	str	r3, [sp, #0]
10013cea:	d00f      	beq.n	10013d0c <__sfvwrite_r+0x1d8>
10013cec:	2001      	movs	r0, #1
10013cee:	f8d8 3008 	ldr.w	r3, [r8, #8]
10013cf2:	eba3 030a 	sub.w	r3, r3, sl
10013cf6:	44d3      	add	fp, sl
10013cf8:	eba5 050a 	sub.w	r5, r5, sl
10013cfc:	f8c8 3008 	str.w	r3, [r8, #8]
10013d00:	2b00      	cmp	r3, #0
10013d02:	d1d1      	bne.n	10013ca8 <__sfvwrite_r+0x174>
10013d04:	2000      	movs	r0, #0
10013d06:	b003      	add	sp, #12
10013d08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013d0c:	4621      	mov	r1, r4
10013d0e:	4648      	mov	r0, r9
10013d10:	f003 ff64 	bl	10017bdc <_fflush_r>
10013d14:	2800      	cmp	r0, #0
10013d16:	d0ea      	beq.n	10013cee <__sfvwrite_r+0x1ba>
10013d18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013d1c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013d20:	81a3      	strh	r3, [r4, #12]
10013d22:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013d26:	b003      	add	sp, #12
10013d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013d2c:	2000      	movs	r0, #0
10013d2e:	4770      	bx	lr
10013d30:	6875      	ldr	r5, [r6, #4]
10013d32:	4633      	mov	r3, r6
10013d34:	3608      	adds	r6, #8
10013d36:	2d00      	cmp	r5, #0
10013d38:	d0fa      	beq.n	10013d30 <__sfvwrite_r+0x1fc>
10013d3a:	f8d3 b000 	ldr.w	fp, [r3]
10013d3e:	462a      	mov	r2, r5
10013d40:	210a      	movs	r1, #10
10013d42:	4658      	mov	r0, fp
10013d44:	f7ff fb5c 	bl	10013400 <memchr>
10013d48:	2800      	cmp	r0, #0
10013d4a:	d067      	beq.n	10013e1c <__sfvwrite_r+0x2e8>
10013d4c:	3001      	adds	r0, #1
10013d4e:	eba0 030b 	sub.w	r3, r0, fp
10013d52:	9300      	str	r3, [sp, #0]
10013d54:	461a      	mov	r2, r3
10013d56:	e7ac      	b.n	10013cb2 <__sfvwrite_r+0x17e>
10013d58:	6922      	ldr	r2, [r4, #16]
10013d5a:	429a      	cmp	r2, r3
10013d5c:	d314      	bcc.n	10013d88 <__sfvwrite_r+0x254>
10013d5e:	6962      	ldr	r2, [r4, #20]
10013d60:	42ba      	cmp	r2, r7
10013d62:	d811      	bhi.n	10013d88 <__sfvwrite_r+0x254>
10013d64:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10013d68:	42bb      	cmp	r3, r7
10013d6a:	bf28      	it	cs
10013d6c:	463b      	movcs	r3, r7
10013d6e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10013d70:	fb93 f3f2 	sdiv	r3, r3, r2
10013d74:	69e1      	ldr	r1, [r4, #28]
10013d76:	fb02 f303 	mul.w	r3, r2, r3
10013d7a:	4648      	mov	r0, r9
10013d7c:	4652      	mov	r2, sl
10013d7e:	47a8      	blx	r5
10013d80:	1e05      	subs	r5, r0, #0
10013d82:	ddc9      	ble.n	10013d18 <__sfvwrite_r+0x1e4>
10013d84:	1b7f      	subs	r7, r7, r5
10013d86:	e777      	b.n	10013c78 <__sfvwrite_r+0x144>
10013d88:	42b9      	cmp	r1, r7
10013d8a:	bf28      	it	cs
10013d8c:	4639      	movcs	r1, r7
10013d8e:	460d      	mov	r5, r1
10013d90:	4618      	mov	r0, r3
10013d92:	460a      	mov	r2, r1
10013d94:	4651      	mov	r1, sl
10013d96:	f003 f825 	bl	10016de4 <memmove>
10013d9a:	68a1      	ldr	r1, [r4, #8]
10013d9c:	6823      	ldr	r3, [r4, #0]
10013d9e:	1b49      	subs	r1, r1, r5
10013da0:	442b      	add	r3, r5
10013da2:	60a1      	str	r1, [r4, #8]
10013da4:	6023      	str	r3, [r4, #0]
10013da6:	2900      	cmp	r1, #0
10013da8:	d1ec      	bne.n	10013d84 <__sfvwrite_r+0x250>
10013daa:	4621      	mov	r1, r4
10013dac:	4648      	mov	r0, r9
10013dae:	f003 ff15 	bl	10017bdc <_fflush_r>
10013db2:	2800      	cmp	r0, #0
10013db4:	d0e6      	beq.n	10013d84 <__sfvwrite_r+0x250>
10013db6:	e7af      	b.n	10013d18 <__sfvwrite_r+0x1e4>
10013db8:	46bb      	mov	fp, r7
10013dba:	463a      	mov	r2, r7
10013dbc:	e74e      	b.n	10013c5c <__sfvwrite_r+0x128>
10013dbe:	4659      	mov	r1, fp
10013dc0:	9201      	str	r2, [sp, #4]
10013dc2:	f003 f80f 	bl	10016de4 <memmove>
10013dc6:	9a01      	ldr	r2, [sp, #4]
10013dc8:	68a3      	ldr	r3, [r4, #8]
10013dca:	1a9b      	subs	r3, r3, r2
10013dcc:	60a3      	str	r3, [r4, #8]
10013dce:	6823      	ldr	r3, [r4, #0]
10013dd0:	4413      	add	r3, r2
10013dd2:	6023      	str	r3, [r4, #0]
10013dd4:	4692      	mov	sl, r2
10013dd6:	e784      	b.n	10013ce2 <__sfvwrite_r+0x1ae>
10013dd8:	4659      	mov	r1, fp
10013dda:	4652      	mov	r2, sl
10013ddc:	f003 f802 	bl	10016de4 <memmove>
10013de0:	6823      	ldr	r3, [r4, #0]
10013de2:	4453      	add	r3, sl
10013de4:	6023      	str	r3, [r4, #0]
10013de6:	4621      	mov	r1, r4
10013de8:	4648      	mov	r0, r9
10013dea:	f003 fef7 	bl	10017bdc <_fflush_r>
10013dee:	2800      	cmp	r0, #0
10013df0:	f43f af77 	beq.w	10013ce2 <__sfvwrite_r+0x1ae>
10013df4:	e790      	b.n	10013d18 <__sfvwrite_r+0x1e4>
10013df6:	4648      	mov	r0, r9
10013df8:	f003 ff1a 	bl	10017c30 <_realloc_r>
10013dfc:	4603      	mov	r3, r0
10013dfe:	2800      	cmp	r0, #0
10013e00:	f47f af22 	bne.w	10013c48 <__sfvwrite_r+0x114>
10013e04:	6921      	ldr	r1, [r4, #16]
10013e06:	4648      	mov	r0, r9
10013e08:	f7ff fcfa 	bl	10013800 <_free_r>
10013e0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013e10:	220c      	movs	r2, #12
10013e12:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10013e16:	f8c9 2000 	str.w	r2, [r9]
10013e1a:	e77f      	b.n	10013d1c <__sfvwrite_r+0x1e8>
10013e1c:	1c6a      	adds	r2, r5, #1
10013e1e:	9200      	str	r2, [sp, #0]
10013e20:	e747      	b.n	10013cb2 <__sfvwrite_r+0x17e>
10013e22:	220c      	movs	r2, #12
10013e24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013e28:	f8c9 2000 	str.w	r2, [r9]
10013e2c:	e776      	b.n	10013d1c <__sfvwrite_r+0x1e8>
10013e2e:	bf00      	nop
10013e30:	7ffffc00 	.word	0x7ffffc00

10013e34 <_write_r>:
10013e34:	b538      	push	{r3, r4, r5, lr}
10013e36:	460c      	mov	r4, r1
10013e38:	4d08      	ldr	r5, [pc, #32]	@ (10013e5c <_write_r+0x28>)
10013e3a:	4684      	mov	ip, r0
10013e3c:	4611      	mov	r1, r2
10013e3e:	4620      	mov	r0, r4
10013e40:	461a      	mov	r2, r3
10013e42:	2300      	movs	r3, #0
10013e44:	602b      	str	r3, [r5, #0]
10013e46:	4664      	mov	r4, ip
10013e48:	f7fa fce0 	bl	1000e80c <_write>
10013e4c:	1c43      	adds	r3, r0, #1
10013e4e:	d000      	beq.n	10013e52 <_write_r+0x1e>
10013e50:	bd38      	pop	{r3, r4, r5, pc}
10013e52:	682b      	ldr	r3, [r5, #0]
10013e54:	2b00      	cmp	r3, #0
10013e56:	d0fb      	beq.n	10013e50 <_write_r+0x1c>
10013e58:	6023      	str	r3, [r4, #0]
10013e5a:	bd38      	pop	{r3, r4, r5, pc}
10013e5c:	2000173c 	.word	0x2000173c

10013e60 <_fwalk_sglue>:
10013e60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10013e64:	4680      	mov	r8, r0
10013e66:	460f      	mov	r7, r1
10013e68:	4616      	mov	r6, r2
10013e6a:	f04f 0900 	mov.w	r9, #0
10013e6e:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10013e72:	3d01      	subs	r5, #1
10013e74:	d411      	bmi.n	10013e9a <_fwalk_sglue+0x3a>
10013e76:	89a3      	ldrh	r3, [r4, #12]
10013e78:	2b01      	cmp	r3, #1
10013e7a:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
10013e7e:	d908      	bls.n	10013e92 <_fwalk_sglue+0x32>
10013e80:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10013e84:	3301      	adds	r3, #1
10013e86:	4621      	mov	r1, r4
10013e88:	d003      	beq.n	10013e92 <_fwalk_sglue+0x32>
10013e8a:	4640      	mov	r0, r8
10013e8c:	47b8      	blx	r7
10013e8e:	ea49 0900 	orr.w	r9, r9, r0
10013e92:	1c6b      	adds	r3, r5, #1
10013e94:	f104 0468 	add.w	r4, r4, #104	@ 0x68
10013e98:	d1ed      	bne.n	10013e76 <_fwalk_sglue+0x16>
10013e9a:	6836      	ldr	r6, [r6, #0]
10013e9c:	2e00      	cmp	r6, #0
10013e9e:	d1e6      	bne.n	10013e6e <_fwalk_sglue+0xe>
10013ea0:	4648      	mov	r0, r9
10013ea2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10013ea6:	bf00      	nop

10013ea8 <__ssprint_r>:
10013ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013eac:	6893      	ldr	r3, [r2, #8]
10013eae:	6817      	ldr	r7, [r2, #0]
10013eb0:	b083      	sub	sp, #12
10013eb2:	4692      	mov	sl, r2
10013eb4:	2b00      	cmp	r3, #0
10013eb6:	d074      	beq.n	10013fa2 <__ssprint_r+0xfa>
10013eb8:	f04f 0b00 	mov.w	fp, #0
10013ebc:	688b      	ldr	r3, [r1, #8]
10013ebe:	680a      	ldr	r2, [r1, #0]
10013ec0:	4681      	mov	r9, r0
10013ec2:	460c      	mov	r4, r1
10013ec4:	465d      	mov	r5, fp
10013ec6:	e045      	b.n	10013f54 <__ssprint_r+0xac>
10013ec8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013ecc:	f413 6f90 	tst.w	r3, #1152	@ 0x480
10013ed0:	d02c      	beq.n	10013f2c <__ssprint_r+0x84>
10013ed2:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
10013ed6:	1a16      	subs	r6, r2, r0
10013ed8:	eb01 0241 	add.w	r2, r1, r1, lsl #1
10013edc:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10013ee0:	1c71      	adds	r1, r6, #1
10013ee2:	1052      	asrs	r2, r2, #1
10013ee4:	4429      	add	r1, r5
10013ee6:	4291      	cmp	r1, r2
10013ee8:	bf92      	itee	ls
10013eea:	4690      	movls	r8, r2
10013eec:	4688      	movhi	r8, r1
10013eee:	460a      	movhi	r2, r1
10013ef0:	055b      	lsls	r3, r3, #21
10013ef2:	d539      	bpl.n	10013f68 <__ssprint_r+0xc0>
10013ef4:	4611      	mov	r1, r2
10013ef6:	4648      	mov	r0, r9
10013ef8:	f7fd fdda 	bl	10011ab0 <_malloc_r>
10013efc:	9001      	str	r0, [sp, #4]
10013efe:	2800      	cmp	r0, #0
10013f00:	d03d      	beq.n	10013f7e <__ssprint_r+0xd6>
10013f02:	4632      	mov	r2, r6
10013f04:	6921      	ldr	r1, [r4, #16]
10013f06:	f7ff facb 	bl	100134a0 <memcpy>
10013f0a:	89a2      	ldrh	r2, [r4, #12]
10013f0c:	9b01      	ldr	r3, [sp, #4]
10013f0e:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10013f12:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10013f16:	81a2      	strh	r2, [r4, #12]
10013f18:	1998      	adds	r0, r3, r6
10013f1a:	eba8 0606 	sub.w	r6, r8, r6
10013f1e:	60a6      	str	r6, [r4, #8]
10013f20:	f8c4 8014 	str.w	r8, [r4, #20]
10013f24:	6123      	str	r3, [r4, #16]
10013f26:	6020      	str	r0, [r4, #0]
10013f28:	46a8      	mov	r8, r5
10013f2a:	462e      	mov	r6, r5
10013f2c:	4632      	mov	r2, r6
10013f2e:	4659      	mov	r1, fp
10013f30:	f002 ff58 	bl	10016de4 <memmove>
10013f34:	f8da 1008 	ldr.w	r1, [sl, #8]
10013f38:	68a3      	ldr	r3, [r4, #8]
10013f3a:	6822      	ldr	r2, [r4, #0]
10013f3c:	eba3 0308 	sub.w	r3, r3, r8
10013f40:	4432      	add	r2, r6
10013f42:	1b49      	subs	r1, r1, r5
10013f44:	60a3      	str	r3, [r4, #8]
10013f46:	6022      	str	r2, [r4, #0]
10013f48:	f8ca 1008 	str.w	r1, [sl, #8]
10013f4c:	b349      	cbz	r1, 10013fa2 <__ssprint_r+0xfa>
10013f4e:	e9d7 b500 	ldrd	fp, r5, [r7]
10013f52:	3708      	adds	r7, #8
10013f54:	4698      	mov	r8, r3
10013f56:	4610      	mov	r0, r2
10013f58:	2d00      	cmp	r5, #0
10013f5a:	d0f8      	beq.n	10013f4e <__ssprint_r+0xa6>
10013f5c:	429d      	cmp	r5, r3
10013f5e:	461e      	mov	r6, r3
10013f60:	d2b2      	bcs.n	10013ec8 <__ssprint_r+0x20>
10013f62:	46a8      	mov	r8, r5
10013f64:	462e      	mov	r6, r5
10013f66:	e7e1      	b.n	10013f2c <__ssprint_r+0x84>
10013f68:	4601      	mov	r1, r0
10013f6a:	4648      	mov	r0, r9
10013f6c:	f003 fe60 	bl	10017c30 <_realloc_r>
10013f70:	4603      	mov	r3, r0
10013f72:	2800      	cmp	r0, #0
10013f74:	d1d0      	bne.n	10013f18 <__ssprint_r+0x70>
10013f76:	6921      	ldr	r1, [r4, #16]
10013f78:	4648      	mov	r0, r9
10013f7a:	f7ff fc41 	bl	10013800 <_free_r>
10013f7e:	89a3      	ldrh	r3, [r4, #12]
10013f80:	220c      	movs	r2, #12
10013f82:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013f86:	f8c9 2000 	str.w	r2, [r9]
10013f8a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013f8e:	81a3      	strh	r3, [r4, #12]
10013f90:	2200      	movs	r2, #0
10013f92:	2300      	movs	r3, #0
10013f94:	f8ca 2008 	str.w	r2, [sl, #8]
10013f98:	f8ca 3004 	str.w	r3, [sl, #4]
10013f9c:	b003      	add	sp, #12
10013f9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013fa2:	2000      	movs	r0, #0
10013fa4:	2300      	movs	r3, #0
10013fa6:	f8ca 3004 	str.w	r3, [sl, #4]
10013faa:	b003      	add	sp, #12
10013fac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

10013fb0 <_vfprintf_r>:
10013fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013fb4:	b0df      	sub	sp, #380	@ 0x17c
10013fb6:	461c      	mov	r4, r3
10013fb8:	9107      	str	r1, [sp, #28]
10013fba:	4691      	mov	r9, r2
10013fbc:	4683      	mov	fp, r0
10013fbe:	f7fe f8fd 	bl	100121bc <_localeconv_r>
10013fc2:	6803      	ldr	r3, [r0, #0]
10013fc4:	9319      	str	r3, [sp, #100]	@ 0x64
10013fc6:	4618      	mov	r0, r3
10013fc8:	f7ff fb1a 	bl	10013600 <strlen>
10013fcc:	2208      	movs	r2, #8
10013fce:	9018      	str	r0, [sp, #96]	@ 0x60
10013fd0:	2100      	movs	r1, #0
10013fd2:	a82e      	add	r0, sp, #184	@ 0xb8
10013fd4:	940d      	str	r4, [sp, #52]	@ 0x34
10013fd6:	f7fe f82f 	bl	10012038 <memset>
10013fda:	f1bb 0f00 	cmp.w	fp, #0
10013fde:	d004      	beq.n	10013fea <_vfprintf_r+0x3a>
10013fe0:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10013fe4:	2b00      	cmp	r3, #0
10013fe6:	f001 8087 	beq.w	100150f8 <_vfprintf_r+0x1148>
10013fea:	9b07      	ldr	r3, [sp, #28]
10013fec:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
10013fee:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10013ff2:	07d1      	lsls	r1, r2, #31
10013ff4:	d402      	bmi.n	10013ffc <_vfprintf_r+0x4c>
10013ff6:	059a      	lsls	r2, r3, #22
10013ff8:	f140 86a7 	bpl.w	10014d4a <_vfprintf_r+0xd9a>
10013ffc:	049f      	lsls	r7, r3, #18
10013ffe:	d407      	bmi.n	10014010 <_vfprintf_r+0x60>
10014000:	9907      	ldr	r1, [sp, #28]
10014002:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10014004:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10014008:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001400c:	818b      	strh	r3, [r1, #12]
1001400e:	664a      	str	r2, [r1, #100]	@ 0x64
10014010:	071e      	lsls	r6, r3, #28
10014012:	f140 80cc 	bpl.w	100141ae <_vfprintf_r+0x1fe>
10014016:	9a07      	ldr	r2, [sp, #28]
10014018:	6912      	ldr	r2, [r2, #16]
1001401a:	2a00      	cmp	r2, #0
1001401c:	f000 80c7 	beq.w	100141ae <_vfprintf_r+0x1fe>
10014020:	f003 021a 	and.w	r2, r3, #26
10014024:	2a0a      	cmp	r2, #10
10014026:	f000 80d1 	beq.w	100141cc <_vfprintf_r+0x21c>
1001402a:	ed9f 7b99 	vldr	d7, [pc, #612]	@ 10014290 <_vfprintf_r+0x2e0>
1001402e:	2300      	movs	r3, #0
10014030:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10014034:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10014038:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
1001403c:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10014040:	aa35      	add	r2, sp, #212	@ 0xd4
10014042:	9313      	str	r3, [sp, #76]	@ 0x4c
10014044:	9232      	str	r2, [sp, #200]	@ 0xc8
10014046:	4690      	mov	r8, r2
10014048:	931a      	str	r3, [sp, #104]	@ 0x68
1001404a:	930a      	str	r3, [sp, #40]	@ 0x28
1001404c:	f8cd b020 	str.w	fp, [sp, #32]
10014050:	464d      	mov	r5, r9
10014052:	9f08      	ldr	r7, [sp, #32]
10014054:	462e      	mov	r6, r5
10014056:	4b90      	ldr	r3, [pc, #576]	@ (10014298 <_vfprintf_r+0x2e8>)
10014058:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1001405c:	f7fe f8a8 	bl	100121b0 <__locale_mb_cur_max>
10014060:	4603      	mov	r3, r0
10014062:	a82e      	add	r0, sp, #184	@ 0xb8
10014064:	9000      	str	r0, [sp, #0]
10014066:	4632      	mov	r2, r6
10014068:	a92a      	add	r1, sp, #168	@ 0xa8
1001406a:	4638      	mov	r0, r7
1001406c:	47a0      	blx	r4
1001406e:	2800      	cmp	r0, #0
10014070:	f000 80cb 	beq.w	1001420a <_vfprintf_r+0x25a>
10014074:	f2c0 80c1 	blt.w	100141fa <_vfprintf_r+0x24a>
10014078:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
1001407a:	2a25      	cmp	r2, #37	@ 0x25
1001407c:	4603      	mov	r3, r0
1001407e:	d001      	beq.n	10014084 <_vfprintf_r+0xd4>
10014080:	441e      	add	r6, r3
10014082:	e7e8      	b.n	10014056 <_vfprintf_r+0xa6>
10014084:	1b77      	subs	r7, r6, r5
10014086:	4604      	mov	r4, r0
10014088:	f040 80c2 	bne.w	10014210 <_vfprintf_r+0x260>
1001408c:	2300      	movs	r3, #0
1001408e:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10014092:	4699      	mov	r9, r3
10014094:	930b      	str	r3, [sp, #44]	@ 0x2c
10014096:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001409a:	7873      	ldrb	r3, [r6, #1]
1001409c:	9209      	str	r2, [sp, #36]	@ 0x24
1001409e:	1c74      	adds	r4, r6, #1
100140a0:	3401      	adds	r4, #1
100140a2:	f1a3 0220 	sub.w	r2, r3, #32
100140a6:	2a5a      	cmp	r2, #90	@ 0x5a
100140a8:	f200 80f8 	bhi.w	1001429c <_vfprintf_r+0x2ec>
100140ac:	e8df f012 	tbh	[pc, r2, lsl #1]
100140b0:	00f602d0 	.word	0x00f602d0
100140b4:	02cc00f6 	.word	0x02cc00f6
100140b8:	00f600f6 	.word	0x00f600f6
100140bc:	006a00f6 	.word	0x006a00f6
100140c0:	00f600f6 	.word	0x00f600f6
100140c4:	02a90286 	.word	0x02a90286
100140c8:	029100f6 	.word	0x029100f6
100140cc:	00f602b2 	.word	0x00f602b2
100140d0:	005b02ae 	.word	0x005b02ae
100140d4:	005b005b 	.word	0x005b005b
100140d8:	005b005b 	.word	0x005b005b
100140dc:	005b005b 	.word	0x005b005b
100140e0:	005b005b 	.word	0x005b005b
100140e4:	00f600f6 	.word	0x00f600f6
100140e8:	00f600f6 	.word	0x00f600f6
100140ec:	00f600f6 	.word	0x00f600f6
100140f0:	017700f6 	.word	0x017700f6
100140f4:	021100f6 	.word	0x021100f6
100140f8:	0177032a 	.word	0x0177032a
100140fc:	01770177 	.word	0x01770177
10014100:	00f600f6 	.word	0x00f600f6
10014104:	00f600f6 	.word	0x00f600f6
10014108:	00f60326 	.word	0x00f60326
1001410c:	02e200f6 	.word	0x02e200f6
10014110:	00f600f6 	.word	0x00f600f6
10014114:	022f00f6 	.word	0x022f00f6
10014118:	031300f6 	.word	0x031300f6
1001411c:	00f600f6 	.word	0x00f600f6
10014120:	00f6071f 	.word	0x00f6071f
10014124:	00f600f6 	.word	0x00f600f6
10014128:	00f600f6 	.word	0x00f600f6
1001412c:	00f600f6 	.word	0x00f600f6
10014130:	017700f6 	.word	0x017700f6
10014134:	021100f6 	.word	0x021100f6
10014138:	01770261 	.word	0x01770261
1001413c:	01770177 	.word	0x01770177
10014140:	0261029f 	.word	0x0261029f
10014144:	00f6020d 	.word	0x00f6020d
10014148:	00f60295 	.word	0x00f60295
1001414c:	07470355 	.word	0x07470355
10014150:	020d0343 	.word	0x020d0343
10014154:	022f00f6 	.word	0x022f00f6
10014158:	0742007d 	.word	0x0742007d
1001415c:	00f600f6 	.word	0x00f600f6
10014160:	00f6074b 	.word	0x00f6074b
10014164:	007d      	.short	0x007d
10014166:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001416a:	2100      	movs	r1, #0
1001416c:	f814 3b01 	ldrb.w	r3, [r4], #1
10014170:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10014174:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10014178:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001417c:	2a09      	cmp	r2, #9
1001417e:	d9f5      	bls.n	1001416c <_vfprintf_r+0x1bc>
10014180:	910b      	str	r1, [sp, #44]	@ 0x2c
10014182:	e78e      	b.n	100140a2 <_vfprintf_r+0xf2>
10014184:	9f08      	ldr	r7, [sp, #32]
10014186:	4638      	mov	r0, r7
10014188:	f7fe f818 	bl	100121bc <_localeconv_r>
1001418c:	6843      	ldr	r3, [r0, #4]
1001418e:	931d      	str	r3, [sp, #116]	@ 0x74
10014190:	4618      	mov	r0, r3
10014192:	f7ff fa35 	bl	10013600 <strlen>
10014196:	901e      	str	r0, [sp, #120]	@ 0x78
10014198:	4606      	mov	r6, r0
1001419a:	4638      	mov	r0, r7
1001419c:	f7fe f80e 	bl	100121bc <_localeconv_r>
100141a0:	6883      	ldr	r3, [r0, #8]
100141a2:	931b      	str	r3, [sp, #108]	@ 0x6c
100141a4:	2e00      	cmp	r6, #0
100141a6:	f040 8629 	bne.w	10014dfc <_vfprintf_r+0xe4c>
100141aa:	7823      	ldrb	r3, [r4, #0]
100141ac:	e778      	b.n	100140a0 <_vfprintf_r+0xf0>
100141ae:	9d07      	ldr	r5, [sp, #28]
100141b0:	4658      	mov	r0, fp
100141b2:	4629      	mov	r1, r5
100141b4:	f002 ff16 	bl	10016fe4 <__swsetup_r>
100141b8:	2800      	cmp	r0, #0
100141ba:	f041 83ac 	bne.w	10015916 <_vfprintf_r+0x1966>
100141be:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
100141c2:	f003 021a 	and.w	r2, r3, #26
100141c6:	2a0a      	cmp	r2, #10
100141c8:	f47f af2f 	bne.w	1001402a <_vfprintf_r+0x7a>
100141cc:	9907      	ldr	r1, [sp, #28]
100141ce:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
100141d2:	2a00      	cmp	r2, #0
100141d4:	f6ff af29 	blt.w	1001402a <_vfprintf_r+0x7a>
100141d8:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
100141da:	07d0      	lsls	r0, r2, #31
100141dc:	d402      	bmi.n	100141e4 <_vfprintf_r+0x234>
100141de:	059a      	lsls	r2, r3, #22
100141e0:	f141 81c5 	bpl.w	1001556e <_vfprintf_r+0x15be>
100141e4:	9907      	ldr	r1, [sp, #28]
100141e6:	4623      	mov	r3, r4
100141e8:	464a      	mov	r2, r9
100141ea:	4658      	mov	r0, fp
100141ec:	f001 fd08 	bl	10015c00 <__sbprintf>
100141f0:	900a      	str	r0, [sp, #40]	@ 0x28
100141f2:	980a      	ldr	r0, [sp, #40]	@ 0x28
100141f4:	b05f      	add	sp, #380	@ 0x17c
100141f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100141fa:	2208      	movs	r2, #8
100141fc:	2100      	movs	r1, #0
100141fe:	a82e      	add	r0, sp, #184	@ 0xb8
10014200:	f7fd ff1a 	bl	10012038 <memset>
10014204:	2301      	movs	r3, #1
10014206:	441e      	add	r6, r3
10014208:	e725      	b.n	10014056 <_vfprintf_r+0xa6>
1001420a:	1b77      	subs	r7, r6, r5
1001420c:	4604      	mov	r4, r0
1001420e:	d011      	beq.n	10014234 <_vfprintf_r+0x284>
10014210:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10014212:	443b      	add	r3, r7
10014214:	9334      	str	r3, [sp, #208]	@ 0xd0
10014216:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014218:	3301      	adds	r3, #1
1001421a:	2b07      	cmp	r3, #7
1001421c:	e9c8 5700 	strd	r5, r7, [r8]
10014220:	9333      	str	r3, [sp, #204]	@ 0xcc
10014222:	dc13      	bgt.n	1001424c <_vfprintf_r+0x29c>
10014224:	f108 0808 	add.w	r8, r8, #8
10014228:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001422a:	443b      	add	r3, r7
1001422c:	930a      	str	r3, [sp, #40]	@ 0x28
1001422e:	2c00      	cmp	r4, #0
10014230:	f47f af2c 	bne.w	1001408c <_vfprintf_r+0xdc>
10014234:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10014236:	f8dd b020 	ldr.w	fp, [sp, #32]
1001423a:	2b00      	cmp	r3, #0
1001423c:	f041 80dc 	bne.w	100153f8 <_vfprintf_r+0x1448>
10014240:	9b07      	ldr	r3, [sp, #28]
10014242:	2200      	movs	r2, #0
10014244:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10014248:	9233      	str	r2, [sp, #204]	@ 0xcc
1001424a:	e012      	b.n	10014272 <_vfprintf_r+0x2c2>
1001424c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014250:	aa32      	add	r2, sp, #200	@ 0xc8
10014252:	f001 fd51 	bl	10015cf8 <__sprint_r>
10014256:	b948      	cbnz	r0, 1001426c <_vfprintf_r+0x2bc>
10014258:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001425c:	e7e4      	b.n	10014228 <_vfprintf_r+0x278>
1001425e:	46bb      	mov	fp, r7
10014260:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10014262:	b11b      	cbz	r3, 1001426c <_vfprintf_r+0x2bc>
10014264:	990c      	ldr	r1, [sp, #48]	@ 0x30
10014266:	4658      	mov	r0, fp
10014268:	f7ff faca 	bl	10013800 <_free_r>
1001426c:	9b07      	ldr	r3, [sp, #28]
1001426e:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10014272:	9a07      	ldr	r2, [sp, #28]
10014274:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10014276:	07d4      	lsls	r4, r2, #31
10014278:	f140 811d 	bpl.w	100144b6 <_vfprintf_r+0x506>
1001427c:	0659      	lsls	r1, r3, #25
1001427e:	f101 8356 	bmi.w	1001592e <_vfprintf_r+0x197e>
10014282:	980a      	ldr	r0, [sp, #40]	@ 0x28
10014284:	b05f      	add	sp, #380	@ 0x17c
10014286:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001428a:	bf00      	nop
1001428c:	f3af 8000 	nop.w
	...
10014298:	2000044c 	.word	0x2000044c
1001429c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100142a0:	2b00      	cmp	r3, #0
100142a2:	d0c7      	beq.n	10014234 <_vfprintf_r+0x284>
100142a4:	2200      	movs	r2, #0
100142a6:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
100142aa:	2301      	movs	r3, #1
100142ac:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100142b0:	9306      	str	r3, [sp, #24]
100142b2:	920c      	str	r2, [sp, #48]	@ 0x30
100142b4:	469b      	mov	fp, r3
100142b6:	9209      	str	r2, [sp, #36]	@ 0x24
100142b8:	9214      	str	r2, [sp, #80]	@ 0x50
100142ba:	9210      	str	r2, [sp, #64]	@ 0x40
100142bc:	9212      	str	r2, [sp, #72]	@ 0x48
100142be:	ad45      	add	r5, sp, #276	@ 0x114
100142c0:	f019 0302 	ands.w	r3, r9, #2
100142c4:	d002      	beq.n	100142cc <_vfprintf_r+0x31c>
100142c6:	9906      	ldr	r1, [sp, #24]
100142c8:	3102      	adds	r1, #2
100142ca:	9106      	str	r1, [sp, #24]
100142cc:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
100142d0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100142d2:	d105      	bne.n	100142e0 <_vfprintf_r+0x330>
100142d4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100142d6:	9806      	ldr	r0, [sp, #24]
100142d8:	1a0e      	subs	r6, r1, r0
100142da:	2e00      	cmp	r6, #0
100142dc:	f300 80aa 	bgt.w	10014434 <_vfprintf_r+0x484>
100142e0:	b182      	cbz	r2, 10014304 <_vfprintf_r+0x354>
100142e2:	2201      	movs	r2, #1
100142e4:	f8c8 2004 	str.w	r2, [r8, #4]
100142e8:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100142ea:	3201      	adds	r2, #1
100142ec:	3401      	adds	r4, #1
100142ee:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
100142f2:	2a07      	cmp	r2, #7
100142f4:	9434      	str	r4, [sp, #208]	@ 0xd0
100142f6:	9233      	str	r2, [sp, #204]	@ 0xcc
100142f8:	f8c8 1000 	str.w	r1, [r8]
100142fc:	f300 83e3 	bgt.w	10014ac6 <_vfprintf_r+0xb16>
10014300:	f108 0808 	add.w	r8, r8, #8
10014304:	b183      	cbz	r3, 10014328 <_vfprintf_r+0x378>
10014306:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014308:	aa28      	add	r2, sp, #160	@ 0xa0
1001430a:	3301      	adds	r3, #1
1001430c:	3402      	adds	r4, #2
1001430e:	f8c8 2000 	str.w	r2, [r8]
10014312:	2b07      	cmp	r3, #7
10014314:	f04f 0202 	mov.w	r2, #2
10014318:	9434      	str	r4, [sp, #208]	@ 0xd0
1001431a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001431c:	f8c8 2004 	str.w	r2, [r8, #4]
10014320:	f300 83df 	bgt.w	10014ae2 <_vfprintf_r+0xb32>
10014324:	f108 0808 	add.w	r8, r8, #8
10014328:	2f80      	cmp	r7, #128	@ 0x80
1001432a:	f000 82c0 	beq.w	100148ae <_vfprintf_r+0x8fe>
1001432e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014330:	eba3 060b 	sub.w	r6, r3, fp
10014334:	2e00      	cmp	r6, #0
10014336:	f300 82ff 	bgt.w	10014938 <_vfprintf_r+0x988>
1001433a:	f419 7f80 	tst.w	r9, #256	@ 0x100
1001433e:	f040 821b 	bne.w	10014778 <_vfprintf_r+0x7c8>
10014342:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014344:	f8c8 5000 	str.w	r5, [r8]
10014348:	3301      	adds	r3, #1
1001434a:	445c      	add	r4, fp
1001434c:	2b07      	cmp	r3, #7
1001434e:	f8c8 b004 	str.w	fp, [r8, #4]
10014352:	9434      	str	r4, [sp, #208]	@ 0xd0
10014354:	9333      	str	r3, [sp, #204]	@ 0xcc
10014356:	f300 834f 	bgt.w	100149f8 <_vfprintf_r+0xa48>
1001435a:	f108 0808 	add.w	r8, r8, #8
1001435e:	f019 0f04 	tst.w	r9, #4
10014362:	d005      	beq.n	10014370 <_vfprintf_r+0x3c0>
10014364:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014366:	9a06      	ldr	r2, [sp, #24]
10014368:	1a9d      	subs	r5, r3, r2
1001436a:	2d00      	cmp	r5, #0
1001436c:	f300 83c5 	bgt.w	10014afa <_vfprintf_r+0xb4a>
10014370:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10014374:	9906      	ldr	r1, [sp, #24]
10014376:	428a      	cmp	r2, r1
10014378:	bfac      	ite	ge
1001437a:	189b      	addge	r3, r3, r2
1001437c:	185b      	addlt	r3, r3, r1
1001437e:	930a      	str	r3, [sp, #40]	@ 0x28
10014380:	2c00      	cmp	r4, #0
10014382:	f040 8311 	bne.w	100149a8 <_vfprintf_r+0x9f8>
10014386:	2300      	movs	r3, #0
10014388:	9333      	str	r3, [sp, #204]	@ 0xcc
1001438a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001438c:	b11b      	cbz	r3, 10014396 <_vfprintf_r+0x3e6>
1001438e:	990c      	ldr	r1, [sp, #48]	@ 0x30
10014390:	9808      	ldr	r0, [sp, #32]
10014392:	f7ff fa35 	bl	10013800 <_free_r>
10014396:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001439a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001439c:	e659      	b.n	10014052 <_vfprintf_r+0xa2>
1001439e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100143a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100143a4:	3307      	adds	r3, #7
100143a6:	f023 0307 	bic.w	r3, r3, #7
100143aa:	ecb3 7b02 	vldmia	r3!, {d7}
100143ae:	ec57 6b17 	vmov	r6, r7, d7
100143b2:	930d      	str	r3, [sp, #52]	@ 0x34
100143b4:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
100143b8:	9323      	str	r3, [sp, #140]	@ 0x8c
100143ba:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
100143be:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
100143c2:	4ba8      	ldr	r3, [pc, #672]	@ (10014664 <_vfprintf_r+0x6b4>)
100143c4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100143c8:	4650      	mov	r0, sl
100143ca:	4659      	mov	r1, fp
100143cc:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
100143d0:	f004 fbb0 	bl	10018b34 <__aeabi_dcmpun>
100143d4:	2800      	cmp	r0, #0
100143d6:	f040 852f 	bne.w	10014e38 <_vfprintf_r+0xe88>
100143da:	4ba2      	ldr	r3, [pc, #648]	@ (10014664 <_vfprintf_r+0x6b4>)
100143dc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100143e0:	4650      	mov	r0, sl
100143e2:	4659      	mov	r1, fp
100143e4:	f004 fb88 	bl	10018af8 <__aeabi_dcmple>
100143e8:	2800      	cmp	r0, #0
100143ea:	f040 8525 	bne.w	10014e38 <_vfprintf_r+0xe88>
100143ee:	2200      	movs	r2, #0
100143f0:	2300      	movs	r3, #0
100143f2:	4630      	mov	r0, r6
100143f4:	4639      	mov	r1, r7
100143f6:	f004 fb75 	bl	10018ae4 <__aeabi_dcmplt>
100143fa:	2800      	cmp	r0, #0
100143fc:	f041 810c 	bne.w	10015618 <_vfprintf_r+0x1668>
10014400:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10014404:	4d98      	ldr	r5, [pc, #608]	@ (10014668 <_vfprintf_r+0x6b8>)
10014406:	4b99      	ldr	r3, [pc, #612]	@ (1001466c <_vfprintf_r+0x6bc>)
10014408:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001440c:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001440e:	2947      	cmp	r1, #71	@ 0x47
10014410:	bfc8      	it	gt
10014412:	461d      	movgt	r5, r3
10014414:	2300      	movs	r3, #0
10014416:	2103      	movs	r1, #3
10014418:	930c      	str	r3, [sp, #48]	@ 0x30
1001441a:	9106      	str	r1, [sp, #24]
1001441c:	468b      	mov	fp, r1
1001441e:	9309      	str	r3, [sp, #36]	@ 0x24
10014420:	9314      	str	r3, [sp, #80]	@ 0x50
10014422:	9310      	str	r3, [sp, #64]	@ 0x40
10014424:	9312      	str	r3, [sp, #72]	@ 0x48
10014426:	2a00      	cmp	r2, #0
10014428:	f43f af4a 	beq.w	100142c0 <_vfprintf_r+0x310>
1001442c:	9b06      	ldr	r3, [sp, #24]
1001442e:	3301      	adds	r3, #1
10014430:	9306      	str	r3, [sp, #24]
10014432:	e745      	b.n	100142c0 <_vfprintf_r+0x310>
10014434:	2e10      	cmp	r6, #16
10014436:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10014438:	f341 823a 	ble.w	100158b0 <_vfprintf_r+0x1900>
1001443c:	488c      	ldr	r0, [pc, #560]	@ (10014670 <_vfprintf_r+0x6c0>)
1001443e:	9521      	str	r5, [sp, #132]	@ 0x84
10014440:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10014444:	4621      	mov	r1, r4
10014446:	9d07      	ldr	r5, [sp, #28]
10014448:	9c08      	ldr	r4, [sp, #32]
1001444a:	9015      	str	r0, [sp, #84]	@ 0x54
1001444c:	f04f 0a10 	mov.w	sl, #16
10014450:	4607      	mov	r7, r0
10014452:	e004      	b.n	1001445e <_vfprintf_r+0x4ae>
10014454:	3e10      	subs	r6, #16
10014456:	2e10      	cmp	r6, #16
10014458:	f108 0808 	add.w	r8, r8, #8
1001445c:	dd16      	ble.n	1001448c <_vfprintf_r+0x4dc>
1001445e:	3201      	adds	r2, #1
10014460:	3110      	adds	r1, #16
10014462:	2a07      	cmp	r2, #7
10014464:	e9c8 7a00 	strd	r7, sl, [r8]
10014468:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
1001446c:	ddf2      	ble.n	10014454 <_vfprintf_r+0x4a4>
1001446e:	aa32      	add	r2, sp, #200	@ 0xc8
10014470:	4629      	mov	r1, r5
10014472:	4620      	mov	r0, r4
10014474:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014478:	f001 fc3e 	bl	10015cf8 <__sprint_r>
1001447c:	2800      	cmp	r0, #0
1001447e:	f040 8635 	bne.w	100150ec <_vfprintf_r+0x113c>
10014482:	3e10      	subs	r6, #16
10014484:	2e10      	cmp	r6, #16
10014486:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
1001448a:	dce8      	bgt.n	1001445e <_vfprintf_r+0x4ae>
1001448c:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10014490:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10014492:	460c      	mov	r4, r1
10014494:	3201      	adds	r2, #1
10014496:	9915      	ldr	r1, [sp, #84]	@ 0x54
10014498:	f8c8 1000 	str.w	r1, [r8]
1001449c:	4434      	add	r4, r6
1001449e:	2a07      	cmp	r2, #7
100144a0:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
100144a4:	f8c8 6004 	str.w	r6, [r8, #4]
100144a8:	f300 860f 	bgt.w	100150ca <_vfprintf_r+0x111a>
100144ac:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100144b0:	f108 0808 	add.w	r8, r8, #8
100144b4:	e714      	b.n	100142e0 <_vfprintf_r+0x330>
100144b6:	0598      	lsls	r0, r3, #22
100144b8:	f53f aee0 	bmi.w	1001427c <_vfprintf_r+0x2cc>
100144bc:	9c07      	ldr	r4, [sp, #28]
100144be:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100144c0:	f7fd fe74 	bl	100121ac <__retarget_lock_release_recursive>
100144c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100144c8:	e6d8      	b.n	1001427c <_vfprintf_r+0x2cc>
100144ca:	7823      	ldrb	r3, [r4, #0]
100144cc:	f049 0920 	orr.w	r9, r9, #32
100144d0:	e5e6      	b.n	100140a0 <_vfprintf_r+0xf0>
100144d2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100144d4:	2b43      	cmp	r3, #67	@ 0x43
100144d6:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100144da:	f102 0404 	add.w	r4, r2, #4
100144de:	f000 8561 	beq.w	10014fa4 <_vfprintf_r+0xff4>
100144e2:	f019 0f10 	tst.w	r9, #16
100144e6:	f040 855d 	bne.w	10014fa4 <_vfprintf_r+0xff4>
100144ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100144ec:	681b      	ldr	r3, [r3, #0]
100144ee:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
100144f2:	2301      	movs	r3, #1
100144f4:	9306      	str	r3, [sp, #24]
100144f6:	469b      	mov	fp, r3
100144f8:	ad45      	add	r5, sp, #276	@ 0x114
100144fa:	2200      	movs	r2, #0
100144fc:	940d      	str	r4, [sp, #52]	@ 0x34
100144fe:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10014502:	920c      	str	r2, [sp, #48]	@ 0x30
10014504:	9209      	str	r2, [sp, #36]	@ 0x24
10014506:	9214      	str	r2, [sp, #80]	@ 0x50
10014508:	9210      	str	r2, [sp, #64]	@ 0x40
1001450a:	9212      	str	r2, [sp, #72]	@ 0x48
1001450c:	e6d8      	b.n	100142c0 <_vfprintf_r+0x310>
1001450e:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10014510:	f856 5b04 	ldr.w	r5, [r6], #4
10014514:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014518:	2300      	movs	r3, #0
1001451a:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001451e:	2d00      	cmp	r5, #0
10014520:	f000 852f 	beq.w	10014f82 <_vfprintf_r+0xfd2>
10014524:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014526:	2b53      	cmp	r3, #83	@ 0x53
10014528:	f000 8600 	beq.w	1001512c <_vfprintf_r+0x117c>
1001452c:	f019 0310 	ands.w	r3, r9, #16
10014530:	9312      	str	r3, [sp, #72]	@ 0x48
10014532:	f040 85fb 	bne.w	1001512c <_vfprintf_r+0x117c>
10014536:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014538:	1c5a      	adds	r2, r3, #1
1001453a:	f000 8767 	beq.w	1001540c <_vfprintf_r+0x145c>
1001453e:	9912      	ldr	r1, [sp, #72]	@ 0x48
10014540:	461a      	mov	r2, r3
10014542:	4628      	mov	r0, r5
10014544:	f7fe ff5c 	bl	10013400 <memchr>
10014548:	900c      	str	r0, [sp, #48]	@ 0x30
1001454a:	2800      	cmp	r0, #0
1001454c:	f001 82c2 	beq.w	10015ad4 <_vfprintf_r+0x1b24>
10014550:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10014552:	960d      	str	r6, [sp, #52]	@ 0x34
10014554:	eba3 0b05 	sub.w	fp, r3, r5
10014558:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001455a:	9309      	str	r3, [sp, #36]	@ 0x24
1001455c:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10014560:	9314      	str	r3, [sp, #80]	@ 0x50
10014562:	9310      	str	r3, [sp, #64]	@ 0x40
10014564:	930c      	str	r3, [sp, #48]	@ 0x30
10014566:	2373      	movs	r3, #115	@ 0x73
10014568:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001456c:	9106      	str	r1, [sp, #24]
1001456e:	930e      	str	r3, [sp, #56]	@ 0x38
10014570:	e759      	b.n	10014426 <_vfprintf_r+0x476>
10014572:	f019 0f20 	tst.w	r9, #32
10014576:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001457a:	f000 80cb 	beq.w	10014714 <_vfprintf_r+0x764>
1001457e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014580:	3307      	adds	r3, #7
10014582:	f023 0307 	bic.w	r3, r3, #7
10014586:	461a      	mov	r2, r3
10014588:	6859      	ldr	r1, [r3, #4]
1001458a:	f852 3b08 	ldr.w	r3, [r2], #8
1001458e:	920d      	str	r2, [sp, #52]	@ 0x34
10014590:	460a      	mov	r2, r1
10014592:	2900      	cmp	r1, #0
10014594:	f2c0 8424 	blt.w	10014de0 <_vfprintf_r+0xe30>
10014598:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001459a:	3101      	adds	r1, #1
1001459c:	f000 8284 	beq.w	10014aa8 <_vfprintf_r+0xaf8>
100145a0:	ea53 0102 	orrs.w	r1, r3, r2
100145a4:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
100145a8:	f040 827f 	bne.w	10014aaa <_vfprintf_r+0xafa>
100145ac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100145ae:	2a00      	cmp	r2, #0
100145b0:	f040 8280 	bne.w	10014ab4 <_vfprintf_r+0xb04>
100145b4:	46a1      	mov	r9, r4
100145b6:	4693      	mov	fp, r2
100145b8:	ad5e      	add	r5, sp, #376	@ 0x178
100145ba:	e14f      	b.n	1001485c <_vfprintf_r+0x8ac>
100145bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100145be:	f853 2b04 	ldr.w	r2, [r3], #4
100145c2:	920b      	str	r2, [sp, #44]	@ 0x2c
100145c4:	2a00      	cmp	r2, #0
100145c6:	f280 83cd 	bge.w	10014d64 <_vfprintf_r+0xdb4>
100145ca:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100145cc:	930d      	str	r3, [sp, #52]	@ 0x34
100145ce:	4252      	negs	r2, r2
100145d0:	920b      	str	r2, [sp, #44]	@ 0x2c
100145d2:	7823      	ldrb	r3, [r4, #0]
100145d4:	f049 0904 	orr.w	r9, r9, #4
100145d8:	e562      	b.n	100140a0 <_vfprintf_r+0xf0>
100145da:	7823      	ldrb	r3, [r4, #0]
100145dc:	2b6c      	cmp	r3, #108	@ 0x6c
100145de:	bf03      	ittte	eq
100145e0:	7863      	ldrbeq	r3, [r4, #1]
100145e2:	f049 0920 	orreq.w	r9, r9, #32
100145e6:	3401      	addeq	r4, #1
100145e8:	f049 0910 	orrne.w	r9, r9, #16
100145ec:	e558      	b.n	100140a0 <_vfprintf_r+0xf0>
100145ee:	7823      	ldrb	r3, [r4, #0]
100145f0:	2b68      	cmp	r3, #104	@ 0x68
100145f2:	bf03      	ittte	eq
100145f4:	7863      	ldrbeq	r3, [r4, #1]
100145f6:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
100145fa:	3401      	addeq	r4, #1
100145fc:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10014600:	e54e      	b.n	100140a0 <_vfprintf_r+0xf0>
10014602:	232b      	movs	r3, #43	@ 0x2b
10014604:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10014608:	7823      	ldrb	r3, [r4, #0]
1001460a:	e549      	b.n	100140a0 <_vfprintf_r+0xf0>
1001460c:	7823      	ldrb	r3, [r4, #0]
1001460e:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10014612:	e545      	b.n	100140a0 <_vfprintf_r+0xf0>
10014614:	4621      	mov	r1, r4
10014616:	f811 3b01 	ldrb.w	r3, [r1], #1
1001461a:	2b2a      	cmp	r3, #42	@ 0x2a
1001461c:	f001 82d7 	beq.w	10015bce <_vfprintf_r+0x1c1e>
10014620:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10014624:	2a09      	cmp	r2, #9
10014626:	460c      	mov	r4, r1
10014628:	bf98      	it	ls
1001462a:	2100      	movls	r1, #0
1001462c:	f201 816f 	bhi.w	1001590e <_vfprintf_r+0x195e>
10014630:	f814 3b01 	ldrb.w	r3, [r4], #1
10014634:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10014638:	eb02 0141 	add.w	r1, r2, r1, lsl #1
1001463c:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10014640:	2a09      	cmp	r2, #9
10014642:	d9f5      	bls.n	10014630 <_vfprintf_r+0x680>
10014644:	9109      	str	r1, [sp, #36]	@ 0x24
10014646:	e52c      	b.n	100140a2 <_vfprintf_r+0xf2>
10014648:	7823      	ldrb	r3, [r4, #0]
1001464a:	f049 0901 	orr.w	r9, r9, #1
1001464e:	e527      	b.n	100140a0 <_vfprintf_r+0xf0>
10014650:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10014654:	7823      	ldrb	r3, [r4, #0]
10014656:	2a00      	cmp	r2, #0
10014658:	f47f ad22 	bne.w	100140a0 <_vfprintf_r+0xf0>
1001465c:	2220      	movs	r2, #32
1001465e:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10014662:	e51d      	b.n	100140a0 <_vfprintf_r+0xf0>
10014664:	7fefffff 	.word	0x7fefffff
10014668:	10019110 	.word	0x10019110
1001466c:	10019114 	.word	0x10019114
10014670:	10019350 	.word	0x10019350
10014674:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014678:	f049 0910 	orr.w	r9, r9, #16
1001467c:	f019 0220 	ands.w	r2, r9, #32
10014680:	f000 8354 	beq.w	10014d2c <_vfprintf_r+0xd7c>
10014684:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014686:	3307      	adds	r3, #7
10014688:	f023 0307 	bic.w	r3, r3, #7
1001468c:	4619      	mov	r1, r3
1001468e:	685a      	ldr	r2, [r3, #4]
10014690:	f851 3b08 	ldr.w	r3, [r1], #8
10014694:	910d      	str	r1, [sp, #52]	@ 0x34
10014696:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001469a:	2100      	movs	r1, #0
1001469c:	2000      	movs	r0, #0
1001469e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
100146a0:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
100146a4:	1c6f      	adds	r7, r5, #1
100146a6:	f000 80c2 	beq.w	1001482e <_vfprintf_r+0x87e>
100146aa:	ea53 0002 	orrs.w	r0, r3, r2
100146ae:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
100146b2:	f040 80bb 	bne.w	1001482c <_vfprintf_r+0x87c>
100146b6:	2d00      	cmp	r5, #0
100146b8:	f040 8523 	bne.w	10015102 <_vfprintf_r+0x1152>
100146bc:	2900      	cmp	r1, #0
100146be:	f040 8496 	bne.w	10014fee <_vfprintf_r+0x103e>
100146c2:	f014 0b01 	ands.w	fp, r4, #1
100146c6:	f000 8351 	beq.w	10014d6c <_vfprintf_r+0xdbc>
100146ca:	2330      	movs	r3, #48	@ 0x30
100146cc:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100146d0:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100146d4:	e0c2      	b.n	1001485c <_vfprintf_r+0x8ac>
100146d6:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100146da:	f049 0410 	orr.w	r4, r9, #16
100146de:	f014 0220 	ands.w	r2, r4, #32
100146e2:	f000 8315 	beq.w	10014d10 <_vfprintf_r+0xd60>
100146e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100146e8:	3307      	adds	r3, #7
100146ea:	f023 0307 	bic.w	r3, r3, #7
100146ee:	4619      	mov	r1, r3
100146f0:	685a      	ldr	r2, [r3, #4]
100146f2:	f851 3b08 	ldr.w	r3, [r1], #8
100146f6:	910d      	str	r1, [sp, #52]	@ 0x34
100146f8:	2101      	movs	r1, #1
100146fa:	e7cf      	b.n	1001469c <_vfprintf_r+0x6ec>
100146fc:	7823      	ldrb	r3, [r4, #0]
100146fe:	f049 0908 	orr.w	r9, r9, #8
10014702:	e4cd      	b.n	100140a0 <_vfprintf_r+0xf0>
10014704:	f049 0910 	orr.w	r9, r9, #16
10014708:	f019 0f20 	tst.w	r9, #32
1001470c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014710:	f47f af35 	bne.w	1001457e <_vfprintf_r+0x5ce>
10014714:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10014716:	f019 0f10 	tst.w	r9, #16
1001471a:	f852 3b04 	ldr.w	r3, [r2], #4
1001471e:	920d      	str	r2, [sp, #52]	@ 0x34
10014720:	f040 8359 	bne.w	10014dd6 <_vfprintf_r+0xe26>
10014724:	f019 0f40 	tst.w	r9, #64	@ 0x40
10014728:	f000 8351 	beq.w	10014dce <_vfprintf_r+0xe1e>
1001472c:	f343 32c0 	sbfx	r2, r3, #15, #1
10014730:	4611      	mov	r1, r2
10014732:	b21b      	sxth	r3, r3
10014734:	e72d      	b.n	10014592 <_vfprintf_r+0x5e2>
10014736:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10014738:	940f      	str	r4, [sp, #60]	@ 0x3c
1001473a:	f852 3b04 	ldr.w	r3, [r2], #4
1001473e:	920d      	str	r2, [sp, #52]	@ 0x34
10014740:	f647 0230 	movw	r2, #30768	@ 0x7830
10014744:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10014748:	2078      	movs	r0, #120	@ 0x78
1001474a:	4ab1      	ldr	r2, [pc, #708]	@ (10014a10 <_vfprintf_r+0xa60>)
1001474c:	921a      	str	r2, [sp, #104]	@ 0x68
1001474e:	f049 0402 	orr.w	r4, r9, #2
10014752:	2200      	movs	r2, #0
10014754:	2102      	movs	r1, #2
10014756:	900e      	str	r0, [sp, #56]	@ 0x38
10014758:	e7a0      	b.n	1001469c <_vfprintf_r+0x6ec>
1001475a:	f019 0f20 	tst.w	r9, #32
1001475e:	940f      	str	r4, [sp, #60]	@ 0x3c
10014760:	f000 8359 	beq.w	10014e16 <_vfprintf_r+0xe66>
10014764:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014766:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014768:	681b      	ldr	r3, [r3, #0]
1001476a:	601a      	str	r2, [r3, #0]
1001476c:	17d2      	asrs	r2, r2, #31
1001476e:	605a      	str	r2, [r3, #4]
10014770:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014772:	3304      	adds	r3, #4
10014774:	930d      	str	r3, [sp, #52]	@ 0x34
10014776:	e610      	b.n	1001439a <_vfprintf_r+0x3ea>
10014778:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001477a:	2b65      	cmp	r3, #101	@ 0x65
1001477c:	f340 814e 	ble.w	10014a1c <_vfprintf_r+0xa6c>
10014780:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10014784:	2200      	movs	r2, #0
10014786:	2300      	movs	r3, #0
10014788:	f004 f9a2 	bl	10018ad0 <__aeabi_dcmpeq>
1001478c:	2800      	cmp	r0, #0
1001478e:	f000 81ee 	beq.w	10014b6e <_vfprintf_r+0xbbe>
10014792:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014794:	4a9f      	ldr	r2, [pc, #636]	@ (10014a14 <_vfprintf_r+0xa64>)
10014796:	f8c8 2000 	str.w	r2, [r8]
1001479a:	3301      	adds	r3, #1
1001479c:	3401      	adds	r4, #1
1001479e:	2201      	movs	r2, #1
100147a0:	2b07      	cmp	r3, #7
100147a2:	9434      	str	r4, [sp, #208]	@ 0xd0
100147a4:	9333      	str	r3, [sp, #204]	@ 0xcc
100147a6:	f8c8 2004 	str.w	r2, [r8, #4]
100147aa:	f300 84af 	bgt.w	1001510c <_vfprintf_r+0x115c>
100147ae:	f108 0808 	add.w	r8, r8, #8
100147b2:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
100147b4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100147b6:	4293      	cmp	r3, r2
100147b8:	f280 82cf 	bge.w	10014d5a <_vfprintf_r+0xdaa>
100147bc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100147be:	9a19      	ldr	r2, [sp, #100]	@ 0x64
100147c0:	441c      	add	r4, r3
100147c2:	e9c8 2300 	strd	r2, r3, [r8]
100147c6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100147c8:	9434      	str	r4, [sp, #208]	@ 0xd0
100147ca:	3301      	adds	r3, #1
100147cc:	2b07      	cmp	r3, #7
100147ce:	9333      	str	r3, [sp, #204]	@ 0xcc
100147d0:	f300 83cb 	bgt.w	10014f6a <_vfprintf_r+0xfba>
100147d4:	f108 0808 	add.w	r8, r8, #8
100147d8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100147da:	1e5d      	subs	r5, r3, #1
100147dc:	2d00      	cmp	r5, #0
100147de:	f77f adbe 	ble.w	1001435e <_vfprintf_r+0x3ae>
100147e2:	2d10      	cmp	r5, #16
100147e4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100147e6:	f340 84f9 	ble.w	100151dc <_vfprintf_r+0x122c>
100147ea:	4f8b      	ldr	r7, [pc, #556]	@ (10014a18 <_vfprintf_r+0xa68>)
100147ec:	9715      	str	r7, [sp, #84]	@ 0x54
100147ee:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
100147f2:	2610      	movs	r6, #16
100147f4:	e005      	b.n	10014802 <_vfprintf_r+0x852>
100147f6:	f108 0808 	add.w	r8, r8, #8
100147fa:	3d10      	subs	r5, #16
100147fc:	2d10      	cmp	r5, #16
100147fe:	f340 84ef 	ble.w	100151e0 <_vfprintf_r+0x1230>
10014802:	3301      	adds	r3, #1
10014804:	3410      	adds	r4, #16
10014806:	2b07      	cmp	r3, #7
10014808:	e9c8 7600 	strd	r7, r6, [r8]
1001480c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014810:	ddf1      	ble.n	100147f6 <_vfprintf_r+0x846>
10014812:	aa32      	add	r2, sp, #200	@ 0xc8
10014814:	4651      	mov	r1, sl
10014816:	4658      	mov	r0, fp
10014818:	f001 fa6e 	bl	10015cf8 <__sprint_r>
1001481c:	2800      	cmp	r0, #0
1001481e:	f47f ad1f 	bne.w	10014260 <_vfprintf_r+0x2b0>
10014822:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014826:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001482a:	e7e6      	b.n	100147fa <_vfprintf_r+0x84a>
1001482c:	464c      	mov	r4, r9
1001482e:	2901      	cmp	r1, #1
10014830:	f000 813b 	beq.w	10014aaa <_vfprintf_r+0xafa>
10014834:	2902      	cmp	r1, #2
10014836:	ad5e      	add	r5, sp, #376	@ 0x178
10014838:	d11e      	bne.n	10014878 <_vfprintf_r+0x8c8>
1001483a:	981a      	ldr	r0, [sp, #104]	@ 0x68
1001483c:	f003 010f 	and.w	r1, r3, #15
10014840:	091b      	lsrs	r3, r3, #4
10014842:	5c41      	ldrb	r1, [r0, r1]
10014844:	f805 1d01 	strb.w	r1, [r5, #-1]!
10014848:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
1001484c:	0912      	lsrs	r2, r2, #4
1001484e:	ea53 0102 	orrs.w	r1, r3, r2
10014852:	d1f3      	bne.n	1001483c <_vfprintf_r+0x88c>
10014854:	ab5e      	add	r3, sp, #376	@ 0x178
10014856:	46a1      	mov	r9, r4
10014858:	eba3 0b05 	sub.w	fp, r3, r5
1001485c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001485e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10014862:	4559      	cmp	r1, fp
10014864:	f04f 0300 	mov.w	r3, #0
10014868:	bfb8      	it	lt
1001486a:	4659      	movlt	r1, fp
1001486c:	930c      	str	r3, [sp, #48]	@ 0x30
1001486e:	9106      	str	r1, [sp, #24]
10014870:	9314      	str	r3, [sp, #80]	@ 0x50
10014872:	9310      	str	r3, [sp, #64]	@ 0x40
10014874:	9312      	str	r3, [sp, #72]	@ 0x48
10014876:	e5d6      	b.n	10014426 <_vfprintf_r+0x476>
10014878:	f003 0107 	and.w	r1, r3, #7
1001487c:	08db      	lsrs	r3, r3, #3
1001487e:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
10014882:	08d2      	lsrs	r2, r2, #3
10014884:	3130      	adds	r1, #48	@ 0x30
10014886:	ea53 0602 	orrs.w	r6, r3, r2
1001488a:	4628      	mov	r0, r5
1001488c:	f805 1d01 	strb.w	r1, [r5, #-1]!
10014890:	d1f2      	bne.n	10014878 <_vfprintf_r+0x8c8>
10014892:	07e6      	lsls	r6, r4, #31
10014894:	d5de      	bpl.n	10014854 <_vfprintf_r+0x8a4>
10014896:	2930      	cmp	r1, #48	@ 0x30
10014898:	d0dc      	beq.n	10014854 <_vfprintf_r+0x8a4>
1001489a:	2330      	movs	r3, #48	@ 0x30
1001489c:	3802      	subs	r0, #2
1001489e:	f805 3c01 	strb.w	r3, [r5, #-1]
100148a2:	ab5e      	add	r3, sp, #376	@ 0x178
100148a4:	46a1      	mov	r9, r4
100148a6:	eba3 0b00 	sub.w	fp, r3, r0
100148aa:	4605      	mov	r5, r0
100148ac:	e7d6      	b.n	1001485c <_vfprintf_r+0x8ac>
100148ae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100148b0:	9a06      	ldr	r2, [sp, #24]
100148b2:	1a9e      	subs	r6, r3, r2
100148b4:	2e00      	cmp	r6, #0
100148b6:	f77f ad3a 	ble.w	1001432e <_vfprintf_r+0x37e>
100148ba:	2e10      	cmp	r6, #16
100148bc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100148be:	f341 80ab 	ble.w	10015a18 <_vfprintf_r+0x1a68>
100148c2:	4855      	ldr	r0, [pc, #340]	@ (10014a18 <_vfprintf_r+0xa68>)
100148c4:	f8dd a020 	ldr.w	sl, [sp, #32]
100148c8:	9015      	str	r0, [sp, #84]	@ 0x54
100148ca:	4621      	mov	r1, r4
100148cc:	2710      	movs	r7, #16
100148ce:	461a      	mov	r2, r3
100148d0:	4604      	mov	r4, r0
100148d2:	e004      	b.n	100148de <_vfprintf_r+0x92e>
100148d4:	3e10      	subs	r6, #16
100148d6:	2e10      	cmp	r6, #16
100148d8:	f108 0808 	add.w	r8, r8, #8
100148dc:	dd16      	ble.n	1001490c <_vfprintf_r+0x95c>
100148de:	3201      	adds	r2, #1
100148e0:	3110      	adds	r1, #16
100148e2:	2a07      	cmp	r2, #7
100148e4:	e9c8 4700 	strd	r4, r7, [r8]
100148e8:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100148ec:	ddf2      	ble.n	100148d4 <_vfprintf_r+0x924>
100148ee:	9907      	ldr	r1, [sp, #28]
100148f0:	aa32      	add	r2, sp, #200	@ 0xc8
100148f2:	4650      	mov	r0, sl
100148f4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100148f8:	f001 f9fe 	bl	10015cf8 <__sprint_r>
100148fc:	2800      	cmp	r0, #0
100148fe:	f040 83f8 	bne.w	100150f2 <_vfprintf_r+0x1142>
10014902:	3e10      	subs	r6, #16
10014904:	2e10      	cmp	r6, #16
10014906:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
1001490a:	dce8      	bgt.n	100148de <_vfprintf_r+0x92e>
1001490c:	460c      	mov	r4, r1
1001490e:	4613      	mov	r3, r2
10014910:	3301      	adds	r3, #1
10014912:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014914:	f8c8 2000 	str.w	r2, [r8]
10014918:	4434      	add	r4, r6
1001491a:	2b07      	cmp	r3, #7
1001491c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014920:	f8c8 6004 	str.w	r6, [r8, #4]
10014924:	f300 8314 	bgt.w	10014f50 <_vfprintf_r+0xfa0>
10014928:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001492a:	eba3 060b 	sub.w	r6, r3, fp
1001492e:	2e00      	cmp	r6, #0
10014930:	f108 0808 	add.w	r8, r8, #8
10014934:	f77f ad01 	ble.w	1001433a <_vfprintf_r+0x38a>
10014938:	4a37      	ldr	r2, [pc, #220]	@ (10014a18 <_vfprintf_r+0xa68>)
1001493a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001493c:	9215      	str	r2, [sp, #84]	@ 0x54
1001493e:	2e10      	cmp	r6, #16
10014940:	dd23      	ble.n	1001498a <_vfprintf_r+0x9da>
10014942:	4622      	mov	r2, r4
10014944:	f04f 0a10 	mov.w	sl, #16
10014948:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
1001494c:	e004      	b.n	10014958 <_vfprintf_r+0x9a8>
1001494e:	3e10      	subs	r6, #16
10014950:	2e10      	cmp	r6, #16
10014952:	f108 0808 	add.w	r8, r8, #8
10014956:	dd17      	ble.n	10014988 <_vfprintf_r+0x9d8>
10014958:	3301      	adds	r3, #1
1001495a:	492f      	ldr	r1, [pc, #188]	@ (10014a18 <_vfprintf_r+0xa68>)
1001495c:	3210      	adds	r2, #16
1001495e:	2b07      	cmp	r3, #7
10014960:	e9c8 1a00 	strd	r1, sl, [r8]
10014964:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10014968:	ddf1      	ble.n	1001494e <_vfprintf_r+0x99e>
1001496a:	aa32      	add	r2, sp, #200	@ 0xc8
1001496c:	4621      	mov	r1, r4
1001496e:	4638      	mov	r0, r7
10014970:	f001 f9c2 	bl	10015cf8 <__sprint_r>
10014974:	2800      	cmp	r0, #0
10014976:	f47f ac72 	bne.w	1001425e <_vfprintf_r+0x2ae>
1001497a:	3e10      	subs	r6, #16
1001497c:	2e10      	cmp	r6, #16
1001497e:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10014982:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014986:	dce7      	bgt.n	10014958 <_vfprintf_r+0x9a8>
10014988:	4614      	mov	r4, r2
1001498a:	3301      	adds	r3, #1
1001498c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001498e:	f8c8 2000 	str.w	r2, [r8]
10014992:	4434      	add	r4, r6
10014994:	2b07      	cmp	r3, #7
10014996:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001499a:	f8c8 6004 	str.w	r6, [r8, #4]
1001499e:	f300 81aa 	bgt.w	10014cf6 <_vfprintf_r+0xd46>
100149a2:	f108 0808 	add.w	r8, r8, #8
100149a6:	e4c8      	b.n	1001433a <_vfprintf_r+0x38a>
100149a8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100149ac:	aa32      	add	r2, sp, #200	@ 0xc8
100149ae:	f001 f9a3 	bl	10015cf8 <__sprint_r>
100149b2:	2800      	cmp	r0, #0
100149b4:	f43f ace7 	beq.w	10014386 <_vfprintf_r+0x3d6>
100149b8:	f8dd b020 	ldr.w	fp, [sp, #32]
100149bc:	e450      	b.n	10014260 <_vfprintf_r+0x2b0>
100149be:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100149c0:	9919      	ldr	r1, [sp, #100]	@ 0x64
100149c2:	441c      	add	r4, r3
100149c4:	e9c8 1300 	strd	r1, r3, [r8]
100149c8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100149ca:	9434      	str	r4, [sp, #208]	@ 0xd0
100149cc:	3301      	adds	r3, #1
100149ce:	2b07      	cmp	r3, #7
100149d0:	9333      	str	r3, [sp, #204]	@ 0xcc
100149d2:	f300 85bd 	bgt.w	10015550 <_vfprintf_r+0x15a0>
100149d6:	f108 0808 	add.w	r8, r8, #8
100149da:	2a00      	cmp	r2, #0
100149dc:	f2c0 87ac 	blt.w	10015938 <_vfprintf_r+0x1988>
100149e0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100149e2:	f8c8 5000 	str.w	r5, [r8]
100149e6:	3301      	adds	r3, #1
100149e8:	4414      	add	r4, r2
100149ea:	2b07      	cmp	r3, #7
100149ec:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100149f0:	f8c8 2004 	str.w	r2, [r8, #4]
100149f4:	f77f acb1 	ble.w	1001435a <_vfprintf_r+0x3aa>
100149f8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100149fc:	aa32      	add	r2, sp, #200	@ 0xc8
100149fe:	f001 f97b 	bl	10015cf8 <__sprint_r>
10014a02:	2800      	cmp	r0, #0
10014a04:	d1d8      	bne.n	100149b8 <_vfprintf_r+0xa08>
10014a06:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014a08:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014a0c:	e4a7      	b.n	1001435e <_vfprintf_r+0x3ae>
10014a0e:	bf00      	nop
10014a10:	10019120 	.word	0x10019120
10014a14:	10019150 	.word	0x10019150
10014a18:	10019340 	.word	0x10019340
10014a1c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014a1e:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10014a20:	2b01      	cmp	r3, #1
10014a22:	f104 0401 	add.w	r4, r4, #1
10014a26:	f106 0601 	add.w	r6, r6, #1
10014a2a:	f108 0708 	add.w	r7, r8, #8
10014a2e:	f340 811d 	ble.w	10014c6c <_vfprintf_r+0xcbc>
10014a32:	2301      	movs	r3, #1
10014a34:	2e07      	cmp	r6, #7
10014a36:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014a3a:	f8c8 5000 	str.w	r5, [r8]
10014a3e:	f8c8 3004 	str.w	r3, [r8, #4]
10014a42:	f300 82e4 	bgt.w	1001500e <_vfprintf_r+0x105e>
10014a46:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014a48:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014a4a:	3601      	adds	r6, #1
10014a4c:	441c      	add	r4, r3
10014a4e:	2e07      	cmp	r6, #7
10014a50:	e9c7 2300 	strd	r2, r3, [r7]
10014a54:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014a58:	f300 82cd 	bgt.w	10014ff6 <_vfprintf_r+0x1046>
10014a5c:	3708      	adds	r7, #8
10014a5e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014a60:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10014a64:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
10014a68:	2200      	movs	r2, #0
10014a6a:	2300      	movs	r3, #0
10014a6c:	f004 f830 	bl	10018ad0 <__aeabi_dcmpeq>
10014a70:	2800      	cmp	r0, #0
10014a72:	f040 8115 	bne.w	10014ca0 <_vfprintf_r+0xcf0>
10014a76:	3601      	adds	r6, #1
10014a78:	3501      	adds	r5, #1
10014a7a:	4444      	add	r4, r8
10014a7c:	2e07      	cmp	r6, #7
10014a7e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014a82:	603d      	str	r5, [r7, #0]
10014a84:	f8c7 8004 	str.w	r8, [r7, #4]
10014a88:	f300 80fe 	bgt.w	10014c88 <_vfprintf_r+0xcd8>
10014a8c:	3708      	adds	r7, #8
10014a8e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10014a90:	607b      	str	r3, [r7, #4]
10014a92:	3601      	adds	r6, #1
10014a94:	441c      	add	r4, r3
10014a96:	2e07      	cmp	r6, #7
10014a98:	ab2c      	add	r3, sp, #176	@ 0xb0
10014a9a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014a9e:	603b      	str	r3, [r7, #0]
10014aa0:	dcaa      	bgt.n	100149f8 <_vfprintf_r+0xa48>
10014aa2:	f107 0808 	add.w	r8, r7, #8
10014aa6:	e45a      	b.n	1001435e <_vfprintf_r+0x3ae>
10014aa8:	464c      	mov	r4, r9
10014aaa:	2b0a      	cmp	r3, #10
10014aac:	f172 0100 	sbcs.w	r1, r2, #0
10014ab0:	f080 82b9 	bcs.w	10015026 <_vfprintf_r+0x1076>
10014ab4:	3330      	adds	r3, #48	@ 0x30
10014ab6:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10014aba:	46a1      	mov	r9, r4
10014abc:	f04f 0b01 	mov.w	fp, #1
10014ac0:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10014ac4:	e6ca      	b.n	1001485c <_vfprintf_r+0x8ac>
10014ac6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014aca:	aa32      	add	r2, sp, #200	@ 0xc8
10014acc:	9315      	str	r3, [sp, #84]	@ 0x54
10014ace:	f001 f913 	bl	10015cf8 <__sprint_r>
10014ad2:	2800      	cmp	r0, #0
10014ad4:	f47f af70 	bne.w	100149b8 <_vfprintf_r+0xa08>
10014ad8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014ada:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10014adc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014ae0:	e410      	b.n	10014304 <_vfprintf_r+0x354>
10014ae2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014ae6:	aa32      	add	r2, sp, #200	@ 0xc8
10014ae8:	f001 f906 	bl	10015cf8 <__sprint_r>
10014aec:	2800      	cmp	r0, #0
10014aee:	f47f af63 	bne.w	100149b8 <_vfprintf_r+0xa08>
10014af2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014af4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014af8:	e416      	b.n	10014328 <_vfprintf_r+0x378>
10014afa:	2d10      	cmp	r5, #16
10014afc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014afe:	f340 8750 	ble.w	100159a2 <_vfprintf_r+0x19f2>
10014b02:	4fbb      	ldr	r7, [pc, #748]	@ (10014df0 <_vfprintf_r+0xe40>)
10014b04:	9715      	str	r7, [sp, #84]	@ 0x54
10014b06:	e9dd a907 	ldrd	sl, r9, [sp, #28]
10014b0a:	2610      	movs	r6, #16
10014b0c:	e004      	b.n	10014b18 <_vfprintf_r+0xb68>
10014b0e:	3d10      	subs	r5, #16
10014b10:	2d10      	cmp	r5, #16
10014b12:	f108 0808 	add.w	r8, r8, #8
10014b16:	dd16      	ble.n	10014b46 <_vfprintf_r+0xb96>
10014b18:	3301      	adds	r3, #1
10014b1a:	3410      	adds	r4, #16
10014b1c:	2b07      	cmp	r3, #7
10014b1e:	e9c8 7600 	strd	r7, r6, [r8]
10014b22:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014b26:	ddf2      	ble.n	10014b0e <_vfprintf_r+0xb5e>
10014b28:	aa32      	add	r2, sp, #200	@ 0xc8
10014b2a:	4651      	mov	r1, sl
10014b2c:	4648      	mov	r0, r9
10014b2e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014b32:	f001 f8e1 	bl	10015cf8 <__sprint_r>
10014b36:	2800      	cmp	r0, #0
10014b38:	f040 82f5 	bne.w	10015126 <_vfprintf_r+0x1176>
10014b3c:	3d10      	subs	r5, #16
10014b3e:	2d10      	cmp	r5, #16
10014b40:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014b44:	dce8      	bgt.n	10014b18 <_vfprintf_r+0xb68>
10014b46:	3301      	adds	r3, #1
10014b48:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014b4a:	442c      	add	r4, r5
10014b4c:	2b07      	cmp	r3, #7
10014b4e:	e9c8 2500 	strd	r2, r5, [r8]
10014b52:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014b56:	f77f ac0b 	ble.w	10014370 <_vfprintf_r+0x3c0>
10014b5a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014b5e:	aa32      	add	r2, sp, #200	@ 0xc8
10014b60:	f001 f8ca 	bl	10015cf8 <__sprint_r>
10014b64:	2800      	cmp	r0, #0
10014b66:	f47f af27 	bne.w	100149b8 <_vfprintf_r+0xa08>
10014b6a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014b6c:	e400      	b.n	10014370 <_vfprintf_r+0x3c0>
10014b6e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10014b70:	2a00      	cmp	r2, #0
10014b72:	f340 80fd 	ble.w	10014d70 <_vfprintf_r+0xdc0>
10014b76:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10014b7a:	429f      	cmp	r7, r3
10014b7c:	bfa8      	it	ge
10014b7e:	461f      	movge	r7, r3
10014b80:	2f00      	cmp	r7, #0
10014b82:	eb05 0b03 	add.w	fp, r5, r3
10014b86:	dd0b      	ble.n	10014ba0 <_vfprintf_r+0xbf0>
10014b88:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014b8a:	3301      	adds	r3, #1
10014b8c:	443c      	add	r4, r7
10014b8e:	2b07      	cmp	r3, #7
10014b90:	e9c8 5700 	strd	r5, r7, [r8]
10014b94:	9434      	str	r4, [sp, #208]	@ 0xd0
10014b96:	9333      	str	r3, [sp, #204]	@ 0xcc
10014b98:	f300 866d 	bgt.w	10015876 <_vfprintf_r+0x18c6>
10014b9c:	f108 0808 	add.w	r8, r8, #8
10014ba0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10014ba2:	2f00      	cmp	r7, #0
10014ba4:	bfa8      	it	ge
10014ba6:	1bf6      	subge	r6, r6, r7
10014ba8:	2e00      	cmp	r6, #0
10014baa:	f300 8345 	bgt.w	10015238 <_vfprintf_r+0x1288>
10014bae:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10014bb0:	f419 6f80 	tst.w	r9, #1024	@ 0x400
10014bb4:	442b      	add	r3, r5
10014bb6:	469a      	mov	sl, r3
10014bb8:	f040 8578 	bne.w	100156ac <_vfprintf_r+0x16fc>
10014bbc:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10014bbe:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014bc0:	429d      	cmp	r5, r3
10014bc2:	db03      	blt.n	10014bcc <_vfprintf_r+0xc1c>
10014bc4:	f019 0f01 	tst.w	r9, #1
10014bc8:	f000 8402 	beq.w	100153d0 <_vfprintf_r+0x1420>
10014bcc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014bce:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014bd0:	441c      	add	r4, r3
10014bd2:	e9c8 2300 	strd	r2, r3, [r8]
10014bd6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014bd8:	9434      	str	r4, [sp, #208]	@ 0xd0
10014bda:	3301      	adds	r3, #1
10014bdc:	2b07      	cmp	r3, #7
10014bde:	9333      	str	r3, [sp, #204]	@ 0xcc
10014be0:	f300 8658 	bgt.w	10015894 <_vfprintf_r+0x18e4>
10014be4:	f108 0808 	add.w	r8, r8, #8
10014be8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014bea:	ebab 060a 	sub.w	r6, fp, sl
10014bee:	1b5d      	subs	r5, r3, r5
10014bf0:	42ae      	cmp	r6, r5
10014bf2:	bfa8      	it	ge
10014bf4:	462e      	movge	r6, r5
10014bf6:	2e00      	cmp	r6, #0
10014bf8:	dd0d      	ble.n	10014c16 <_vfprintf_r+0xc66>
10014bfa:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014bfc:	f8c8 a000 	str.w	sl, [r8]
10014c00:	3301      	adds	r3, #1
10014c02:	4434      	add	r4, r6
10014c04:	2b07      	cmp	r3, #7
10014c06:	f8c8 6004 	str.w	r6, [r8, #4]
10014c0a:	9434      	str	r4, [sp, #208]	@ 0xd0
10014c0c:	9333      	str	r3, [sp, #204]	@ 0xcc
10014c0e:	f300 8653 	bgt.w	100158b8 <_vfprintf_r+0x1908>
10014c12:	f108 0808 	add.w	r8, r8, #8
10014c16:	2e00      	cmp	r6, #0
10014c18:	bfa8      	it	ge
10014c1a:	1bad      	subge	r5, r5, r6
10014c1c:	2d00      	cmp	r5, #0
10014c1e:	f77f ab9e 	ble.w	1001435e <_vfprintf_r+0x3ae>
10014c22:	2d10      	cmp	r5, #16
10014c24:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014c26:	f340 82d9 	ble.w	100151dc <_vfprintf_r+0x122c>
10014c2a:	4f72      	ldr	r7, [pc, #456]	@ (10014df4 <_vfprintf_r+0xe44>)
10014c2c:	9715      	str	r7, [sp, #84]	@ 0x54
10014c2e:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
10014c32:	2610      	movs	r6, #16
10014c34:	e005      	b.n	10014c42 <_vfprintf_r+0xc92>
10014c36:	f108 0808 	add.w	r8, r8, #8
10014c3a:	3d10      	subs	r5, #16
10014c3c:	2d10      	cmp	r5, #16
10014c3e:	f340 82cf 	ble.w	100151e0 <_vfprintf_r+0x1230>
10014c42:	3301      	adds	r3, #1
10014c44:	3410      	adds	r4, #16
10014c46:	2b07      	cmp	r3, #7
10014c48:	e9c8 7600 	strd	r7, r6, [r8]
10014c4c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014c50:	ddf1      	ble.n	10014c36 <_vfprintf_r+0xc86>
10014c52:	aa32      	add	r2, sp, #200	@ 0xc8
10014c54:	4651      	mov	r1, sl
10014c56:	4658      	mov	r0, fp
10014c58:	f001 f84e 	bl	10015cf8 <__sprint_r>
10014c5c:	2800      	cmp	r0, #0
10014c5e:	f47f aaff 	bne.w	10014260 <_vfprintf_r+0x2b0>
10014c62:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014c66:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014c6a:	e7e6      	b.n	10014c3a <_vfprintf_r+0xc8a>
10014c6c:	f019 0f01 	tst.w	r9, #1
10014c70:	f47f aedf 	bne.w	10014a32 <_vfprintf_r+0xa82>
10014c74:	2301      	movs	r3, #1
10014c76:	2e07      	cmp	r6, #7
10014c78:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014c7c:	f8c8 5000 	str.w	r5, [r8]
10014c80:	f8c8 3004 	str.w	r3, [r8, #4]
10014c84:	f77f af03 	ble.w	10014a8e <_vfprintf_r+0xade>
10014c88:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014c8c:	aa32      	add	r2, sp, #200	@ 0xc8
10014c8e:	f001 f833 	bl	10015cf8 <__sprint_r>
10014c92:	2800      	cmp	r0, #0
10014c94:	f47f ae90 	bne.w	100149b8 <_vfprintf_r+0xa08>
10014c98:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10014c9c:	af35      	add	r7, sp, #212	@ 0xd4
10014c9e:	e6f6      	b.n	10014a8e <_vfprintf_r+0xade>
10014ca0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014ca2:	2b01      	cmp	r3, #1
10014ca4:	f77f aef3 	ble.w	10014a8e <_vfprintf_r+0xade>
10014ca8:	2b11      	cmp	r3, #17
10014caa:	4b52      	ldr	r3, [pc, #328]	@ (10014df4 <_vfprintf_r+0xe44>)
10014cac:	9315      	str	r3, [sp, #84]	@ 0x54
10014cae:	f340 82b7 	ble.w	10015220 <_vfprintf_r+0x1270>
10014cb2:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
10014cb6:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
10014cba:	2510      	movs	r5, #16
10014cbc:	4699      	mov	r9, r3
10014cbe:	e006      	b.n	10014cce <_vfprintf_r+0xd1e>
10014cc0:	3708      	adds	r7, #8
10014cc2:	f1a8 0810 	sub.w	r8, r8, #16
10014cc6:	f1b8 0f10 	cmp.w	r8, #16
10014cca:	f340 82a7 	ble.w	1001521c <_vfprintf_r+0x126c>
10014cce:	3601      	adds	r6, #1
10014cd0:	3410      	adds	r4, #16
10014cd2:	2e07      	cmp	r6, #7
10014cd4:	e9c7 9500 	strd	r9, r5, [r7]
10014cd8:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014cdc:	ddf0      	ble.n	10014cc0 <_vfprintf_r+0xd10>
10014cde:	aa32      	add	r2, sp, #200	@ 0xc8
10014ce0:	4659      	mov	r1, fp
10014ce2:	4650      	mov	r0, sl
10014ce4:	f001 f808 	bl	10015cf8 <__sprint_r>
10014ce8:	2800      	cmp	r0, #0
10014cea:	f040 8202 	bne.w	100150f2 <_vfprintf_r+0x1142>
10014cee:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10014cf2:	af35      	add	r7, sp, #212	@ 0xd4
10014cf4:	e7e5      	b.n	10014cc2 <_vfprintf_r+0xd12>
10014cf6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014cfa:	aa32      	add	r2, sp, #200	@ 0xc8
10014cfc:	f000 fffc 	bl	10015cf8 <__sprint_r>
10014d00:	2800      	cmp	r0, #0
10014d02:	f47f ae59 	bne.w	100149b8 <_vfprintf_r+0xa08>
10014d06:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014d08:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014d0c:	f7ff bb15 	b.w	1001433a <_vfprintf_r+0x38a>
10014d10:	990d      	ldr	r1, [sp, #52]	@ 0x34
10014d12:	f851 3b04 	ldr.w	r3, [r1], #4
10014d16:	910d      	str	r1, [sp, #52]	@ 0x34
10014d18:	f014 0110 	ands.w	r1, r4, #16
10014d1c:	d155      	bne.n	10014dca <_vfprintf_r+0xe1a>
10014d1e:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10014d22:	d04d      	beq.n	10014dc0 <_vfprintf_r+0xe10>
10014d24:	460a      	mov	r2, r1
10014d26:	b29b      	uxth	r3, r3
10014d28:	2101      	movs	r1, #1
10014d2a:	e4b7      	b.n	1001469c <_vfprintf_r+0x6ec>
10014d2c:	990d      	ldr	r1, [sp, #52]	@ 0x34
10014d2e:	f851 3b04 	ldr.w	r3, [r1], #4
10014d32:	910d      	str	r1, [sp, #52]	@ 0x34
10014d34:	f019 0110 	ands.w	r1, r9, #16
10014d38:	f47f acad 	bne.w	10014696 <_vfprintf_r+0x6e6>
10014d3c:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10014d40:	f000 82a7 	beq.w	10015292 <_vfprintf_r+0x12e2>
10014d44:	b29b      	uxth	r3, r3
10014d46:	460a      	mov	r2, r1
10014d48:	e4a5      	b.n	10014696 <_vfprintf_r+0x6e6>
10014d4a:	9d07      	ldr	r5, [sp, #28]
10014d4c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10014d4e:	f7fd fa2b 	bl	100121a8 <__retarget_lock_acquire_recursive>
10014d52:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
10014d56:	f7ff b951 	b.w	10013ffc <_vfprintf_r+0x4c>
10014d5a:	f019 0f01 	tst.w	r9, #1
10014d5e:	f43f aafe 	beq.w	1001435e <_vfprintf_r+0x3ae>
10014d62:	e52b      	b.n	100147bc <_vfprintf_r+0x80c>
10014d64:	930d      	str	r3, [sp, #52]	@ 0x34
10014d66:	7823      	ldrb	r3, [r4, #0]
10014d68:	f7ff b99a 	b.w	100140a0 <_vfprintf_r+0xf0>
10014d6c:	ad5e      	add	r5, sp, #376	@ 0x178
10014d6e:	e575      	b.n	1001485c <_vfprintf_r+0x8ac>
10014d70:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014d72:	4921      	ldr	r1, [pc, #132]	@ (10014df8 <_vfprintf_r+0xe48>)
10014d74:	f8c8 1000 	str.w	r1, [r8]
10014d78:	3301      	adds	r3, #1
10014d7a:	3401      	adds	r4, #1
10014d7c:	2101      	movs	r1, #1
10014d7e:	2b07      	cmp	r3, #7
10014d80:	9434      	str	r4, [sp, #208]	@ 0xd0
10014d82:	9333      	str	r3, [sp, #204]	@ 0xcc
10014d84:	f8c8 1004 	str.w	r1, [r8, #4]
10014d88:	f300 854f 	bgt.w	1001582a <_vfprintf_r+0x187a>
10014d8c:	f108 0808 	add.w	r8, r8, #8
10014d90:	2a00      	cmp	r2, #0
10014d92:	f47f ae14 	bne.w	100149be <_vfprintf_r+0xa0e>
10014d96:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10014d98:	f009 0301 	and.w	r3, r9, #1
10014d9c:	4313      	orrs	r3, r2
10014d9e:	f43f aade 	beq.w	1001435e <_vfprintf_r+0x3ae>
10014da2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014da4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014da6:	441c      	add	r4, r3
10014da8:	e9c8 2300 	strd	r2, r3, [r8]
10014dac:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014dae:	9434      	str	r4, [sp, #208]	@ 0xd0
10014db0:	3301      	adds	r3, #1
10014db2:	2b07      	cmp	r3, #7
10014db4:	9333      	str	r3, [sp, #204]	@ 0xcc
10014db6:	f300 83cb 	bgt.w	10015550 <_vfprintf_r+0x15a0>
10014dba:	f108 0808 	add.w	r8, r8, #8
10014dbe:	e60f      	b.n	100149e0 <_vfprintf_r+0xa30>
10014dc0:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
10014dc4:	bf1c      	itt	ne
10014dc6:	b2db      	uxtbne	r3, r3
10014dc8:	4602      	movne	r2, r0
10014dca:	2101      	movs	r1, #1
10014dcc:	e466      	b.n	1001469c <_vfprintf_r+0x6ec>
10014dce:	f419 7f00 	tst.w	r9, #512	@ 0x200
10014dd2:	f040 8305 	bne.w	100153e0 <_vfprintf_r+0x1430>
10014dd6:	17da      	asrs	r2, r3, #31
10014dd8:	4611      	mov	r1, r2
10014dda:	2900      	cmp	r1, #0
10014ddc:	f6bf abdc 	bge.w	10014598 <_vfprintf_r+0x5e8>
10014de0:	425b      	negs	r3, r3
10014de2:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10014de6:	464c      	mov	r4, r9
10014de8:	202d      	movs	r0, #45	@ 0x2d
10014dea:	2101      	movs	r1, #1
10014dec:	e457      	b.n	1001469e <_vfprintf_r+0x6ee>
10014dee:	bf00      	nop
10014df0:	10019350 	.word	0x10019350
10014df4:	10019340 	.word	0x10019340
10014df8:	10019150 	.word	0x10019150
10014dfc:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10014dfe:	7823      	ldrb	r3, [r4, #0]
10014e00:	2a00      	cmp	r2, #0
10014e02:	f43f a94d 	beq.w	100140a0 <_vfprintf_r+0xf0>
10014e06:	7812      	ldrb	r2, [r2, #0]
10014e08:	2a00      	cmp	r2, #0
10014e0a:	f43f a949 	beq.w	100140a0 <_vfprintf_r+0xf0>
10014e0e:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
10014e12:	f7ff b945 	b.w	100140a0 <_vfprintf_r+0xf0>
10014e16:	f019 0f10 	tst.w	r9, #16
10014e1a:	f040 81f9 	bne.w	10015210 <_vfprintf_r+0x1260>
10014e1e:	f019 0f40 	tst.w	r9, #64	@ 0x40
10014e22:	f040 82e3 	bne.w	100153ec <_vfprintf_r+0x143c>
10014e26:	f419 7f00 	tst.w	r9, #512	@ 0x200
10014e2a:	f000 81f1 	beq.w	10015210 <_vfprintf_r+0x1260>
10014e2e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014e30:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014e32:	681b      	ldr	r3, [r3, #0]
10014e34:	701a      	strb	r2, [r3, #0]
10014e36:	e49b      	b.n	10014770 <_vfprintf_r+0x7c0>
10014e38:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10014e3c:	4602      	mov	r2, r0
10014e3e:	460b      	mov	r3, r1
10014e40:	f003 fe78 	bl	10018b34 <__aeabi_dcmpun>
10014e44:	2800      	cmp	r0, #0
10014e46:	f040 8636 	bne.w	10015ab6 <_vfprintf_r+0x1b06>
10014e4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014e4c:	2b61      	cmp	r3, #97	@ 0x61
10014e4e:	f000 851f 	beq.w	10015890 <_vfprintf_r+0x18e0>
10014e52:	2b41      	cmp	r3, #65	@ 0x41
10014e54:	f000 82e1 	beq.w	1001541a <_vfprintf_r+0x146a>
10014e58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014e5a:	3301      	adds	r3, #1
10014e5c:	f000 8615 	beq.w	10015a8a <_vfprintf_r+0x1ada>
10014e60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014e62:	f023 0320 	bic.w	r3, r3, #32
10014e66:	2b47      	cmp	r3, #71	@ 0x47
10014e68:	d104      	bne.n	10014e74 <_vfprintf_r+0xec4>
10014e6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014e6c:	2b00      	cmp	r3, #0
10014e6e:	bf08      	it	eq
10014e70:	2301      	moveq	r3, #1
10014e72:	9309      	str	r3, [sp, #36]	@ 0x24
10014e74:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10014e78:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
10014e7c:	2900      	cmp	r1, #0
10014e7e:	9215      	str	r2, [sp, #84]	@ 0x54
10014e80:	f8cd 9018 	str.w	r9, [sp, #24]
10014e84:	f04f 0300 	mov.w	r3, #0
10014e88:	f2c0 84dd 	blt.w	10015846 <_vfprintf_r+0x1896>
10014e8c:	e9cd 0124 	strd	r0, r1, [sp, #144]	@ 0x90
10014e90:	931f      	str	r3, [sp, #124]	@ 0x7c
10014e92:	930c      	str	r3, [sp, #48]	@ 0x30
10014e94:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014e96:	3b41      	subs	r3, #65	@ 0x41
10014e98:	2b25      	cmp	r3, #37	@ 0x25
10014e9a:	f200 8201 	bhi.w	100152a0 <_vfprintf_r+0x12f0>
10014e9e:	e8df f013 	tbh	[pc, r3, lsl #1]
10014ea2:	0372      	.short	0x0372
10014ea4:	01ff01ff 	.word	0x01ff01ff
10014ea8:	036b01ff 	.word	0x036b01ff
10014eac:	01ff036f 	.word	0x01ff036f
10014eb0:	01ff01ff 	.word	0x01ff01ff
10014eb4:	01ff01ff 	.word	0x01ff01ff
10014eb8:	01ff01ff 	.word	0x01ff01ff
10014ebc:	01ff01ff 	.word	0x01ff01ff
10014ec0:	01ff01ff 	.word	0x01ff01ff
10014ec4:	01ff01ff 	.word	0x01ff01ff
10014ec8:	01ff01ff 	.word	0x01ff01ff
10014ecc:	01ff01ff 	.word	0x01ff01ff
10014ed0:	01ff01ff 	.word	0x01ff01ff
10014ed4:	01ff01ff 	.word	0x01ff01ff
10014ed8:	01ff01ff 	.word	0x01ff01ff
10014edc:	01ff01ff 	.word	0x01ff01ff
10014ee0:	01ff01ff 	.word	0x01ff01ff
10014ee4:	01ff01ff 	.word	0x01ff01ff
10014ee8:	036b01ff 	.word	0x036b01ff
10014eec:	036f      	.short	0x036f
10014eee:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014ef2:	4bc2      	ldr	r3, [pc, #776]	@ (100151fc <_vfprintf_r+0x124c>)
10014ef4:	931a      	str	r3, [sp, #104]	@ 0x68
10014ef6:	f019 0220 	ands.w	r2, r9, #32
10014efa:	d06a      	beq.n	10014fd2 <_vfprintf_r+0x1022>
10014efc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014efe:	3307      	adds	r3, #7
10014f00:	f023 0307 	bic.w	r3, r3, #7
10014f04:	4619      	mov	r1, r3
10014f06:	685a      	ldr	r2, [r3, #4]
10014f08:	f851 3b08 	ldr.w	r3, [r1], #8
10014f0c:	910d      	str	r1, [sp, #52]	@ 0x34
10014f0e:	f019 0f01 	tst.w	r9, #1
10014f12:	d00a      	beq.n	10014f2a <_vfprintf_r+0xf7a>
10014f14:	ea53 0102 	orrs.w	r1, r3, r2
10014f18:	d007      	beq.n	10014f2a <_vfprintf_r+0xf7a>
10014f1a:	990e      	ldr	r1, [sp, #56]	@ 0x38
10014f1c:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10014f20:	2130      	movs	r1, #48	@ 0x30
10014f22:	f049 0902 	orr.w	r9, r9, #2
10014f26:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10014f2a:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10014f2e:	2102      	movs	r1, #2
10014f30:	f7ff bbb4 	b.w	1001469c <_vfprintf_r+0x6ec>
10014f34:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014f38:	464c      	mov	r4, r9
10014f3a:	f7ff bbd0 	b.w	100146de <_vfprintf_r+0x72e>
10014f3e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014f42:	f7ff bb9b 	b.w	1001467c <_vfprintf_r+0x6cc>
10014f46:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014f4a:	4bad      	ldr	r3, [pc, #692]	@ (10015200 <_vfprintf_r+0x1250>)
10014f4c:	931a      	str	r3, [sp, #104]	@ 0x68
10014f4e:	e7d2      	b.n	10014ef6 <_vfprintf_r+0xf46>
10014f50:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014f54:	aa32      	add	r2, sp, #200	@ 0xc8
10014f56:	f000 fecf 	bl	10015cf8 <__sprint_r>
10014f5a:	2800      	cmp	r0, #0
10014f5c:	f47f ad2c 	bne.w	100149b8 <_vfprintf_r+0xa08>
10014f60:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014f62:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014f66:	f7ff b9e2 	b.w	1001432e <_vfprintf_r+0x37e>
10014f6a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014f6e:	aa32      	add	r2, sp, #200	@ 0xc8
10014f70:	f000 fec2 	bl	10015cf8 <__sprint_r>
10014f74:	2800      	cmp	r0, #0
10014f76:	f47f ad1f 	bne.w	100149b8 <_vfprintf_r+0xa08>
10014f7a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014f7c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014f80:	e42a      	b.n	100147d8 <_vfprintf_r+0x828>
10014f82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014f84:	950c      	str	r5, [sp, #48]	@ 0x30
10014f86:	2b06      	cmp	r3, #6
10014f88:	4629      	mov	r1, r5
10014f8a:	bf28      	it	cs
10014f8c:	2306      	movcs	r3, #6
10014f8e:	9509      	str	r5, [sp, #36]	@ 0x24
10014f90:	462a      	mov	r2, r5
10014f92:	9306      	str	r3, [sp, #24]
10014f94:	4d9b      	ldr	r5, [pc, #620]	@ (10015204 <_vfprintf_r+0x1254>)
10014f96:	960d      	str	r6, [sp, #52]	@ 0x34
10014f98:	469b      	mov	fp, r3
10014f9a:	9114      	str	r1, [sp, #80]	@ 0x50
10014f9c:	9110      	str	r1, [sp, #64]	@ 0x40
10014f9e:	9112      	str	r1, [sp, #72]	@ 0x48
10014fa0:	f7ff ba41 	b.w	10014426 <_vfprintf_r+0x476>
10014fa4:	2208      	movs	r2, #8
10014fa6:	2100      	movs	r1, #0
10014fa8:	a830      	add	r0, sp, #192	@ 0xc0
10014faa:	f7fd f845 	bl	10012038 <memset>
10014fae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014fb0:	9808      	ldr	r0, [sp, #32]
10014fb2:	681a      	ldr	r2, [r3, #0]
10014fb4:	ad45      	add	r5, sp, #276	@ 0x114
10014fb6:	ab30      	add	r3, sp, #192	@ 0xc0
10014fb8:	4629      	mov	r1, r5
10014fba:	f7fd f88f 	bl	100120dc <_wcrtomb_r>
10014fbe:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10014fc2:	4683      	mov	fp, r0
10014fc4:	f000 8542 	beq.w	10015a4c <_vfprintf_r+0x1a9c>
10014fc8:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10014fcc:	9306      	str	r3, [sp, #24]
10014fce:	f7ff ba94 	b.w	100144fa <_vfprintf_r+0x54a>
10014fd2:	990d      	ldr	r1, [sp, #52]	@ 0x34
10014fd4:	f851 3b04 	ldr.w	r3, [r1], #4
10014fd8:	910d      	str	r1, [sp, #52]	@ 0x34
10014fda:	f019 0110 	ands.w	r1, r9, #16
10014fde:	d196      	bne.n	10014f0e <_vfprintf_r+0xf5e>
10014fe0:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10014fe4:	f000 814f 	beq.w	10015286 <_vfprintf_r+0x12d6>
10014fe8:	b29b      	uxth	r3, r3
10014fea:	460a      	mov	r2, r1
10014fec:	e78f      	b.n	10014f0e <_vfprintf_r+0xf5e>
10014fee:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10014ff2:	ad5e      	add	r5, sp, #376	@ 0x178
10014ff4:	e432      	b.n	1001485c <_vfprintf_r+0x8ac>
10014ff6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014ffa:	aa32      	add	r2, sp, #200	@ 0xc8
10014ffc:	f000 fe7c 	bl	10015cf8 <__sprint_r>
10015000:	2800      	cmp	r0, #0
10015002:	f47f acd9 	bne.w	100149b8 <_vfprintf_r+0xa08>
10015006:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001500a:	af35      	add	r7, sp, #212	@ 0xd4
1001500c:	e527      	b.n	10014a5e <_vfprintf_r+0xaae>
1001500e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015012:	aa32      	add	r2, sp, #200	@ 0xc8
10015014:	f000 fe70 	bl	10015cf8 <__sprint_r>
10015018:	2800      	cmp	r0, #0
1001501a:	f47f accd 	bne.w	100149b8 <_vfprintf_r+0xa08>
1001501e:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10015022:	af35      	add	r7, sp, #212	@ 0xd4
10015024:	e50f      	b.n	10014a46 <_vfprintf_r+0xa96>
10015026:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
1001502a:	2100      	movs	r1, #0
1001502c:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10015030:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 1001520c <_vfprintf_r+0x125c>
10015034:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10015038:	9406      	str	r4, [sp, #24]
1001503a:	ad5e      	add	r5, sp, #376	@ 0x178
1001503c:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10015040:	2705      	movs	r7, #5
10015042:	468c      	mov	ip, r1
10015044:	465e      	mov	r6, fp
10015046:	e005      	b.n	10015054 <_vfprintf_r+0x10a4>
10015048:	2b0a      	cmp	r3, #10
1001504a:	f172 0200 	sbcs.w	r2, r2, #0
1001504e:	d333      	bcc.n	100150b8 <_vfprintf_r+0x1108>
10015050:	465b      	mov	r3, fp
10015052:	4622      	mov	r2, r4
10015054:	1899      	adds	r1, r3, r2
10015056:	f141 0100 	adc.w	r1, r1, #0
1001505a:	fba9 0401 	umull	r0, r4, r9, r1
1001505e:	f024 0003 	bic.w	r0, r4, #3
10015062:	eb00 0094 	add.w	r0, r0, r4, lsr #2
10015066:	1a09      	subs	r1, r1, r0
10015068:	1a58      	subs	r0, r3, r1
1001506a:	f162 0e00 	sbc.w	lr, r2, #0
1001506e:	fb0a f400 	mul.w	r4, sl, r0
10015072:	fba0 b009 	umull	fp, r0, r0, r9
10015076:	fb09 440e 	mla	r4, r9, lr, r4
1001507a:	f00b 0e01 	and.w	lr, fp, #1
1001507e:	4404      	add	r4, r0
10015080:	fbae 0e07 	umull	r0, lr, lr, r7
10015084:	1840      	adds	r0, r0, r1
10015086:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
1001508a:	3030      	adds	r0, #48	@ 0x30
1001508c:	f805 0c01 	strb.w	r0, [r5, #-1]
10015090:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
10015094:	f10c 0c01 	add.w	ip, ip, #1
10015098:	3d01      	subs	r5, #1
1001509a:	0864      	lsrs	r4, r4, #1
1001509c:	2e00      	cmp	r6, #0
1001509e:	d0d3      	beq.n	10015048 <_vfprintf_r+0x1098>
100150a0:	f898 1000 	ldrb.w	r1, [r8]
100150a4:	458c      	cmp	ip, r1
100150a6:	d1cf      	bne.n	10015048 <_vfprintf_r+0x1098>
100150a8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
100150ac:	d0cc      	beq.n	10015048 <_vfprintf_r+0x1098>
100150ae:	2b0a      	cmp	r3, #10
100150b0:	f172 0200 	sbcs.w	r2, r2, #0
100150b4:	f080 82c3 	bcs.w	1001563e <_vfprintf_r+0x168e>
100150b8:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
100150bc:	9c06      	ldr	r4, [sp, #24]
100150be:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
100150c2:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
100150c6:	f7ff bbc5 	b.w	10014854 <_vfprintf_r+0x8a4>
100150ca:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100150ce:	aa32      	add	r2, sp, #200	@ 0xc8
100150d0:	9315      	str	r3, [sp, #84]	@ 0x54
100150d2:	f000 fe11 	bl	10015cf8 <__sprint_r>
100150d6:	2800      	cmp	r0, #0
100150d8:	f47f ac6e 	bne.w	100149b8 <_vfprintf_r+0xa08>
100150dc:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100150e0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100150e2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100150e4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100150e8:	f7ff b8fa 	b.w	100142e0 <_vfprintf_r+0x330>
100150ec:	46a3      	mov	fp, r4
100150ee:	f7ff b8b7 	b.w	10014260 <_vfprintf_r+0x2b0>
100150f2:	46d3      	mov	fp, sl
100150f4:	f7ff b8b4 	b.w	10014260 <_vfprintf_r+0x2b0>
100150f8:	4658      	mov	r0, fp
100150fa:	f7fe f953 	bl	100133a4 <__sinit>
100150fe:	f7fe bf74 	b.w	10013fea <_vfprintf_r+0x3a>
10015102:	2901      	cmp	r1, #1
10015104:	464c      	mov	r4, r9
10015106:	f47f ab95 	bne.w	10014834 <_vfprintf_r+0x884>
1001510a:	e4d3      	b.n	10014ab4 <_vfprintf_r+0xb04>
1001510c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015110:	aa32      	add	r2, sp, #200	@ 0xc8
10015112:	f000 fdf1 	bl	10015cf8 <__sprint_r>
10015116:	2800      	cmp	r0, #0
10015118:	f47f ac4e 	bne.w	100149b8 <_vfprintf_r+0xa08>
1001511c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001511e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015122:	f7ff bb46 	b.w	100147b2 <_vfprintf_r+0x802>
10015126:	46cb      	mov	fp, r9
10015128:	f7ff b89a 	b.w	10014260 <_vfprintf_r+0x2b0>
1001512c:	af30      	add	r7, sp, #192	@ 0xc0
1001512e:	2208      	movs	r2, #8
10015130:	2100      	movs	r1, #0
10015132:	4638      	mov	r0, r7
10015134:	952b      	str	r5, [sp, #172]	@ 0xac
10015136:	f7fc ff7f 	bl	10012038 <memset>
1001513a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001513c:	1c58      	adds	r0, r3, #1
1001513e:	f000 8270 	beq.w	10015622 <_vfprintf_r+0x1672>
10015142:	2400      	movs	r4, #0
10015144:	f8cd 9018 	str.w	r9, [sp, #24]
10015148:	46a3      	mov	fp, r4
1001514a:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001514e:	469a      	mov	sl, r3
10015150:	e00c      	b.n	1001516c <_vfprintf_r+0x11bc>
10015152:	a945      	add	r1, sp, #276	@ 0x114
10015154:	4648      	mov	r0, r9
10015156:	f7fc ffc1 	bl	100120dc <_wcrtomb_r>
1001515a:	1c41      	adds	r1, r0, #1
1001515c:	4458      	add	r0, fp
1001515e:	f000 8475 	beq.w	10015a4c <_vfprintf_r+0x1a9c>
10015162:	4550      	cmp	r0, sl
10015164:	dc08      	bgt.n	10015178 <_vfprintf_r+0x11c8>
10015166:	f000 84c2 	beq.w	10015aee <_vfprintf_r+0x1b3e>
1001516a:	4683      	mov	fp, r0
1001516c:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001516e:	5912      	ldr	r2, [r2, r4]
10015170:	463b      	mov	r3, r7
10015172:	3404      	adds	r4, #4
10015174:	2a00      	cmp	r2, #0
10015176:	d1ec      	bne.n	10015152 <_vfprintf_r+0x11a2>
10015178:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001517c:	f1bb 0f00 	cmp.w	fp, #0
10015180:	f000 8342 	beq.w	10015808 <_vfprintf_r+0x1858>
10015184:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
10015188:	f340 83f9 	ble.w	1001597e <_vfprintf_r+0x19ce>
1001518c:	9808      	ldr	r0, [sp, #32]
1001518e:	f10b 0101 	add.w	r1, fp, #1
10015192:	f7fc fc8d 	bl	10011ab0 <_malloc_r>
10015196:	4605      	mov	r5, r0
10015198:	2800      	cmp	r0, #0
1001519a:	f000 8457 	beq.w	10015a4c <_vfprintf_r+0x1a9c>
1001519e:	900c      	str	r0, [sp, #48]	@ 0x30
100151a0:	2208      	movs	r2, #8
100151a2:	2100      	movs	r1, #0
100151a4:	4638      	mov	r0, r7
100151a6:	f7fc ff47 	bl	10012038 <memset>
100151aa:	9808      	ldr	r0, [sp, #32]
100151ac:	9700      	str	r7, [sp, #0]
100151ae:	465b      	mov	r3, fp
100151b0:	aa2b      	add	r2, sp, #172	@ 0xac
100151b2:	4629      	mov	r1, r5
100151b4:	f7fd f88e 	bl	100122d4 <_wcsrtombs_r>
100151b8:	4583      	cmp	fp, r0
100151ba:	f040 8517 	bne.w	10015bec <_vfprintf_r+0x1c3c>
100151be:	2300      	movs	r3, #0
100151c0:	f805 300b 	strb.w	r3, [r5, fp]
100151c4:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100151c8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100151cc:	960d      	str	r6, [sp, #52]	@ 0x34
100151ce:	9309      	str	r3, [sp, #36]	@ 0x24
100151d0:	9106      	str	r1, [sp, #24]
100151d2:	9314      	str	r3, [sp, #80]	@ 0x50
100151d4:	9310      	str	r3, [sp, #64]	@ 0x40
100151d6:	9312      	str	r3, [sp, #72]	@ 0x48
100151d8:	f7ff b925 	b.w	10014426 <_vfprintf_r+0x476>
100151dc:	4a0a      	ldr	r2, [pc, #40]	@ (10015208 <_vfprintf_r+0x1258>)
100151de:	9215      	str	r2, [sp, #84]	@ 0x54
100151e0:	3301      	adds	r3, #1
100151e2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100151e4:	f8c8 2000 	str.w	r2, [r8]
100151e8:	442c      	add	r4, r5
100151ea:	2b07      	cmp	r3, #7
100151ec:	f8c8 5004 	str.w	r5, [r8, #4]
100151f0:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100151f4:	f77f a8b1 	ble.w	1001435a <_vfprintf_r+0x3aa>
100151f8:	f7ff bbfe 	b.w	100149f8 <_vfprintf_r+0xa48>
100151fc:	10019134 	.word	0x10019134
10015200:	10019120 	.word	0x10019120
10015204:	10019148 	.word	0x10019148
10015208:	10019340 	.word	0x10019340
1001520c:	cccccccd 	.word	0xcccccccd
10015210:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015212:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10015214:	681b      	ldr	r3, [r3, #0]
10015216:	601a      	str	r2, [r3, #0]
10015218:	f7ff baaa 	b.w	10014770 <_vfprintf_r+0x7c0>
1001521c:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
10015220:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10015222:	603b      	str	r3, [r7, #0]
10015224:	3601      	adds	r6, #1
10015226:	4444      	add	r4, r8
10015228:	2e07      	cmp	r6, #7
1001522a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001522e:	f8c7 8004 	str.w	r8, [r7, #4]
10015232:	f77f ac2b 	ble.w	10014a8c <_vfprintf_r+0xadc>
10015236:	e527      	b.n	10014c88 <_vfprintf_r+0xcd8>
10015238:	2e10      	cmp	r6, #16
1001523a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001523c:	f340 84ad 	ble.w	10015b9a <_vfprintf_r+0x1bea>
10015240:	4898      	ldr	r0, [pc, #608]	@ (100154a4 <_vfprintf_r+0x14f4>)
10015242:	9015      	str	r0, [sp, #84]	@ 0x54
10015244:	4642      	mov	r2, r8
10015246:	4621      	mov	r1, r4
10015248:	46a8      	mov	r8, r5
1001524a:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
1001524e:	2710      	movs	r7, #16
10015250:	4605      	mov	r5, r0
10015252:	e004      	b.n	1001525e <_vfprintf_r+0x12ae>
10015254:	3208      	adds	r2, #8
10015256:	3e10      	subs	r6, #16
10015258:	2e10      	cmp	r6, #16
1001525a:	f340 81ca 	ble.w	100155f2 <_vfprintf_r+0x1642>
1001525e:	3301      	adds	r3, #1
10015260:	3110      	adds	r1, #16
10015262:	2b07      	cmp	r3, #7
10015264:	e9c2 5700 	strd	r5, r7, [r2]
10015268:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
1001526c:	ddf2      	ble.n	10015254 <_vfprintf_r+0x12a4>
1001526e:	aa32      	add	r2, sp, #200	@ 0xc8
10015270:	4621      	mov	r1, r4
10015272:	4650      	mov	r0, sl
10015274:	f000 fd40 	bl	10015cf8 <__sprint_r>
10015278:	2800      	cmp	r0, #0
1001527a:	f47f af3a 	bne.w	100150f2 <_vfprintf_r+0x1142>
1001527e:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10015282:	aa35      	add	r2, sp, #212	@ 0xd4
10015284:	e7e7      	b.n	10015256 <_vfprintf_r+0x12a6>
10015286:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001528a:	bf1c      	itt	ne
1001528c:	b2db      	uxtbne	r3, r3
1001528e:	4602      	movne	r2, r0
10015290:	e63d      	b.n	10014f0e <_vfprintf_r+0xf5e>
10015292:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10015296:	bf1c      	itt	ne
10015298:	b2db      	uxtbne	r3, r3
1001529a:	4602      	movne	r2, r0
1001529c:	f7ff b9fb 	b.w	10014696 <_vfprintf_r+0x6e6>
100152a0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
100152a2:	2302      	movs	r3, #2
100152a4:	e9cd 3600 	strd	r3, r6, [sp]
100152a8:	ab30      	add	r3, sp, #192	@ 0xc0
100152aa:	9304      	str	r3, [sp, #16]
100152ac:	ab2b      	add	r3, sp, #172	@ 0xac
100152ae:	9303      	str	r3, [sp, #12]
100152b0:	ab29      	add	r3, sp, #164	@ 0xa4
100152b2:	9302      	str	r3, [sp, #8]
100152b4:	9808      	ldr	r0, [sp, #32]
100152b6:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
100152ba:	f7fd f8ad 	bl	10012418 <_dtoa_r>
100152be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100152c0:	2b67      	cmp	r3, #103	@ 0x67
100152c2:	4605      	mov	r5, r0
100152c4:	f000 8177 	beq.w	100155b6 <_vfprintf_r+0x1606>
100152c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100152ca:	2b47      	cmp	r3, #71	@ 0x47
100152cc:	f000 8173 	beq.w	100155b6 <_vfprintf_r+0x1606>
100152d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100152d2:	f023 0720 	bic.w	r7, r3, #32
100152d6:	2f46      	cmp	r7, #70	@ 0x46
100152d8:	eb00 0406 	add.w	r4, r0, r6
100152dc:	d105      	bne.n	100152ea <_vfprintf_r+0x133a>
100152de:	7803      	ldrb	r3, [r0, #0]
100152e0:	2b30      	cmp	r3, #48	@ 0x30
100152e2:	f000 83db 	beq.w	10015a9c <_vfprintf_r+0x1aec>
100152e6:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
100152e8:	4434      	add	r4, r6
100152ea:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100152ee:	2200      	movs	r2, #0
100152f0:	2300      	movs	r3, #0
100152f2:	f003 fbed 	bl	10018ad0 <__aeabi_dcmpeq>
100152f6:	2800      	cmp	r0, #0
100152f8:	f000 81cc 	beq.w	10015694 <_vfprintf_r+0x16e4>
100152fc:	4623      	mov	r3, r4
100152fe:	1b5b      	subs	r3, r3, r5
10015300:	9313      	str	r3, [sp, #76]	@ 0x4c
10015302:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10015304:	9212      	str	r2, [sp, #72]	@ 0x48
10015306:	2f47      	cmp	r7, #71	@ 0x47
10015308:	f000 815d 	beq.w	100155c6 <_vfprintf_r+0x1616>
1001530c:	2f46      	cmp	r7, #70	@ 0x46
1001530e:	f000 82e3 	beq.w	100158d8 <_vfprintf_r+0x1928>
10015312:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015314:	1e53      	subs	r3, r2, #1
10015316:	2961      	cmp	r1, #97	@ 0x61
10015318:	9329      	str	r3, [sp, #164]	@ 0xa4
1001531a:	f000 8441 	beq.w	10015ba0 <_vfprintf_r+0x1bf0>
1001531e:	2941      	cmp	r1, #65	@ 0x41
10015320:	f040 815c 	bne.w	100155dc <_vfprintf_r+0x162c>
10015324:	2150      	movs	r1, #80	@ 0x50
10015326:	2001      	movs	r0, #1
10015328:	2b00      	cmp	r3, #0
1001532a:	bfb6      	itet	lt
1001532c:	f1c2 0301 	rsblt	r3, r2, #1
10015330:	222b      	movge	r2, #43	@ 0x2b
10015332:	222d      	movlt	r2, #45	@ 0x2d
10015334:	2b09      	cmp	r3, #9
10015336:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001533a:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001533e:	f340 8377 	ble.w	10015a30 <_vfprintf_r+0x1a80>
10015342:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10015346:	4e58      	ldr	r6, [pc, #352]	@ (100154a8 <_vfprintf_r+0x14f8>)
10015348:	4622      	mov	r2, r4
1001534a:	4610      	mov	r0, r2
1001534c:	fba6 1203 	umull	r1, r2, r6, r3
10015350:	08d2      	lsrs	r2, r2, #3
10015352:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10015356:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001535a:	3130      	adds	r1, #48	@ 0x30
1001535c:	f800 1c01 	strb.w	r1, [r0, #-1]
10015360:	4619      	mov	r1, r3
10015362:	2963      	cmp	r1, #99	@ 0x63
10015364:	4613      	mov	r3, r2
10015366:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001536a:	dcee      	bgt.n	1001534a <_vfprintf_r+0x139a>
1001536c:	3330      	adds	r3, #48	@ 0x30
1001536e:	f802 3c01 	strb.w	r3, [r2, #-1]
10015372:	1e83      	subs	r3, r0, #2
10015374:	42a3      	cmp	r3, r4
10015376:	f080 840c 	bcs.w	10015b92 <_vfprintf_r+0x1be2>
1001537a:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001537e:	f813 1b01 	ldrb.w	r1, [r3], #1
10015382:	f802 1f01 	strb.w	r1, [r2, #1]!
10015386:	42a3      	cmp	r3, r4
10015388:	d1f9      	bne.n	1001537e <_vfprintf_r+0x13ce>
1001538a:	ab5e      	add	r3, sp, #376	@ 0x178
1001538c:	1a18      	subs	r0, r3, r0
1001538e:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10015392:	931c      	str	r3, [sp, #112]	@ 0x70
10015394:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10015396:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10015398:	2b01      	cmp	r3, #1
1001539a:	eb03 0b02 	add.w	fp, r3, r2
1001539e:	f340 8378 	ble.w	10015a92 <_vfprintf_r+0x1ae2>
100153a2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100153a4:	449b      	add	fp, r3
100153a6:	9b06      	ldr	r3, [sp, #24]
100153a8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
100153ac:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
100153b0:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
100153b4:	2300      	movs	r3, #0
100153b6:	9314      	str	r3, [sp, #80]	@ 0x50
100153b8:	9206      	str	r2, [sp, #24]
100153ba:	9310      	str	r3, [sp, #64]	@ 0x40
100153bc:	9312      	str	r3, [sp, #72]	@ 0x48
100153be:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
100153c0:	2b00      	cmp	r3, #0
100153c2:	f040 810f 	bne.w	100155e4 <_vfprintf_r+0x1634>
100153c6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100153ca:	9309      	str	r3, [sp, #36]	@ 0x24
100153cc:	f7ff b82b 	b.w	10014426 <_vfprintf_r+0x476>
100153d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100153d2:	ebab 060a 	sub.w	r6, fp, sl
100153d6:	1b5d      	subs	r5, r3, r5
100153d8:	42ae      	cmp	r6, r5
100153da:	bfa8      	it	ge
100153dc:	462e      	movge	r6, r5
100153de:	e41a      	b.n	10014c16 <_vfprintf_r+0xc66>
100153e0:	f343 12c0 	sbfx	r2, r3, #7, #1
100153e4:	4611      	mov	r1, r2
100153e6:	b25b      	sxtb	r3, r3
100153e8:	f7ff b8d3 	b.w	10014592 <_vfprintf_r+0x5e2>
100153ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100153ee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100153f0:	681b      	ldr	r3, [r3, #0]
100153f2:	801a      	strh	r2, [r3, #0]
100153f4:	f7ff b9bc 	b.w	10014770 <_vfprintf_r+0x7c0>
100153f8:	9907      	ldr	r1, [sp, #28]
100153fa:	aa32      	add	r2, sp, #200	@ 0xc8
100153fc:	4658      	mov	r0, fp
100153fe:	f000 fc7b 	bl	10015cf8 <__sprint_r>
10015402:	2800      	cmp	r0, #0
10015404:	f43e af1c 	beq.w	10014240 <_vfprintf_r+0x290>
10015408:	f7fe bf30 	b.w	1001426c <_vfprintf_r+0x2bc>
1001540c:	4628      	mov	r0, r5
1001540e:	960d      	str	r6, [sp, #52]	@ 0x34
10015410:	f7fe f8f6 	bl	10013600 <strlen>
10015414:	4683      	mov	fp, r0
10015416:	f7ff b89f 	b.w	10014558 <_vfprintf_r+0x5a8>
1001541a:	2358      	movs	r3, #88	@ 0x58
1001541c:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10015420:	2330      	movs	r3, #48	@ 0x30
10015422:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
10015426:	f049 0302 	orr.w	r3, r9, #2
1001542a:	9306      	str	r3, [sp, #24]
1001542c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001542e:	2b63      	cmp	r3, #99	@ 0x63
10015430:	f300 82f6 	bgt.w	10015a20 <_vfprintf_r+0x1a70>
10015434:	2300      	movs	r3, #0
10015436:	930c      	str	r3, [sp, #48]	@ 0x30
10015438:	ad45      	add	r5, sp, #276	@ 0x114
1001543a:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001543e:	9315      	str	r3, [sp, #84]	@ 0x54
10015440:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10015442:	2b00      	cmp	r3, #0
10015444:	f2c0 8200 	blt.w	10015848 <_vfprintf_r+0x1898>
10015448:	ed9d 7b16 	vldr	d7, [sp, #88]	@ 0x58
1001544c:	ed8d 7b24 	vstr	d7, [sp, #144]	@ 0x90
10015450:	2300      	movs	r3, #0
10015452:	931f      	str	r3, [sp, #124]	@ 0x7c
10015454:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10015456:	2b61      	cmp	r3, #97	@ 0x61
10015458:	f47f ad1c 	bne.w	10014e94 <_vfprintf_r+0xee4>
1001545c:	aa29      	add	r2, sp, #164	@ 0xa4
1001545e:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10015462:	f7fe f939 	bl	100136d8 <frexp>
10015466:	2200      	movs	r2, #0
10015468:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001546c:	f003 f8c8 	bl	10018600 <__aeabi_dmul>
10015470:	4602      	mov	r2, r0
10015472:	460b      	mov	r3, r1
10015474:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10015478:	2200      	movs	r2, #0
1001547a:	2300      	movs	r3, #0
1001547c:	f003 fb28 	bl	10018ad0 <__aeabi_dcmpeq>
10015480:	2800      	cmp	r0, #0
10015482:	f040 82f8 	bne.w	10015a76 <_vfprintf_r+0x1ac6>
10015486:	4b09      	ldr	r3, [pc, #36]	@ (100154ac <_vfprintf_r+0x14fc>)
10015488:	9312      	str	r3, [sp, #72]	@ 0x48
1001548a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001548c:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10015490:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
10015494:	462e      	mov	r6, r5
10015496:	9514      	str	r5, [sp, #80]	@ 0x50
10015498:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001549c:	464d      	mov	r5, r9
1001549e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
100154a2:	e00b      	b.n	100154bc <_vfprintf_r+0x150c>
100154a4:	10019340 	.word	0x10019340
100154a8:	cccccccd 	.word	0xcccccccd
100154ac:	10019120 	.word	0x10019120
100154b0:	2200      	movs	r2, #0
100154b2:	2300      	movs	r3, #0
100154b4:	f003 fb0c 	bl	10018ad0 <__aeabi_dcmpeq>
100154b8:	b9f0      	cbnz	r0, 100154f8 <_vfprintf_r+0x1548>
100154ba:	463d      	mov	r5, r7
100154bc:	4ba9      	ldr	r3, [pc, #676]	@ (10015764 <_vfprintf_r+0x17b4>)
100154be:	2200      	movs	r2, #0
100154c0:	4640      	mov	r0, r8
100154c2:	4649      	mov	r1, r9
100154c4:	f003 f89c 	bl	10018600 <__aeabi_dmul>
100154c8:	4689      	mov	r9, r1
100154ca:	4680      	mov	r8, r0
100154cc:	f003 fb48 	bl	10018b60 <__aeabi_d2iz>
100154d0:	4604      	mov	r4, r0
100154d2:	f003 f82b 	bl	1001852c <__aeabi_i2d>
100154d6:	460b      	mov	r3, r1
100154d8:	4602      	mov	r2, r0
100154da:	4649      	mov	r1, r9
100154dc:	4640      	mov	r0, r8
100154de:	f002 fed7 	bl	10018290 <__aeabi_dsub>
100154e2:	f81b 3004 	ldrb.w	r3, [fp, r4]
100154e6:	46b2      	mov	sl, r6
100154e8:	f806 3b01 	strb.w	r3, [r6], #1
100154ec:	1c6b      	adds	r3, r5, #1
100154ee:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
100154f2:	4680      	mov	r8, r0
100154f4:	4689      	mov	r9, r1
100154f6:	d1db      	bne.n	100154b0 <_vfprintf_r+0x1500>
100154f8:	46cb      	mov	fp, r9
100154fa:	4657      	mov	r7, sl
100154fc:	46c2      	mov	sl, r8
100154fe:	4b9a      	ldr	r3, [pc, #616]	@ (10015768 <_vfprintf_r+0x17b8>)
10015500:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
10015504:	2200      	movs	r2, #0
10015506:	4650      	mov	r0, sl
10015508:	4659      	mov	r1, fp
1001550a:	46a9      	mov	r9, r5
1001550c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001550e:	f003 fb07 	bl	10018b20 <__aeabi_dcmpgt>
10015512:	2800      	cmp	r0, #0
10015514:	f040 8264 	bne.w	100159e0 <_vfprintf_r+0x1a30>
10015518:	4b93      	ldr	r3, [pc, #588]	@ (10015768 <_vfprintf_r+0x17b8>)
1001551a:	4650      	mov	r0, sl
1001551c:	4659      	mov	r1, fp
1001551e:	2200      	movs	r2, #0
10015520:	f003 fad6 	bl	10018ad0 <__aeabi_dcmpeq>
10015524:	b110      	cbz	r0, 1001552c <_vfprintf_r+0x157c>
10015526:	07e2      	lsls	r2, r4, #31
10015528:	f100 825a 	bmi.w	100159e0 <_vfprintf_r+0x1a30>
1001552c:	f1b9 0f00 	cmp.w	r9, #0
10015530:	f2c0 8270 	blt.w	10015a14 <_vfprintf_r+0x1a64>
10015534:	f109 0301 	add.w	r3, r9, #1
10015538:	4433      	add	r3, r6
1001553a:	2230      	movs	r2, #48	@ 0x30
1001553c:	f806 2b01 	strb.w	r2, [r6], #1
10015540:	42b3      	cmp	r3, r6
10015542:	d1fb      	bne.n	1001553c <_vfprintf_r+0x158c>
10015544:	1b5b      	subs	r3, r3, r5
10015546:	9313      	str	r3, [sp, #76]	@ 0x4c
10015548:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001554a:	f023 0720 	bic.w	r7, r3, #32
1001554e:	e6d8      	b.n	10015302 <_vfprintf_r+0x1352>
10015550:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015554:	aa32      	add	r2, sp, #200	@ 0xc8
10015556:	f000 fbcf 	bl	10015cf8 <__sprint_r>
1001555a:	2800      	cmp	r0, #0
1001555c:	f47f aa2c 	bne.w	100149b8 <_vfprintf_r+0xa08>
10015560:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10015564:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10015566:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001556a:	f7ff ba36 	b.w	100149da <_vfprintf_r+0xa2a>
1001556e:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10015570:	f7fc fe1c 	bl	100121ac <__retarget_lock_release_recursive>
10015574:	f7fe be36 	b.w	100141e4 <_vfprintf_r+0x234>
10015578:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001557a:	1c5e      	adds	r6, r3, #1
1001557c:	2302      	movs	r3, #2
1001557e:	e691      	b.n	100152a4 <_vfprintf_r+0x12f4>
10015580:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10015582:	2303      	movs	r3, #3
10015584:	e68e      	b.n	100152a4 <_vfprintf_r+0x12f4>
10015586:	aa29      	add	r2, sp, #164	@ 0xa4
10015588:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001558c:	f7fe f8a4 	bl	100136d8 <frexp>
10015590:	2200      	movs	r2, #0
10015592:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10015596:	f003 f833 	bl	10018600 <__aeabi_dmul>
1001559a:	4602      	mov	r2, r0
1001559c:	460b      	mov	r3, r1
1001559e:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100155a2:	2200      	movs	r2, #0
100155a4:	2300      	movs	r3, #0
100155a6:	f003 fa93 	bl	10018ad0 <__aeabi_dcmpeq>
100155aa:	2800      	cmp	r0, #0
100155ac:	f040 8263 	bne.w	10015a76 <_vfprintf_r+0x1ac6>
100155b0:	4b6e      	ldr	r3, [pc, #440]	@ (1001576c <_vfprintf_r+0x17bc>)
100155b2:	9312      	str	r3, [sp, #72]	@ 0x48
100155b4:	e769      	b.n	1001548a <_vfprintf_r+0x14da>
100155b6:	9b06      	ldr	r3, [sp, #24]
100155b8:	07db      	lsls	r3, r3, #31
100155ba:	f100 81e4 	bmi.w	10015986 <_vfprintf_r+0x19d6>
100155be:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100155c0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100155c2:	1b5b      	subs	r3, r3, r5
100155c4:	9313      	str	r3, [sp, #76]	@ 0x4c
100155c6:	1cd3      	adds	r3, r2, #3
100155c8:	9212      	str	r2, [sp, #72]	@ 0x48
100155ca:	db02      	blt.n	100155d2 <_vfprintf_r+0x1622>
100155cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100155ce:	4293      	cmp	r3, r2
100155d0:	da44      	bge.n	1001565c <_vfprintf_r+0x16ac>
100155d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100155d4:	3b02      	subs	r3, #2
100155d6:	930e      	str	r3, [sp, #56]	@ 0x38
100155d8:	1e53      	subs	r3, r2, #1
100155da:	9329      	str	r3, [sp, #164]	@ 0xa4
100155dc:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
100155e0:	2000      	movs	r0, #0
100155e2:	e6a1      	b.n	10015328 <_vfprintf_r+0x1378>
100155e4:	222d      	movs	r2, #45	@ 0x2d
100155e6:	2300      	movs	r3, #0
100155e8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100155ec:	9309      	str	r3, [sp, #36]	@ 0x24
100155ee:	f7fe bf1d 	b.w	1001442c <_vfprintf_r+0x47c>
100155f2:	4645      	mov	r5, r8
100155f4:	460c      	mov	r4, r1
100155f6:	4690      	mov	r8, r2
100155f8:	3301      	adds	r3, #1
100155fa:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100155fc:	f8c8 2000 	str.w	r2, [r8]
10015600:	4434      	add	r4, r6
10015602:	2b07      	cmp	r3, #7
10015604:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015608:	f8c8 6004 	str.w	r6, [r8, #4]
1001560c:	f300 8226 	bgt.w	10015a5c <_vfprintf_r+0x1aac>
10015610:	f108 0808 	add.w	r8, r8, #8
10015614:	f7ff bacb 	b.w	10014bae <_vfprintf_r+0xbfe>
10015618:	222d      	movs	r2, #45	@ 0x2d
1001561a:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001561e:	f7fe bef1 	b.w	10014404 <_vfprintf_r+0x454>
10015622:	2300      	movs	r3, #0
10015624:	9808      	ldr	r0, [sp, #32]
10015626:	9700      	str	r7, [sp, #0]
10015628:	aa2b      	add	r2, sp, #172	@ 0xac
1001562a:	4619      	mov	r1, r3
1001562c:	f7fc fe52 	bl	100122d4 <_wcsrtombs_r>
10015630:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10015634:	4683      	mov	fp, r0
10015636:	f000 8209 	beq.w	10015a4c <_vfprintf_r+0x1a9c>
1001563a:	952b      	str	r5, [sp, #172]	@ 0xac
1001563c:	e59e      	b.n	1001517c <_vfprintf_r+0x11cc>
1001563e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10015640:	991d      	ldr	r1, [sp, #116]	@ 0x74
10015642:	1aed      	subs	r5, r5, r3
10015644:	461a      	mov	r2, r3
10015646:	4628      	mov	r0, r5
10015648:	f7fe f9d8 	bl	100139fc <strncpy>
1001564c:	f898 3001 	ldrb.w	r3, [r8, #1]
10015650:	b10b      	cbz	r3, 10015656 <_vfprintf_r+0x16a6>
10015652:	f108 0801 	add.w	r8, r8, #1
10015656:	f04f 0c00 	mov.w	ip, #0
1001565a:	e4f9      	b.n	10015050 <_vfprintf_r+0x10a0>
1001565c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001565e:	4293      	cmp	r3, r2
10015660:	f300 8194 	bgt.w	1001598c <_vfprintf_r+0x19dc>
10015664:	9b06      	ldr	r3, [sp, #24]
10015666:	07de      	lsls	r6, r3, #31
10015668:	f140 824a 	bpl.w	10015b00 <_vfprintf_r+0x1b50>
1001566c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001566e:	eb02 0b03 	add.w	fp, r2, r3
10015672:	9b06      	ldr	r3, [sp, #24]
10015674:	055c      	lsls	r4, r3, #21
10015676:	d502      	bpl.n	1001567e <_vfprintf_r+0x16ce>
10015678:	2a00      	cmp	r2, #0
1001567a:	f300 824a 	bgt.w	10015b12 <_vfprintf_r+0x1b62>
1001567e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015682:	9306      	str	r3, [sp, #24]
10015684:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015688:	2367      	movs	r3, #103	@ 0x67
1001568a:	930e      	str	r3, [sp, #56]	@ 0x38
1001568c:	2300      	movs	r3, #0
1001568e:	9314      	str	r3, [sp, #80]	@ 0x50
10015690:	9310      	str	r3, [sp, #64]	@ 0x40
10015692:	e694      	b.n	100153be <_vfprintf_r+0x140e>
10015694:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10015696:	42a3      	cmp	r3, r4
10015698:	f4bf ae31 	bcs.w	100152fe <_vfprintf_r+0x134e>
1001569c:	2130      	movs	r1, #48	@ 0x30
1001569e:	1c5a      	adds	r2, r3, #1
100156a0:	9230      	str	r2, [sp, #192]	@ 0xc0
100156a2:	7019      	strb	r1, [r3, #0]
100156a4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100156a6:	429c      	cmp	r4, r3
100156a8:	d8f9      	bhi.n	1001569e <_vfprintf_r+0x16ee>
100156aa:	e628      	b.n	100152fe <_vfprintf_r+0x134e>
100156ac:	4621      	mov	r1, r4
100156ae:	461c      	mov	r4, r3
100156b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100156b2:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
100156b6:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
100156ba:	4642      	mov	r2, r8
100156bc:	4f2c      	ldr	r7, [pc, #176]	@ (10015770 <_vfprintf_r+0x17c0>)
100156be:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
100156c2:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
100156c6:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
100156ca:	f8dd b020 	ldr.w	fp, [sp, #32]
100156ce:	b37b      	cbz	r3, 10015730 <_vfprintf_r+0x1780>
100156d0:	f1b9 0f00 	cmp.w	r9, #0
100156d4:	f000 8085 	beq.w	100157e2 <_vfprintf_r+0x1832>
100156d8:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
100156dc:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100156de:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100156e0:	3001      	adds	r0, #1
100156e2:	4441      	add	r1, r8
100156e4:	2807      	cmp	r0, #7
100156e6:	e9c2 3800 	strd	r3, r8, [r2]
100156ea:	9134      	str	r1, [sp, #208]	@ 0xd0
100156ec:	9033      	str	r0, [sp, #204]	@ 0xcc
100156ee:	dc6d      	bgt.n	100157cc <_vfprintf_r+0x181c>
100156f0:	3208      	adds	r2, #8
100156f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100156f4:	f89a 0000 	ldrb.w	r0, [sl]
100156f8:	1b1e      	subs	r6, r3, r4
100156fa:	4286      	cmp	r6, r0
100156fc:	bfa8      	it	ge
100156fe:	4606      	movge	r6, r0
10015700:	2e00      	cmp	r6, #0
10015702:	dd0b      	ble.n	1001571c <_vfprintf_r+0x176c>
10015704:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10015706:	3001      	adds	r0, #1
10015708:	4431      	add	r1, r6
1001570a:	2807      	cmp	r0, #7
1001570c:	e9c2 4600 	strd	r4, r6, [r2]
10015710:	9134      	str	r1, [sp, #208]	@ 0xd0
10015712:	9033      	str	r0, [sp, #204]	@ 0xcc
10015714:	dc6b      	bgt.n	100157ee <_vfprintf_r+0x183e>
10015716:	f89a 0000 	ldrb.w	r0, [sl]
1001571a:	3208      	adds	r2, #8
1001571c:	2e00      	cmp	r6, #0
1001571e:	bfac      	ite	ge
10015720:	1b85      	subge	r5, r0, r6
10015722:	4605      	movlt	r5, r0
10015724:	2d00      	cmp	r5, #0
10015726:	dc14      	bgt.n	10015752 <_vfprintf_r+0x17a2>
10015728:	4404      	add	r4, r0
1001572a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001572c:	2b00      	cmp	r3, #0
1001572e:	d1cf      	bne.n	100156d0 <_vfprintf_r+0x1720>
10015730:	f1b9 0f00 	cmp.w	r9, #0
10015734:	d1d0      	bne.n	100156d8 <_vfprintf_r+0x1728>
10015736:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001573a:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001573e:	46a2      	mov	sl, r4
10015740:	45da      	cmp	sl, fp
10015742:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10015746:	4690      	mov	r8, r2
10015748:	460c      	mov	r4, r1
1001574a:	bf28      	it	cs
1001574c:	46da      	movcs	sl, fp
1001574e:	f7ff ba35 	b.w	10014bbc <_vfprintf_r+0xc0c>
10015752:	2d10      	cmp	r5, #16
10015754:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10015756:	f340 821a 	ble.w	10015b8e <_vfprintf_r+0x1bde>
1001575a:	4623      	mov	r3, r4
1001575c:	463e      	mov	r6, r7
1001575e:	462c      	mov	r4, r5
10015760:	461d      	mov	r5, r3
10015762:	e00c      	b.n	1001577e <_vfprintf_r+0x17ce>
10015764:	40300000 	.word	0x40300000
10015768:	3fe00000 	.word	0x3fe00000
1001576c:	10019134 	.word	0x10019134
10015770:	10019340 	.word	0x10019340
10015774:	3c10      	subs	r4, #16
10015776:	2c10      	cmp	r4, #16
10015778:	f102 0208 	add.w	r2, r2, #8
1001577c:	dd16      	ble.n	100157ac <_vfprintf_r+0x17fc>
1001577e:	3001      	adds	r0, #1
10015780:	3110      	adds	r1, #16
10015782:	2310      	movs	r3, #16
10015784:	2807      	cmp	r0, #7
10015786:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001578a:	6017      	str	r7, [r2, #0]
1001578c:	6053      	str	r3, [r2, #4]
1001578e:	ddf1      	ble.n	10015774 <_vfprintf_r+0x17c4>
10015790:	9907      	ldr	r1, [sp, #28]
10015792:	aa32      	add	r2, sp, #200	@ 0xc8
10015794:	4658      	mov	r0, fp
10015796:	f000 faaf 	bl	10015cf8 <__sprint_r>
1001579a:	2800      	cmp	r0, #0
1001579c:	f47e ad60 	bne.w	10014260 <_vfprintf_r+0x2b0>
100157a0:	3c10      	subs	r4, #16
100157a2:	2c10      	cmp	r4, #16
100157a4:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
100157a8:	aa35      	add	r2, sp, #212	@ 0xd4
100157aa:	dce8      	bgt.n	1001577e <_vfprintf_r+0x17ce>
100157ac:	462b      	mov	r3, r5
100157ae:	4625      	mov	r5, r4
100157b0:	461c      	mov	r4, r3
100157b2:	3001      	adds	r0, #1
100157b4:	4429      	add	r1, r5
100157b6:	2807      	cmp	r0, #7
100157b8:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
100157bc:	6016      	str	r6, [r2, #0]
100157be:	6055      	str	r5, [r2, #4]
100157c0:	dc4b      	bgt.n	1001585a <_vfprintf_r+0x18aa>
100157c2:	f89a 0000 	ldrb.w	r0, [sl]
100157c6:	3208      	adds	r2, #8
100157c8:	4404      	add	r4, r0
100157ca:	e7ae      	b.n	1001572a <_vfprintf_r+0x177a>
100157cc:	9907      	ldr	r1, [sp, #28]
100157ce:	aa32      	add	r2, sp, #200	@ 0xc8
100157d0:	4658      	mov	r0, fp
100157d2:	f000 fa91 	bl	10015cf8 <__sprint_r>
100157d6:	2800      	cmp	r0, #0
100157d8:	f47e ad42 	bne.w	10014260 <_vfprintf_r+0x2b0>
100157dc:	9934      	ldr	r1, [sp, #208]	@ 0xd0
100157de:	aa35      	add	r2, sp, #212	@ 0xd4
100157e0:	e787      	b.n	100156f2 <_vfprintf_r+0x1742>
100157e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100157e4:	3b01      	subs	r3, #1
100157e6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
100157ea:	9310      	str	r3, [sp, #64]	@ 0x40
100157ec:	e776      	b.n	100156dc <_vfprintf_r+0x172c>
100157ee:	9907      	ldr	r1, [sp, #28]
100157f0:	aa32      	add	r2, sp, #200	@ 0xc8
100157f2:	4658      	mov	r0, fp
100157f4:	f000 fa80 	bl	10015cf8 <__sprint_r>
100157f8:	2800      	cmp	r0, #0
100157fa:	f47e ad31 	bne.w	10014260 <_vfprintf_r+0x2b0>
100157fe:	f89a 0000 	ldrb.w	r0, [sl]
10015802:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10015804:	aa35      	add	r2, sp, #212	@ 0xd4
10015806:	e789      	b.n	1001571c <_vfprintf_r+0x176c>
10015808:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001580c:	960d      	str	r6, [sp, #52]	@ 0x34
1001580e:	f8cd b018 	str.w	fp, [sp, #24]
10015812:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10015816:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
1001581a:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001581e:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10015822:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10015826:	f7fe bdfe 	b.w	10014426 <_vfprintf_r+0x476>
1001582a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001582e:	aa32      	add	r2, sp, #200	@ 0xc8
10015830:	f000 fa62 	bl	10015cf8 <__sprint_r>
10015834:	2800      	cmp	r0, #0
10015836:	f47f a8bf 	bne.w	100149b8 <_vfprintf_r+0xa08>
1001583a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001583c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001583e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015842:	f7ff baa5 	b.w	10014d90 <_vfprintf_r+0xde0>
10015846:	930c      	str	r3, [sp, #48]	@ 0x30
10015848:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
1001584c:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
10015850:	9325      	str	r3, [sp, #148]	@ 0x94
10015852:	232d      	movs	r3, #45	@ 0x2d
10015854:	9124      	str	r1, [sp, #144]	@ 0x90
10015856:	931f      	str	r3, [sp, #124]	@ 0x7c
10015858:	e5fc      	b.n	10015454 <_vfprintf_r+0x14a4>
1001585a:	9907      	ldr	r1, [sp, #28]
1001585c:	aa32      	add	r2, sp, #200	@ 0xc8
1001585e:	4658      	mov	r0, fp
10015860:	f000 fa4a 	bl	10015cf8 <__sprint_r>
10015864:	2800      	cmp	r0, #0
10015866:	f47e acfb 	bne.w	10014260 <_vfprintf_r+0x2b0>
1001586a:	f89a 0000 	ldrb.w	r0, [sl]
1001586e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10015870:	aa35      	add	r2, sp, #212	@ 0xd4
10015872:	4404      	add	r4, r0
10015874:	e759      	b.n	1001572a <_vfprintf_r+0x177a>
10015876:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001587a:	aa32      	add	r2, sp, #200	@ 0xc8
1001587c:	f000 fa3c 	bl	10015cf8 <__sprint_r>
10015880:	2800      	cmp	r0, #0
10015882:	f47f a899 	bne.w	100149b8 <_vfprintf_r+0xa08>
10015886:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015888:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001588c:	f7ff b988 	b.w	10014ba0 <_vfprintf_r+0xbf0>
10015890:	2378      	movs	r3, #120	@ 0x78
10015892:	e5c3      	b.n	1001541c <_vfprintf_r+0x146c>
10015894:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015898:	aa32      	add	r2, sp, #200	@ 0xc8
1001589a:	f000 fa2d 	bl	10015cf8 <__sprint_r>
1001589e:	2800      	cmp	r0, #0
100158a0:	f47f a88a 	bne.w	100149b8 <_vfprintf_r+0xa08>
100158a4:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100158a6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100158a8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100158ac:	f7ff b99c 	b.w	10014be8 <_vfprintf_r+0xc38>
100158b0:	49ab      	ldr	r1, [pc, #684]	@ (10015b60 <_vfprintf_r+0x1bb0>)
100158b2:	9115      	str	r1, [sp, #84]	@ 0x54
100158b4:	f7fe bdee 	b.w	10014494 <_vfprintf_r+0x4e4>
100158b8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100158bc:	aa32      	add	r2, sp, #200	@ 0xc8
100158be:	f000 fa1b 	bl	10015cf8 <__sprint_r>
100158c2:	2800      	cmp	r0, #0
100158c4:	f47f a878 	bne.w	100149b8 <_vfprintf_r+0xa08>
100158c8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100158ca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100158cc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100158ce:	1b5d      	subs	r5, r3, r5
100158d0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100158d4:	f7ff b99f 	b.w	10014c16 <_vfprintf_r+0xc66>
100158d8:	9b06      	ldr	r3, [sp, #24]
100158da:	9912      	ldr	r1, [sp, #72]	@ 0x48
100158dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100158de:	f003 0301 	and.w	r3, r3, #1
100158e2:	2900      	cmp	r1, #0
100158e4:	ea43 0302 	orr.w	r3, r3, r2
100158e8:	f340 815d 	ble.w	10015ba6 <_vfprintf_r+0x1bf6>
100158ec:	2b00      	cmp	r3, #0
100158ee:	f040 8109 	bne.w	10015b04 <_vfprintf_r+0x1b54>
100158f2:	2366      	movs	r3, #102	@ 0x66
100158f4:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
100158f8:	930e      	str	r3, [sp, #56]	@ 0x38
100158fa:	9b06      	ldr	r3, [sp, #24]
100158fc:	055a      	lsls	r2, r3, #21
100158fe:	f100 810a 	bmi.w	10015b16 <_vfprintf_r+0x1b66>
10015902:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015906:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001590a:	9306      	str	r3, [sp, #24]
1001590c:	e6be      	b.n	1001568c <_vfprintf_r+0x16dc>
1001590e:	2200      	movs	r2, #0
10015910:	9209      	str	r2, [sp, #36]	@ 0x24
10015912:	f7fe bbc6 	b.w	100140a2 <_vfprintf_r+0xf2>
10015916:	9b07      	ldr	r3, [sp, #28]
10015918:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1001591a:	07dd      	lsls	r5, r3, #31
1001591c:	d407      	bmi.n	1001592e <_vfprintf_r+0x197e>
1001591e:	9b07      	ldr	r3, [sp, #28]
10015920:	899b      	ldrh	r3, [r3, #12]
10015922:	059c      	lsls	r4, r3, #22
10015924:	d403      	bmi.n	1001592e <_vfprintf_r+0x197e>
10015926:	9b07      	ldr	r3, [sp, #28]
10015928:	6d98      	ldr	r0, [r3, #88]	@ 0x58
1001592a:	f7fc fc3f 	bl	100121ac <__retarget_lock_release_recursive>
1001592e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015932:	930a      	str	r3, [sp, #40]	@ 0x28
10015934:	f7fe bca5 	b.w	10014282 <_vfprintf_r+0x2d2>
10015938:	4256      	negs	r6, r2
1001593a:	3210      	adds	r2, #16
1001593c:	4a89      	ldr	r2, [pc, #548]	@ (10015b64 <_vfprintf_r+0x1bb4>)
1001593e:	9215      	str	r2, [sp, #84]	@ 0x54
10015940:	da34      	bge.n	100159ac <_vfprintf_r+0x19fc>
10015942:	46aa      	mov	sl, r5
10015944:	2710      	movs	r7, #16
10015946:	4615      	mov	r5, r2
10015948:	e004      	b.n	10015954 <_vfprintf_r+0x19a4>
1001594a:	f108 0808 	add.w	r8, r8, #8
1001594e:	3e10      	subs	r6, #16
10015950:	2e10      	cmp	r6, #16
10015952:	dd2a      	ble.n	100159aa <_vfprintf_r+0x19fa>
10015954:	3301      	adds	r3, #1
10015956:	3410      	adds	r4, #16
10015958:	2b07      	cmp	r3, #7
1001595a:	e9c8 5700 	strd	r5, r7, [r8]
1001595e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015962:	ddf2      	ble.n	1001594a <_vfprintf_r+0x199a>
10015964:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015968:	aa32      	add	r2, sp, #200	@ 0xc8
1001596a:	f000 f9c5 	bl	10015cf8 <__sprint_r>
1001596e:	2800      	cmp	r0, #0
10015970:	f47f a822 	bne.w	100149b8 <_vfprintf_r+0xa08>
10015974:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10015978:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001597c:	e7e7      	b.n	1001594e <_vfprintf_r+0x199e>
1001597e:	2300      	movs	r3, #0
10015980:	930c      	str	r3, [sp, #48]	@ 0x30
10015982:	ad45      	add	r5, sp, #276	@ 0x114
10015984:	e40c      	b.n	100151a0 <_vfprintf_r+0x11f0>
10015986:	19ac      	adds	r4, r5, r6
10015988:	2747      	movs	r7, #71	@ 0x47
1001598a:	e4ae      	b.n	100152ea <_vfprintf_r+0x133a>
1001598c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001598e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10015990:	eb03 0b02 	add.w	fp, r3, r2
10015994:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10015996:	2b00      	cmp	r3, #0
10015998:	f340 80ee 	ble.w	10015b78 <_vfprintf_r+0x1bc8>
1001599c:	2367      	movs	r3, #103	@ 0x67
1001599e:	930e      	str	r3, [sp, #56]	@ 0x38
100159a0:	e7ab      	b.n	100158fa <_vfprintf_r+0x194a>
100159a2:	4a6f      	ldr	r2, [pc, #444]	@ (10015b60 <_vfprintf_r+0x1bb0>)
100159a4:	9215      	str	r2, [sp, #84]	@ 0x54
100159a6:	f7ff b8ce 	b.w	10014b46 <_vfprintf_r+0xb96>
100159aa:	4655      	mov	r5, sl
100159ac:	3301      	adds	r3, #1
100159ae:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100159b0:	f8c8 2000 	str.w	r2, [r8]
100159b4:	4434      	add	r4, r6
100159b6:	2b07      	cmp	r3, #7
100159b8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100159bc:	f8c8 6004 	str.w	r6, [r8, #4]
100159c0:	f77f a9fb 	ble.w	10014dba <_vfprintf_r+0xe0a>
100159c4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100159c8:	aa32      	add	r2, sp, #200	@ 0xc8
100159ca:	f000 f995 	bl	10015cf8 <__sprint_r>
100159ce:	2800      	cmp	r0, #0
100159d0:	f47e aff2 	bne.w	100149b8 <_vfprintf_r+0xa08>
100159d4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100159d8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100159dc:	f7ff b800 	b.w	100149e0 <_vfprintf_r+0xa30>
100159e0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100159e2:	9730      	str	r7, [sp, #192]	@ 0xc0
100159e4:	7bd9      	ldrb	r1, [r3, #15]
100159e6:	f816 2c01 	ldrb.w	r2, [r6, #-1]
100159ea:	428a      	cmp	r2, r1
100159ec:	4633      	mov	r3, r6
100159ee:	d109      	bne.n	10015a04 <_vfprintf_r+0x1a54>
100159f0:	2030      	movs	r0, #48	@ 0x30
100159f2:	f803 0c01 	strb.w	r0, [r3, #-1]
100159f6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100159f8:	1e5a      	subs	r2, r3, #1
100159fa:	9230      	str	r2, [sp, #192]	@ 0xc0
100159fc:	f813 2c01 	ldrb.w	r2, [r3, #-1]
10015a00:	4291      	cmp	r1, r2
10015a02:	d0f6      	beq.n	100159f2 <_vfprintf_r+0x1a42>
10015a04:	2a39      	cmp	r2, #57	@ 0x39
10015a06:	bf0b      	itete	eq
10015a08:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10015a0a:	3201      	addne	r2, #1
10015a0c:	7a92      	ldrbeq	r2, [r2, #10]
10015a0e:	b2d2      	uxtbne	r2, r2
10015a10:	f803 2c01 	strb.w	r2, [r3, #-1]
10015a14:	4633      	mov	r3, r6
10015a16:	e595      	b.n	10015544 <_vfprintf_r+0x1594>
10015a18:	4a52      	ldr	r2, [pc, #328]	@ (10015b64 <_vfprintf_r+0x1bb4>)
10015a1a:	9215      	str	r2, [sp, #84]	@ 0x54
10015a1c:	f7fe bf78 	b.w	10014910 <_vfprintf_r+0x960>
10015a20:	9808      	ldr	r0, [sp, #32]
10015a22:	1c59      	adds	r1, r3, #1
10015a24:	f7fc f844 	bl	10011ab0 <_malloc_r>
10015a28:	4605      	mov	r5, r0
10015a2a:	b178      	cbz	r0, 10015a4c <_vfprintf_r+0x1a9c>
10015a2c:	900c      	str	r0, [sp, #48]	@ 0x30
10015a2e:	e504      	b.n	1001543a <_vfprintf_r+0x148a>
10015a30:	2800      	cmp	r0, #0
10015a32:	d162      	bne.n	10015afa <_vfprintf_r+0x1b4a>
10015a34:	2230      	movs	r2, #48	@ 0x30
10015a36:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
10015a3a:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
10015a3e:	3330      	adds	r3, #48	@ 0x30
10015a40:	f802 3b01 	strb.w	r3, [r2], #1
10015a44:	ab2c      	add	r3, sp, #176	@ 0xb0
10015a46:	1ad3      	subs	r3, r2, r3
10015a48:	931c      	str	r3, [sp, #112]	@ 0x70
10015a4a:	e4a3      	b.n	10015394 <_vfprintf_r+0x13e4>
10015a4c:	9a07      	ldr	r2, [sp, #28]
10015a4e:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10015a52:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015a56:	8193      	strh	r3, [r2, #12]
10015a58:	f7fe bc0b 	b.w	10014272 <_vfprintf_r+0x2c2>
10015a5c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015a60:	aa32      	add	r2, sp, #200	@ 0xc8
10015a62:	f000 f949 	bl	10015cf8 <__sprint_r>
10015a66:	2800      	cmp	r0, #0
10015a68:	f47e afa6 	bne.w	100149b8 <_vfprintf_r+0xa08>
10015a6c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015a6e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015a72:	f7ff b89c 	b.w	10014bae <_vfprintf_r+0xbfe>
10015a76:	4b3c      	ldr	r3, [pc, #240]	@ (10015b68 <_vfprintf_r+0x1bb8>)
10015a78:	4a3c      	ldr	r2, [pc, #240]	@ (10015b6c <_vfprintf_r+0x1bbc>)
10015a7a:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015a7c:	2961      	cmp	r1, #97	@ 0x61
10015a7e:	bf18      	it	ne
10015a80:	461a      	movne	r2, r3
10015a82:	2301      	movs	r3, #1
10015a84:	9212      	str	r2, [sp, #72]	@ 0x48
10015a86:	9329      	str	r3, [sp, #164]	@ 0xa4
10015a88:	e4ff      	b.n	1001548a <_vfprintf_r+0x14da>
10015a8a:	2306      	movs	r3, #6
10015a8c:	9309      	str	r3, [sp, #36]	@ 0x24
10015a8e:	f7ff b9f1 	b.w	10014e74 <_vfprintf_r+0xec4>
10015a92:	9b06      	ldr	r3, [sp, #24]
10015a94:	07df      	lsls	r7, r3, #31
10015a96:	f57f ac86 	bpl.w	100153a6 <_vfprintf_r+0x13f6>
10015a9a:	e482      	b.n	100153a2 <_vfprintf_r+0x13f2>
10015a9c:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10015aa0:	2200      	movs	r2, #0
10015aa2:	2300      	movs	r3, #0
10015aa4:	f003 f814 	bl	10018ad0 <__aeabi_dcmpeq>
10015aa8:	2800      	cmp	r0, #0
10015aaa:	f47f ac1c 	bne.w	100152e6 <_vfprintf_r+0x1336>
10015aae:	f1c6 0601 	rsb	r6, r6, #1
10015ab2:	9629      	str	r6, [sp, #164]	@ 0xa4
10015ab4:	e418      	b.n	100152e8 <_vfprintf_r+0x1338>
10015ab6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10015ab8:	4d2d      	ldr	r5, [pc, #180]	@ (10015b70 <_vfprintf_r+0x1bc0>)
10015aba:	2b00      	cmp	r3, #0
10015abc:	bfb4      	ite	lt
10015abe:	222d      	movlt	r2, #45	@ 0x2d
10015ac0:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10015ac4:	4b2b      	ldr	r3, [pc, #172]	@ (10015b74 <_vfprintf_r+0x1bc4>)
10015ac6:	bfb8      	it	lt
10015ac8:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10015acc:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10015ad0:	f7fe bc9c 	b.w	1001440c <_vfprintf_r+0x45c>
10015ad4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10015ad6:	9306      	str	r3, [sp, #24]
10015ad8:	469b      	mov	fp, r3
10015ada:	2373      	movs	r3, #115	@ 0x73
10015adc:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015ae0:	960d      	str	r6, [sp, #52]	@ 0x34
10015ae2:	9009      	str	r0, [sp, #36]	@ 0x24
10015ae4:	9014      	str	r0, [sp, #80]	@ 0x50
10015ae6:	9010      	str	r0, [sp, #64]	@ 0x40
10015ae8:	930e      	str	r3, [sp, #56]	@ 0x38
10015aea:	f7fe bc9c 	b.w	10014426 <_vfprintf_r+0x476>
10015aee:	f8dd 9018 	ldr.w	r9, [sp, #24]
10015af2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10015af6:	f7ff bb41 	b.w	1001517c <_vfprintf_r+0x11cc>
10015afa:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10015afe:	e79e      	b.n	10015a3e <_vfprintf_r+0x1a8e>
10015b00:	4693      	mov	fp, r2
10015b02:	e5b6      	b.n	10015672 <_vfprintf_r+0x16c2>
10015b04:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10015b06:	18cf      	adds	r7, r1, r3
10015b08:	443a      	add	r2, r7
10015b0a:	2366      	movs	r3, #102	@ 0x66
10015b0c:	4693      	mov	fp, r2
10015b0e:	930e      	str	r3, [sp, #56]	@ 0x38
10015b10:	e6f3      	b.n	100158fa <_vfprintf_r+0x194a>
10015b12:	2367      	movs	r3, #103	@ 0x67
10015b14:	930e      	str	r3, [sp, #56]	@ 0x38
10015b16:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10015b18:	780b      	ldrb	r3, [r1, #0]
10015b1a:	2bff      	cmp	r3, #255	@ 0xff
10015b1c:	d062      	beq.n	10015be4 <_vfprintf_r+0x1c34>
10015b1e:	2400      	movs	r4, #0
10015b20:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10015b22:	4620      	mov	r0, r4
10015b24:	e003      	b.n	10015b2e <_vfprintf_r+0x1b7e>
10015b26:	3001      	adds	r0, #1
10015b28:	3101      	adds	r1, #1
10015b2a:	2bff      	cmp	r3, #255	@ 0xff
10015b2c:	d008      	beq.n	10015b40 <_vfprintf_r+0x1b90>
10015b2e:	4293      	cmp	r3, r2
10015b30:	da06      	bge.n	10015b40 <_vfprintf_r+0x1b90>
10015b32:	1ad2      	subs	r2, r2, r3
10015b34:	784b      	ldrb	r3, [r1, #1]
10015b36:	2b00      	cmp	r3, #0
10015b38:	d1f5      	bne.n	10015b26 <_vfprintf_r+0x1b76>
10015b3a:	780b      	ldrb	r3, [r1, #0]
10015b3c:	3401      	adds	r4, #1
10015b3e:	e7f4      	b.n	10015b2a <_vfprintf_r+0x1b7a>
10015b40:	911b      	str	r1, [sp, #108]	@ 0x6c
10015b42:	9212      	str	r2, [sp, #72]	@ 0x48
10015b44:	9010      	str	r0, [sp, #64]	@ 0x40
10015b46:	9414      	str	r4, [sp, #80]	@ 0x50
10015b48:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
10015b4c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
10015b4e:	4413      	add	r3, r2
10015b50:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
10015b52:	fb02 bb03 	mla	fp, r2, r3, fp
10015b56:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015b5a:	9306      	str	r3, [sp, #24]
10015b5c:	e42f      	b.n	100153be <_vfprintf_r+0x140e>
10015b5e:	bf00      	nop
10015b60:	10019350 	.word	0x10019350
10015b64:	10019340 	.word	0x10019340
10015b68:	10019134 	.word	0x10019134
10015b6c:	10019120 	.word	0x10019120
10015b70:	10019118 	.word	0x10019118
10015b74:	1001911c 	.word	0x1001911c
10015b78:	f1c3 0301 	rsb	r3, r3, #1
10015b7c:	449b      	add	fp, r3
10015b7e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015b82:	9306      	str	r3, [sp, #24]
10015b84:	2367      	movs	r3, #103	@ 0x67
10015b86:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015b8a:	930e      	str	r3, [sp, #56]	@ 0x38
10015b8c:	e57e      	b.n	1001568c <_vfprintf_r+0x16dc>
10015b8e:	4e1b      	ldr	r6, [pc, #108]	@ (10015bfc <_vfprintf_r+0x1c4c>)
10015b90:	e60f      	b.n	100157b2 <_vfprintf_r+0x1802>
10015b92:	2302      	movs	r3, #2
10015b94:	931c      	str	r3, [sp, #112]	@ 0x70
10015b96:	f7ff bbfd 	b.w	10015394 <_vfprintf_r+0x13e4>
10015b9a:	4a18      	ldr	r2, [pc, #96]	@ (10015bfc <_vfprintf_r+0x1c4c>)
10015b9c:	9215      	str	r2, [sp, #84]	@ 0x54
10015b9e:	e52b      	b.n	100155f8 <_vfprintf_r+0x1648>
10015ba0:	2170      	movs	r1, #112	@ 0x70
10015ba2:	f7ff bbc0 	b.w	10015326 <_vfprintf_r+0x1376>
10015ba6:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015baa:	b92b      	cbnz	r3, 10015bb8 <_vfprintf_r+0x1c08>
10015bac:	2301      	movs	r3, #1
10015bae:	2266      	movs	r2, #102	@ 0x66
10015bb0:	9306      	str	r3, [sp, #24]
10015bb2:	920e      	str	r2, [sp, #56]	@ 0x38
10015bb4:	469b      	mov	fp, r3
10015bb6:	e569      	b.n	1001568c <_vfprintf_r+0x16dc>
10015bb8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10015bba:	1c5f      	adds	r7, r3, #1
10015bbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10015bbe:	443b      	add	r3, r7
10015bc0:	469b      	mov	fp, r3
10015bc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10015bc6:	9306      	str	r3, [sp, #24]
10015bc8:	2366      	movs	r3, #102	@ 0x66
10015bca:	930e      	str	r3, [sp, #56]	@ 0x38
10015bcc:	e55e      	b.n	1001568c <_vfprintf_r+0x16dc>
10015bce:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10015bd0:	7863      	ldrb	r3, [r4, #1]
10015bd2:	460c      	mov	r4, r1
10015bd4:	f852 1b04 	ldr.w	r1, [r2], #4
10015bd8:	920d      	str	r2, [sp, #52]	@ 0x34
10015bda:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10015bde:	9109      	str	r1, [sp, #36]	@ 0x24
10015be0:	f7fe ba5e 	b.w	100140a0 <_vfprintf_r+0xf0>
10015be4:	2300      	movs	r3, #0
10015be6:	9314      	str	r3, [sp, #80]	@ 0x50
10015be8:	9310      	str	r3, [sp, #64]	@ 0x40
10015bea:	e7ad      	b.n	10015b48 <_vfprintf_r+0x1b98>
10015bec:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
10015bf0:	8993      	ldrh	r3, [r2, #12]
10015bf2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015bf6:	8193      	strh	r3, [r2, #12]
10015bf8:	f7fe bb32 	b.w	10014260 <_vfprintf_r+0x2b0>
10015bfc:	10019340 	.word	0x10019340

10015c00 <__sbprintf>:
10015c00:	b5f0      	push	{r4, r5, r6, r7, lr}
10015c02:	461f      	mov	r7, r3
10015c04:	898b      	ldrh	r3, [r1, #12]
10015c06:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10015c0a:	f023 0302 	bic.w	r3, r3, #2
10015c0e:	f8ad 300c 	strh.w	r3, [sp, #12]
10015c12:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015c14:	9319      	str	r3, [sp, #100]	@ 0x64
10015c16:	89cb      	ldrh	r3, [r1, #14]
10015c18:	f8ad 300e 	strh.w	r3, [sp, #14]
10015c1c:	69cb      	ldr	r3, [r1, #28]
10015c1e:	9307      	str	r3, [sp, #28]
10015c20:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10015c22:	9309      	str	r3, [sp, #36]	@ 0x24
10015c24:	ab1a      	add	r3, sp, #104	@ 0x68
10015c26:	9300      	str	r3, [sp, #0]
10015c28:	9304      	str	r3, [sp, #16]
10015c2a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10015c2e:	4615      	mov	r5, r2
10015c30:	4606      	mov	r6, r0
10015c32:	9302      	str	r3, [sp, #8]
10015c34:	9305      	str	r3, [sp, #20]
10015c36:	a816      	add	r0, sp, #88	@ 0x58
10015c38:	2300      	movs	r3, #0
10015c3a:	460c      	mov	r4, r1
10015c3c:	9306      	str	r3, [sp, #24]
10015c3e:	f7fc faaf 	bl	100121a0 <__retarget_lock_init_recursive>
10015c42:	462a      	mov	r2, r5
10015c44:	463b      	mov	r3, r7
10015c46:	4669      	mov	r1, sp
10015c48:	4630      	mov	r0, r6
10015c4a:	f7fe f9b1 	bl	10013fb0 <_vfprintf_r>
10015c4e:	1e05      	subs	r5, r0, #0
10015c50:	db07      	blt.n	10015c62 <__sbprintf+0x62>
10015c52:	4669      	mov	r1, sp
10015c54:	4630      	mov	r0, r6
10015c56:	f001 ffc1 	bl	10017bdc <_fflush_r>
10015c5a:	2800      	cmp	r0, #0
10015c5c:	bf18      	it	ne
10015c5e:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10015c62:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10015c66:	065b      	lsls	r3, r3, #25
10015c68:	d503      	bpl.n	10015c72 <__sbprintf+0x72>
10015c6a:	89a3      	ldrh	r3, [r4, #12]
10015c6c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015c70:	81a3      	strh	r3, [r4, #12]
10015c72:	9816      	ldr	r0, [sp, #88]	@ 0x58
10015c74:	f7fc fa96 	bl	100121a4 <__retarget_lock_close_recursive>
10015c78:	4628      	mov	r0, r5
10015c7a:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10015c7e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10015c80 <__sprint_r.part.0>:
10015c80:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015c84:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015c86:	049c      	lsls	r4, r3, #18
10015c88:	4690      	mov	r8, r2
10015c8a:	d52e      	bpl.n	10015cea <__sprint_r.part.0+0x6a>
10015c8c:	6893      	ldr	r3, [r2, #8]
10015c8e:	6812      	ldr	r2, [r2, #0]
10015c90:	b34b      	cbz	r3, 10015ce6 <__sprint_r.part.0+0x66>
10015c92:	460d      	mov	r5, r1
10015c94:	4606      	mov	r6, r0
10015c96:	f102 0908 	add.w	r9, r2, #8
10015c9a:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
10015c9e:	ea5f 079a 	movs.w	r7, sl, lsr #2
10015ca2:	d016      	beq.n	10015cd2 <__sprint_r.part.0+0x52>
10015ca4:	f1a2 0b04 	sub.w	fp, r2, #4
10015ca8:	2400      	movs	r4, #0
10015caa:	e001      	b.n	10015cb0 <__sprint_r.part.0+0x30>
10015cac:	42a7      	cmp	r7, r4
10015cae:	d00e      	beq.n	10015cce <__sprint_r.part.0+0x4e>
10015cb0:	f85b 1f04 	ldr.w	r1, [fp, #4]!
10015cb4:	462a      	mov	r2, r5
10015cb6:	4630      	mov	r0, r6
10015cb8:	f002 fa02 	bl	100180c0 <_fputwc_r>
10015cbc:	1c43      	adds	r3, r0, #1
10015cbe:	f104 0401 	add.w	r4, r4, #1
10015cc2:	d1f3      	bne.n	10015cac <__sprint_r.part.0+0x2c>
10015cc4:	2300      	movs	r3, #0
10015cc6:	e9c8 3301 	strd	r3, r3, [r8, #4]
10015cca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015cce:	f8d8 3008 	ldr.w	r3, [r8, #8]
10015cd2:	f02a 0a03 	bic.w	sl, sl, #3
10015cd6:	eba3 030a 	sub.w	r3, r3, sl
10015cda:	f8c8 3008 	str.w	r3, [r8, #8]
10015cde:	f109 0908 	add.w	r9, r9, #8
10015ce2:	2b00      	cmp	r3, #0
10015ce4:	d1d9      	bne.n	10015c9a <__sprint_r.part.0+0x1a>
10015ce6:	2000      	movs	r0, #0
10015ce8:	e7ec      	b.n	10015cc4 <__sprint_r.part.0+0x44>
10015cea:	f7fd ff23 	bl	10013b34 <__sfvwrite_r>
10015cee:	2300      	movs	r3, #0
10015cf0:	e9c8 3301 	strd	r3, r3, [r8, #4]
10015cf4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

10015cf8 <__sprint_r>:
10015cf8:	b410      	push	{r4}
10015cfa:	6894      	ldr	r4, [r2, #8]
10015cfc:	b11c      	cbz	r4, 10015d06 <__sprint_r+0xe>
10015cfe:	f85d 4b04 	ldr.w	r4, [sp], #4
10015d02:	f7ff bfbd 	b.w	10015c80 <__sprint_r.part.0>
10015d06:	4620      	mov	r0, r4
10015d08:	6054      	str	r4, [r2, #4]
10015d0a:	f85d 4b04 	ldr.w	r4, [sp], #4
10015d0e:	4770      	bx	lr

10015d10 <_vfiprintf_r>:
10015d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015d14:	b0c7      	sub	sp, #284	@ 0x11c
10015d16:	af16      	add	r7, sp, #88	@ 0x58
10015d18:	4683      	mov	fp, r0
10015d1a:	9103      	str	r1, [sp, #12]
10015d1c:	9206      	str	r2, [sp, #24]
10015d1e:	2100      	movs	r1, #0
10015d20:	2208      	movs	r2, #8
10015d22:	4638      	mov	r0, r7
10015d24:	461c      	mov	r4, r3
10015d26:	930a      	str	r3, [sp, #40]	@ 0x28
10015d28:	f7fc f986 	bl	10012038 <memset>
10015d2c:	f1bb 0f00 	cmp.w	fp, #0
10015d30:	d004      	beq.n	10015d3c <_vfiprintf_r+0x2c>
10015d32:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10015d36:	2b00      	cmp	r3, #0
10015d38:	f000 86b8 	beq.w	10016aac <_vfiprintf_r+0xd9c>
10015d3c:	9a03      	ldr	r2, [sp, #12]
10015d3e:	6e53      	ldr	r3, [r2, #100]	@ 0x64
10015d40:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
10015d44:	07db      	lsls	r3, r3, #31
10015d46:	d402      	bmi.n	10015d4e <_vfiprintf_r+0x3e>
10015d48:	0596      	lsls	r6, r2, #22
10015d4a:	f140 859d 	bpl.w	10016888 <_vfiprintf_r+0xb78>
10015d4e:	0495      	lsls	r5, r2, #18
10015d50:	d407      	bmi.n	10015d62 <_vfiprintf_r+0x52>
10015d52:	9903      	ldr	r1, [sp, #12]
10015d54:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015d56:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10015d5a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10015d5e:	818a      	strh	r2, [r1, #12]
10015d60:	664b      	str	r3, [r1, #100]	@ 0x64
10015d62:	0710      	lsls	r0, r2, #28
10015d64:	f140 80c9 	bpl.w	10015efa <_vfiprintf_r+0x1ea>
10015d68:	9b03      	ldr	r3, [sp, #12]
10015d6a:	691b      	ldr	r3, [r3, #16]
10015d6c:	2b00      	cmp	r3, #0
10015d6e:	f000 80c4 	beq.w	10015efa <_vfiprintf_r+0x1ea>
10015d72:	f002 031a 	and.w	r3, r2, #26
10015d76:	2b0a      	cmp	r3, #10
10015d78:	f000 80ce 	beq.w	10015f18 <_vfiprintf_r+0x208>
10015d7c:	2300      	movs	r3, #0
10015d7e:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10015d82:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
10015d86:	aa1d      	add	r2, sp, #116	@ 0x74
10015d88:	f8df a904 	ldr.w	sl, [pc, #2308]	@ 10016690 <_vfiprintf_r+0x980>
10015d8c:	930d      	str	r3, [sp, #52]	@ 0x34
10015d8e:	921a      	str	r2, [sp, #104]	@ 0x68
10015d90:	4691      	mov	r9, r2
10015d92:	9310      	str	r3, [sp, #64]	@ 0x40
10015d94:	9307      	str	r3, [sp, #28]
10015d96:	9d06      	ldr	r5, [sp, #24]
10015d98:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
10015d9c:	f7fc fa08 	bl	100121b0 <__locale_mb_cur_max>
10015da0:	462a      	mov	r2, r5
10015da2:	4603      	mov	r3, r0
10015da4:	a914      	add	r1, sp, #80	@ 0x50
10015da6:	9700      	str	r7, [sp, #0]
10015da8:	4658      	mov	r0, fp
10015daa:	47a0      	blx	r4
10015dac:	2800      	cmp	r0, #0
10015dae:	f000 80d2 	beq.w	10015f56 <_vfiprintf_r+0x246>
10015db2:	f2c0 80c8 	blt.w	10015f46 <_vfiprintf_r+0x236>
10015db6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
10015db8:	2a25      	cmp	r2, #37	@ 0x25
10015dba:	4603      	mov	r3, r0
10015dbc:	d001      	beq.n	10015dc2 <_vfiprintf_r+0xb2>
10015dbe:	441d      	add	r5, r3
10015dc0:	e7ea      	b.n	10015d98 <_vfiprintf_r+0x88>
10015dc2:	9b06      	ldr	r3, [sp, #24]
10015dc4:	1aee      	subs	r6, r5, r3
10015dc6:	4604      	mov	r4, r0
10015dc8:	f040 80c9 	bne.w	10015f5e <_vfiprintf_r+0x24e>
10015dcc:	2300      	movs	r3, #0
10015dce:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10015dd2:	786a      	ldrb	r2, [r5, #1]
10015dd4:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10015dd8:	9308      	str	r3, [sp, #32]
10015dda:	1c6c      	adds	r4, r5, #1
10015ddc:	9105      	str	r1, [sp, #20]
10015dde:	9302      	str	r3, [sp, #8]
10015de0:	3401      	adds	r4, #1
10015de2:	f1a2 0320 	sub.w	r3, r2, #32
10015de6:	2b5a      	cmp	r3, #90	@ 0x5a
10015de8:	f200 80ff 	bhi.w	10015fea <_vfiprintf_r+0x2da>
10015dec:	e8df f013 	tbh	[pc, r3, lsl #1]
10015df0:	00fd0300 	.word	0x00fd0300
10015df4:	02fa00fd 	.word	0x02fa00fd
10015df8:	00fd00fd 	.word	0x00fd00fd
10015dfc:	006b00fd 	.word	0x006b00fd
10015e00:	00fd00fd 	.word	0x00fd00fd
10015e04:	032a0215 	.word	0x032a0215
10015e08:	022000fd 	.word	0x022000fd
10015e0c:	00fd0310 	.word	0x00fd0310
10015e10:	005b030a 	.word	0x005b030a
10015e14:	005b005b 	.word	0x005b005b
10015e18:	005b005b 	.word	0x005b005b
10015e1c:	005b005b 	.word	0x005b005b
10015e20:	005b005b 	.word	0x005b005b
10015e24:	00fd00fd 	.word	0x00fd00fd
10015e28:	00fd00fd 	.word	0x00fd00fd
10015e2c:	00fd00fd 	.word	0x00fd00fd
10015e30:	00fd00fd 	.word	0x00fd00fd
10015e34:	01cb00fd 	.word	0x01cb00fd
10015e38:	00fd025a 	.word	0x00fd025a
10015e3c:	00fd00fd 	.word	0x00fd00fd
10015e40:	00fd00fd 	.word	0x00fd00fd
10015e44:	00fd00fd 	.word	0x00fd00fd
10015e48:	00fd00fd 	.word	0x00fd00fd
10015e4c:	022600fd 	.word	0x022600fd
10015e50:	00fd00fd 	.word	0x00fd00fd
10015e54:	01a300fd 	.word	0x01a300fd
10015e58:	027300fd 	.word	0x027300fd
10015e5c:	00fd00fd 	.word	0x00fd00fd
10015e60:	00fd058c 	.word	0x00fd058c
10015e64:	00fd00fd 	.word	0x00fd00fd
10015e68:	00fd00fd 	.word	0x00fd00fd
10015e6c:	00fd00fd 	.word	0x00fd00fd
10015e70:	00fd00fd 	.word	0x00fd00fd
10015e74:	01cb00fd 	.word	0x01cb00fd
10015e78:	00fd01f0 	.word	0x00fd01f0
10015e7c:	00fd00fd 	.word	0x00fd00fd
10015e80:	01f002c1 	.word	0x01f002c1
10015e84:	00fd007f 	.word	0x00fd007f
10015e88:	00fd032f 	.word	0x00fd032f
10015e8c:	058902eb 	.word	0x058902eb
10015e90:	007f02ca 	.word	0x007f02ca
10015e94:	01a300fd 	.word	0x01a300fd
10015e98:	0586007d 	.word	0x0586007d
10015e9c:	00fd00fd 	.word	0x00fd00fd
10015ea0:	00fd05af 	.word	0x00fd05af
10015ea4:	007d      	.short	0x007d
10015ea6:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10015eaa:	2200      	movs	r2, #0
10015eac:	4611      	mov	r1, r2
10015eae:	f814 2b01 	ldrb.w	r2, [r4], #1
10015eb2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10015eb6:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10015eba:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10015ebe:	2b09      	cmp	r3, #9
10015ec0:	d9f5      	bls.n	10015eae <_vfiprintf_r+0x19e>
10015ec2:	9108      	str	r1, [sp, #32]
10015ec4:	e78d      	b.n	10015de2 <_vfiprintf_r+0xd2>
10015ec6:	4658      	mov	r0, fp
10015ec8:	f7fc f978 	bl	100121bc <_localeconv_r>
10015ecc:	6843      	ldr	r3, [r0, #4]
10015ece:	9310      	str	r3, [sp, #64]	@ 0x40
10015ed0:	4618      	mov	r0, r3
10015ed2:	f7fd fb95 	bl	10013600 <strlen>
10015ed6:	900f      	str	r0, [sp, #60]	@ 0x3c
10015ed8:	4605      	mov	r5, r0
10015eda:	4658      	mov	r0, fp
10015edc:	f7fc f96e 	bl	100121bc <_localeconv_r>
10015ee0:	6883      	ldr	r3, [r0, #8]
10015ee2:	930e      	str	r3, [sp, #56]	@ 0x38
10015ee4:	2d00      	cmp	r5, #0
10015ee6:	f040 84e3 	bne.w	100168b0 <_vfiprintf_r+0xba0>
10015eea:	7822      	ldrb	r2, [r4, #0]
10015eec:	e778      	b.n	10015de0 <_vfiprintf_r+0xd0>
10015eee:	9b02      	ldr	r3, [sp, #8]
10015ef0:	7822      	ldrb	r2, [r4, #0]
10015ef2:	f043 0320 	orr.w	r3, r3, #32
10015ef6:	9302      	str	r3, [sp, #8]
10015ef8:	e772      	b.n	10015de0 <_vfiprintf_r+0xd0>
10015efa:	9d03      	ldr	r5, [sp, #12]
10015efc:	4658      	mov	r0, fp
10015efe:	4629      	mov	r1, r5
10015f00:	f001 f870 	bl	10016fe4 <__swsetup_r>
10015f04:	2800      	cmp	r0, #0
10015f06:	f040 86a3 	bne.w	10016c50 <_vfiprintf_r+0xf40>
10015f0a:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10015f0e:	f002 031a 	and.w	r3, r2, #26
10015f12:	2b0a      	cmp	r3, #10
10015f14:	f47f af32 	bne.w	10015d7c <_vfiprintf_r+0x6c>
10015f18:	9903      	ldr	r1, [sp, #12]
10015f1a:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
10015f1e:	2b00      	cmp	r3, #0
10015f20:	f6ff af2c 	blt.w	10015d7c <_vfiprintf_r+0x6c>
10015f24:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015f26:	07db      	lsls	r3, r3, #31
10015f28:	d402      	bmi.n	10015f30 <_vfiprintf_r+0x220>
10015f2a:	0597      	lsls	r7, r2, #22
10015f2c:	f140 865b 	bpl.w	10016be6 <_vfiprintf_r+0xed6>
10015f30:	9a06      	ldr	r2, [sp, #24]
10015f32:	9903      	ldr	r1, [sp, #12]
10015f34:	4623      	mov	r3, r4
10015f36:	4658      	mov	r0, fp
10015f38:	f000 febe 	bl	10016cb8 <__sbprintf>
10015f3c:	9007      	str	r0, [sp, #28]
10015f3e:	9807      	ldr	r0, [sp, #28]
10015f40:	b047      	add	sp, #284	@ 0x11c
10015f42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015f46:	2208      	movs	r2, #8
10015f48:	2100      	movs	r1, #0
10015f4a:	4638      	mov	r0, r7
10015f4c:	f7fc f874 	bl	10012038 <memset>
10015f50:	2301      	movs	r3, #1
10015f52:	441d      	add	r5, r3
10015f54:	e720      	b.n	10015d98 <_vfiprintf_r+0x88>
10015f56:	9b06      	ldr	r3, [sp, #24]
10015f58:	1aee      	subs	r6, r5, r3
10015f5a:	4604      	mov	r4, r0
10015f5c:	d012      	beq.n	10015f84 <_vfiprintf_r+0x274>
10015f5e:	9b06      	ldr	r3, [sp, #24]
10015f60:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10015f62:	e9c9 3600 	strd	r3, r6, [r9]
10015f66:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10015f68:	3301      	adds	r3, #1
10015f6a:	4432      	add	r2, r6
10015f6c:	2b07      	cmp	r3, #7
10015f6e:	921c      	str	r2, [sp, #112]	@ 0x70
10015f70:	931b      	str	r3, [sp, #108]	@ 0x6c
10015f72:	dc11      	bgt.n	10015f98 <_vfiprintf_r+0x288>
10015f74:	f109 0908 	add.w	r9, r9, #8
10015f78:	9b07      	ldr	r3, [sp, #28]
10015f7a:	4433      	add	r3, r6
10015f7c:	9307      	str	r3, [sp, #28]
10015f7e:	2c00      	cmp	r4, #0
10015f80:	f47f af24 	bne.w	10015dcc <_vfiprintf_r+0xbc>
10015f84:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10015f86:	2b00      	cmp	r3, #0
10015f88:	f040 864d 	bne.w	10016c26 <_vfiprintf_r+0xf16>
10015f8c:	9b03      	ldr	r3, [sp, #12]
10015f8e:	2200      	movs	r2, #0
10015f90:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10015f94:	921b      	str	r2, [sp, #108]	@ 0x6c
10015f96:	e01c      	b.n	10015fd2 <_vfiprintf_r+0x2c2>
10015f98:	2a00      	cmp	r2, #0
10015f9a:	f000 842d 	beq.w	100167f8 <_vfiprintf_r+0xae8>
10015f9e:	9903      	ldr	r1, [sp, #12]
10015fa0:	aa1a      	add	r2, sp, #104	@ 0x68
10015fa2:	4658      	mov	r0, fp
10015fa4:	f7ff fe6c 	bl	10015c80 <__sprint_r.part.0>
10015fa8:	b980      	cbnz	r0, 10015fcc <_vfiprintf_r+0x2bc>
10015faa:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10015fae:	e7e3      	b.n	10015f78 <_vfiprintf_r+0x268>
10015fb0:	9903      	ldr	r1, [sp, #12]
10015fb2:	aa1a      	add	r2, sp, #104	@ 0x68
10015fb4:	4658      	mov	r0, fp
10015fb6:	f7ff fe63 	bl	10015c80 <__sprint_r.part.0>
10015fba:	2800      	cmp	r0, #0
10015fbc:	f000 80a6 	beq.w	1001610c <_vfiprintf_r+0x3fc>
10015fc0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10015fc2:	b11b      	cbz	r3, 10015fcc <_vfiprintf_r+0x2bc>
10015fc4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10015fc6:	4658      	mov	r0, fp
10015fc8:	f7fd fc1a 	bl	10013800 <_free_r>
10015fcc:	9b03      	ldr	r3, [sp, #12]
10015fce:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10015fd2:	9a03      	ldr	r2, [sp, #12]
10015fd4:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10015fd6:	07d1      	lsls	r1, r2, #31
10015fd8:	f140 80a3 	bpl.w	10016122 <_vfiprintf_r+0x412>
10015fdc:	065b      	lsls	r3, r3, #25
10015fde:	f100 8643 	bmi.w	10016c68 <_vfiprintf_r+0xf58>
10015fe2:	9807      	ldr	r0, [sp, #28]
10015fe4:	b047      	add	sp, #284	@ 0x11c
10015fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015fea:	9406      	str	r4, [sp, #24]
10015fec:	2a00      	cmp	r2, #0
10015fee:	d0c9      	beq.n	10015f84 <_vfiprintf_r+0x274>
10015ff0:	2300      	movs	r3, #0
10015ff2:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10015ff6:	2301      	movs	r3, #1
10015ff8:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
10015ffc:	9304      	str	r3, [sp, #16]
10015ffe:	9309      	str	r3, [sp, #36]	@ 0x24
10016000:	ac2d      	add	r4, sp, #180	@ 0xb4
10016002:	2300      	movs	r3, #0
10016004:	930b      	str	r3, [sp, #44]	@ 0x2c
10016006:	9305      	str	r3, [sp, #20]
10016008:	9b02      	ldr	r3, [sp, #8]
1001600a:	f013 0302 	ands.w	r3, r3, #2
1001600e:	d002      	beq.n	10016016 <_vfiprintf_r+0x306>
10016010:	9a04      	ldr	r2, [sp, #16]
10016012:	3202      	adds	r2, #2
10016014:	9204      	str	r2, [sp, #16]
10016016:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001601a:	9d02      	ldr	r5, [sp, #8]
1001601c:	1c50      	adds	r0, r2, #1
1001601e:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
10016022:	4601      	mov	r1, r0
10016024:	950c      	str	r5, [sp, #48]	@ 0x30
10016026:	d105      	bne.n	10016034 <_vfiprintf_r+0x324>
10016028:	9d08      	ldr	r5, [sp, #32]
1001602a:	9e04      	ldr	r6, [sp, #16]
1001602c:	1bad      	subs	r5, r5, r6
1001602e:	2d00      	cmp	r5, #0
10016030:	f300 8332 	bgt.w	10016698 <_vfiprintf_r+0x988>
10016034:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
10016038:	b188      	cbz	r0, 1001605e <_vfiprintf_r+0x34e>
1001603a:	2201      	movs	r2, #1
1001603c:	f10c 0c01 	add.w	ip, ip, #1
10016040:	f8c9 2004 	str.w	r2, [r9, #4]
10016044:	2907      	cmp	r1, #7
10016046:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
1001604a:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001604e:	f8c9 2000 	str.w	r2, [r9]
10016052:	f300 82e1 	bgt.w	10016618 <_vfiprintf_r+0x908>
10016056:	460a      	mov	r2, r1
10016058:	f109 0908 	add.w	r9, r9, #8
1001605c:	3101      	adds	r1, #1
1001605e:	b1eb      	cbz	r3, 1001609c <_vfiprintf_r+0x38c>
10016060:	ab13      	add	r3, sp, #76	@ 0x4c
10016062:	f10c 0c02 	add.w	ip, ip, #2
10016066:	f8c9 3000 	str.w	r3, [r9]
1001606a:	2907      	cmp	r1, #7
1001606c:	f04f 0302 	mov.w	r3, #2
10016070:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10016074:	f8c9 3004 	str.w	r3, [r9, #4]
10016078:	f340 82ec 	ble.w	10016654 <_vfiprintf_r+0x944>
1001607c:	f1bc 0f00 	cmp.w	ip, #0
10016080:	f000 83db 	beq.w	1001683a <_vfiprintf_r+0xb2a>
10016084:	9903      	ldr	r1, [sp, #12]
10016086:	aa1a      	add	r2, sp, #104	@ 0x68
10016088:	4658      	mov	r0, fp
1001608a:	f7ff fdf9 	bl	10015c80 <__sprint_r.part.0>
1001608e:	2800      	cmp	r0, #0
10016090:	d196      	bne.n	10015fc0 <_vfiprintf_r+0x2b0>
10016092:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016096:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001609a:	1c51      	adds	r1, r2, #1
1001609c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001609e:	2b80      	cmp	r3, #128	@ 0x80
100160a0:	f000 8213 	beq.w	100164ca <_vfiprintf_r+0x7ba>
100160a4:	9b05      	ldr	r3, [sp, #20]
100160a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
100160a8:	1a1d      	subs	r5, r3, r0
100160aa:	2d00      	cmp	r5, #0
100160ac:	f300 8268 	bgt.w	10016580 <_vfiprintf_r+0x870>
100160b0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100160b2:	f8c9 4000 	str.w	r4, [r9]
100160b6:	eb02 030c 	add.w	r3, r2, ip
100160ba:	2907      	cmp	r1, #7
100160bc:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
100160c0:	f8c9 2004 	str.w	r2, [r9, #4]
100160c4:	f340 81fe 	ble.w	100164c4 <_vfiprintf_r+0x7b4>
100160c8:	2b00      	cmp	r3, #0
100160ca:	f000 832c 	beq.w	10016726 <_vfiprintf_r+0xa16>
100160ce:	9903      	ldr	r1, [sp, #12]
100160d0:	aa1a      	add	r2, sp, #104	@ 0x68
100160d2:	4658      	mov	r0, fp
100160d4:	f7ff fdd4 	bl	10015c80 <__sprint_r.part.0>
100160d8:	2800      	cmp	r0, #0
100160da:	f47f af71 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
100160de:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100160e0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100160e4:	9a02      	ldr	r2, [sp, #8]
100160e6:	0750      	lsls	r0, r2, #29
100160e8:	d505      	bpl.n	100160f6 <_vfiprintf_r+0x3e6>
100160ea:	9a08      	ldr	r2, [sp, #32]
100160ec:	9904      	ldr	r1, [sp, #16]
100160ee:	1a54      	subs	r4, r2, r1
100160f0:	2c00      	cmp	r4, #0
100160f2:	f300 8323 	bgt.w	1001673c <_vfiprintf_r+0xa2c>
100160f6:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
100160fa:	9804      	ldr	r0, [sp, #16]
100160fc:	4281      	cmp	r1, r0
100160fe:	bfac      	ite	ge
10016100:	1852      	addge	r2, r2, r1
10016102:	1812      	addlt	r2, r2, r0
10016104:	9207      	str	r2, [sp, #28]
10016106:	2b00      	cmp	r3, #0
10016108:	f47f af52 	bne.w	10015fb0 <_vfiprintf_r+0x2a0>
1001610c:	2300      	movs	r3, #0
1001610e:	931b      	str	r3, [sp, #108]	@ 0x6c
10016110:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016112:	b11b      	cbz	r3, 1001611c <_vfiprintf_r+0x40c>
10016114:	4619      	mov	r1, r3
10016116:	4658      	mov	r0, fp
10016118:	f7fd fb72 	bl	10013800 <_free_r>
1001611c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016120:	e639      	b.n	10015d96 <_vfiprintf_r+0x86>
10016122:	059a      	lsls	r2, r3, #22
10016124:	f53f af5a 	bmi.w	10015fdc <_vfiprintf_r+0x2cc>
10016128:	9c03      	ldr	r4, [sp, #12]
1001612a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001612c:	f7fc f83e 	bl	100121ac <__retarget_lock_release_recursive>
10016130:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016134:	e752      	b.n	10015fdc <_vfiprintf_r+0x2cc>
10016136:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10016138:	9406      	str	r4, [sp, #24]
1001613a:	f856 4b04 	ldr.w	r4, [r6], #4
1001613e:	2300      	movs	r3, #0
10016140:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10016144:	2c00      	cmp	r4, #0
10016146:	f000 84c9 	beq.w	10016adc <_vfiprintf_r+0xdcc>
1001614a:	2a53      	cmp	r2, #83	@ 0x53
1001614c:	f000 8422 	beq.w	10016994 <_vfiprintf_r+0xc84>
10016150:	9b02      	ldr	r3, [sp, #8]
10016152:	f013 0510 	ands.w	r5, r3, #16
10016156:	f040 841d 	bne.w	10016994 <_vfiprintf_r+0xc84>
1001615a:	9b05      	ldr	r3, [sp, #20]
1001615c:	1c5a      	adds	r2, r3, #1
1001615e:	f000 854e 	beq.w	10016bfe <_vfiprintf_r+0xeee>
10016162:	461a      	mov	r2, r3
10016164:	4629      	mov	r1, r5
10016166:	4620      	mov	r0, r4
10016168:	f7fd f94a 	bl	10013400 <memchr>
1001616c:	900b      	str	r0, [sp, #44]	@ 0x2c
1001616e:	2800      	cmp	r0, #0
10016170:	f000 853e 	beq.w	10016bf0 <_vfiprintf_r+0xee0>
10016174:	1b03      	subs	r3, r0, r4
10016176:	9309      	str	r3, [sp, #36]	@ 0x24
10016178:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001617c:	9505      	str	r5, [sp, #20]
1001617e:	960a      	str	r6, [sp, #40]	@ 0x28
10016180:	9304      	str	r3, [sp, #16]
10016182:	950b      	str	r5, [sp, #44]	@ 0x2c
10016184:	e18d      	b.n	100164a2 <_vfiprintf_r+0x792>
10016186:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016188:	9406      	str	r4, [sp, #24]
1001618a:	2a43      	cmp	r2, #67	@ 0x43
1001618c:	f103 0504 	add.w	r5, r3, #4
10016190:	d003      	beq.n	1001619a <_vfiprintf_r+0x48a>
10016192:	9b02      	ldr	r3, [sp, #8]
10016194:	06de      	lsls	r6, r3, #27
10016196:	f140 83e5 	bpl.w	10016964 <_vfiprintf_r+0xc54>
1001619a:	2208      	movs	r2, #8
1001619c:	2100      	movs	r1, #0
1001619e:	a818      	add	r0, sp, #96	@ 0x60
100161a0:	f7fb ff4a 	bl	10012038 <memset>
100161a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100161a6:	ac2d      	add	r4, sp, #180	@ 0xb4
100161a8:	681a      	ldr	r2, [r3, #0]
100161aa:	4621      	mov	r1, r4
100161ac:	ab18      	add	r3, sp, #96	@ 0x60
100161ae:	4658      	mov	r0, fp
100161b0:	f7fb ff94 	bl	100120dc <_wcrtomb_r>
100161b4:	4603      	mov	r3, r0
100161b6:	3301      	adds	r3, #1
100161b8:	9009      	str	r0, [sp, #36]	@ 0x24
100161ba:	f000 8541 	beq.w	10016c40 <_vfiprintf_r+0xf30>
100161be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100161c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
100161c4:	9304      	str	r3, [sp, #16]
100161c6:	2300      	movs	r3, #0
100161c8:	950a      	str	r5, [sp, #40]	@ 0x28
100161ca:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100161ce:	e718      	b.n	10016002 <_vfiprintf_r+0x2f2>
100161d0:	9b02      	ldr	r3, [sp, #8]
100161d2:	9406      	str	r4, [sp, #24]
100161d4:	069c      	lsls	r4, r3, #26
100161d6:	d56d      	bpl.n	100162b4 <_vfiprintf_r+0x5a4>
100161d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100161da:	3307      	adds	r3, #7
100161dc:	f023 0307 	bic.w	r3, r3, #7
100161e0:	4619      	mov	r1, r3
100161e2:	685a      	ldr	r2, [r3, #4]
100161e4:	f851 3b08 	ldr.w	r3, [r1], #8
100161e8:	910a      	str	r1, [sp, #40]	@ 0x28
100161ea:	4611      	mov	r1, r2
100161ec:	2a00      	cmp	r2, #0
100161ee:	f2c0 8137 	blt.w	10016460 <_vfiprintf_r+0x750>
100161f2:	9a05      	ldr	r2, [sp, #20]
100161f4:	3201      	adds	r2, #1
100161f6:	f000 8140 	beq.w	1001647a <_vfiprintf_r+0x76a>
100161fa:	9a02      	ldr	r2, [sp, #8]
100161fc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10016200:	9202      	str	r2, [sp, #8]
10016202:	ea53 0201 	orrs.w	r2, r3, r1
10016206:	f040 8138 	bne.w	1001647a <_vfiprintf_r+0x76a>
1001620a:	9b05      	ldr	r3, [sp, #20]
1001620c:	2b00      	cmp	r3, #0
1001620e:	f040 8508 	bne.w	10016c22 <_vfiprintf_r+0xf12>
10016212:	9304      	str	r3, [sp, #16]
10016214:	9309      	str	r3, [sp, #36]	@ 0x24
10016216:	ac46      	add	r4, sp, #280	@ 0x118
10016218:	e141      	b.n	1001649e <_vfiprintf_r+0x78e>
1001621a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001621c:	f853 2b04 	ldr.w	r2, [r3], #4
10016220:	9208      	str	r2, [sp, #32]
10016222:	2a00      	cmp	r2, #0
10016224:	f280 8328 	bge.w	10016878 <_vfiprintf_r+0xb68>
10016228:	9a08      	ldr	r2, [sp, #32]
1001622a:	930a      	str	r3, [sp, #40]	@ 0x28
1001622c:	4252      	negs	r2, r2
1001622e:	9208      	str	r2, [sp, #32]
10016230:	9b02      	ldr	r3, [sp, #8]
10016232:	7822      	ldrb	r2, [r4, #0]
10016234:	f043 0304 	orr.w	r3, r3, #4
10016238:	9302      	str	r3, [sp, #8]
1001623a:	e5d1      	b.n	10015de0 <_vfiprintf_r+0xd0>
1001623c:	9b02      	ldr	r3, [sp, #8]
1001623e:	9406      	str	r4, [sp, #24]
10016240:	f043 0210 	orr.w	r2, r3, #16
10016244:	f012 0120 	ands.w	r1, r2, #32
10016248:	f000 82e8 	beq.w	1001681c <_vfiprintf_r+0xb0c>
1001624c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001624e:	3307      	adds	r3, #7
10016250:	f023 0307 	bic.w	r3, r3, #7
10016254:	4618      	mov	r0, r3
10016256:	6859      	ldr	r1, [r3, #4]
10016258:	f850 3b08 	ldr.w	r3, [r0], #8
1001625c:	900a      	str	r0, [sp, #40]	@ 0x28
1001625e:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
10016262:	9402      	str	r4, [sp, #8]
10016264:	9c05      	ldr	r4, [sp, #20]
10016266:	2000      	movs	r0, #0
10016268:	3401      	adds	r4, #1
1001626a:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
1001626e:	d05d      	beq.n	1001632c <_vfiprintf_r+0x61c>
10016270:	ea53 0401 	orrs.w	r4, r3, r1
10016274:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10016278:	f040 8414 	bne.w	10016aa4 <_vfiprintf_r+0xd94>
1001627c:	9c02      	ldr	r4, [sp, #8]
1001627e:	9202      	str	r2, [sp, #8]
10016280:	9b05      	ldr	r3, [sp, #20]
10016282:	2b00      	cmp	r3, #0
10016284:	d14a      	bne.n	1001631c <_vfiprintf_r+0x60c>
10016286:	2800      	cmp	r0, #0
10016288:	f040 82f1 	bne.w	1001686e <_vfiprintf_r+0xb5e>
1001628c:	f014 0201 	ands.w	r2, r4, #1
10016290:	9209      	str	r2, [sp, #36]	@ 0x24
10016292:	f000 82f5 	beq.w	10016880 <_vfiprintf_r+0xb70>
10016296:	2330      	movs	r3, #48	@ 0x30
10016298:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
1001629c:	9204      	str	r2, [sp, #16]
1001629e:	f20d 1417 	addw	r4, sp, #279	@ 0x117
100162a2:	e0fc      	b.n	1001649e <_vfiprintf_r+0x78e>
100162a4:	9b02      	ldr	r3, [sp, #8]
100162a6:	9406      	str	r4, [sp, #24]
100162a8:	f043 0310 	orr.w	r3, r3, #16
100162ac:	9302      	str	r3, [sp, #8]
100162ae:	9b02      	ldr	r3, [sp, #8]
100162b0:	069c      	lsls	r4, r3, #26
100162b2:	d491      	bmi.n	100161d8 <_vfiprintf_r+0x4c8>
100162b4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100162b6:	f852 3b04 	ldr.w	r3, [r2], #4
100162ba:	920a      	str	r2, [sp, #40]	@ 0x28
100162bc:	9a02      	ldr	r2, [sp, #8]
100162be:	06d0      	lsls	r0, r2, #27
100162c0:	f100 82f3 	bmi.w	100168aa <_vfiprintf_r+0xb9a>
100162c4:	9a02      	ldr	r2, [sp, #8]
100162c6:	0651      	lsls	r1, r2, #25
100162c8:	f140 82eb 	bpl.w	100168a2 <_vfiprintf_r+0xb92>
100162cc:	f343 31c0 	sbfx	r1, r3, #15, #1
100162d0:	460a      	mov	r2, r1
100162d2:	b21b      	sxth	r3, r3
100162d4:	e78a      	b.n	100161ec <_vfiprintf_r+0x4dc>
100162d6:	9b02      	ldr	r3, [sp, #8]
100162d8:	9406      	str	r4, [sp, #24]
100162da:	f043 0410 	orr.w	r4, r3, #16
100162de:	f014 0120 	ands.w	r1, r4, #32
100162e2:	f000 828c 	beq.w	100167fe <_vfiprintf_r+0xaee>
100162e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100162e8:	3307      	adds	r3, #7
100162ea:	f023 0307 	bic.w	r3, r3, #7
100162ee:	461a      	mov	r2, r3
100162f0:	6859      	ldr	r1, [r3, #4]
100162f2:	f852 3b08 	ldr.w	r3, [r2], #8
100162f6:	920a      	str	r2, [sp, #40]	@ 0x28
100162f8:	2200      	movs	r2, #0
100162fa:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100162fe:	9a05      	ldr	r2, [sp, #20]
10016300:	3201      	adds	r2, #1
10016302:	f000 83d1 	beq.w	10016aa8 <_vfiprintf_r+0xd98>
10016306:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
1001630a:	9202      	str	r2, [sp, #8]
1001630c:	ea53 0201 	orrs.w	r2, r3, r1
10016310:	f040 80b3 	bne.w	1001647a <_vfiprintf_r+0x76a>
10016314:	9b05      	ldr	r3, [sp, #20]
10016316:	2001      	movs	r0, #1
10016318:	2b00      	cmp	r3, #0
1001631a:	d0b4      	beq.n	10016286 <_vfiprintf_r+0x576>
1001631c:	2801      	cmp	r0, #1
1001631e:	f000 8480 	beq.w	10016c22 <_vfiprintf_r+0xf12>
10016322:	2300      	movs	r3, #0
10016324:	2802      	cmp	r0, #2
10016326:	4619      	mov	r1, r3
10016328:	f000 8199 	beq.w	1001665e <_vfiprintf_r+0x94e>
1001632c:	ac46      	add	r4, sp, #280	@ 0x118
1001632e:	f003 0207 	and.w	r2, r3, #7
10016332:	08db      	lsrs	r3, r3, #3
10016334:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
10016338:	08c9      	lsrs	r1, r1, #3
1001633a:	3230      	adds	r2, #48	@ 0x30
1001633c:	ea53 0501 	orrs.w	r5, r3, r1
10016340:	4620      	mov	r0, r4
10016342:	f804 2d01 	strb.w	r2, [r4, #-1]!
10016346:	d1f2      	bne.n	1001632e <_vfiprintf_r+0x61e>
10016348:	9b02      	ldr	r3, [sp, #8]
1001634a:	07dd      	lsls	r5, r3, #31
1001634c:	f140 8195 	bpl.w	1001667a <_vfiprintf_r+0x96a>
10016350:	2a30      	cmp	r2, #48	@ 0x30
10016352:	f000 8192 	beq.w	1001667a <_vfiprintf_r+0x96a>
10016356:	2330      	movs	r3, #48	@ 0x30
10016358:	9a05      	ldr	r2, [sp, #20]
1001635a:	f804 3c01 	strb.w	r3, [r4, #-1]
1001635e:	3802      	subs	r0, #2
10016360:	ab46      	add	r3, sp, #280	@ 0x118
10016362:	1a1b      	subs	r3, r3, r0
10016364:	429a      	cmp	r2, r3
10016366:	bfb8      	it	lt
10016368:	461a      	movlt	r2, r3
1001636a:	9309      	str	r3, [sp, #36]	@ 0x24
1001636c:	4604      	mov	r4, r0
1001636e:	9204      	str	r2, [sp, #16]
10016370:	e095      	b.n	1001649e <_vfiprintf_r+0x78e>
10016372:	7822      	ldrb	r2, [r4, #0]
10016374:	9b02      	ldr	r3, [sp, #8]
10016376:	2a68      	cmp	r2, #104	@ 0x68
10016378:	f000 839d 	beq.w	10016ab6 <_vfiprintf_r+0xda6>
1001637c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016380:	9302      	str	r3, [sp, #8]
10016382:	e52d      	b.n	10015de0 <_vfiprintf_r+0xd0>
10016384:	9b02      	ldr	r3, [sp, #8]
10016386:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016388:	9406      	str	r4, [sp, #24]
1001638a:	f043 0302 	orr.w	r3, r3, #2
1001638e:	9302      	str	r3, [sp, #8]
10016390:	f852 3b04 	ldr.w	r3, [r2], #4
10016394:	920a      	str	r2, [sp, #40]	@ 0x28
10016396:	f647 0230 	movw	r2, #30768	@ 0x7830
1001639a:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
1001639e:	4abb      	ldr	r2, [pc, #748]	@ (1001668c <_vfiprintf_r+0x97c>)
100163a0:	920d      	str	r2, [sp, #52]	@ 0x34
100163a2:	2100      	movs	r1, #0
100163a4:	2200      	movs	r2, #0
100163a6:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100163aa:	9a05      	ldr	r2, [sp, #20]
100163ac:	3201      	adds	r2, #1
100163ae:	f000 8156 	beq.w	1001665e <_vfiprintf_r+0x94e>
100163b2:	9c02      	ldr	r4, [sp, #8]
100163b4:	ea53 0001 	orrs.w	r0, r3, r1
100163b8:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
100163bc:	9202      	str	r2, [sp, #8]
100163be:	f040 814e 	bne.w	1001665e <_vfiprintf_r+0x94e>
100163c2:	2002      	movs	r0, #2
100163c4:	e75c      	b.n	10016280 <_vfiprintf_r+0x570>
100163c6:	9b02      	ldr	r3, [sp, #8]
100163c8:	9406      	str	r4, [sp, #24]
100163ca:	069b      	lsls	r3, r3, #26
100163cc:	f140 827f 	bpl.w	100168ce <_vfiprintf_r+0xbbe>
100163d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100163d2:	9a07      	ldr	r2, [sp, #28]
100163d4:	681b      	ldr	r3, [r3, #0]
100163d6:	601a      	str	r2, [r3, #0]
100163d8:	17d2      	asrs	r2, r2, #31
100163da:	605a      	str	r2, [r3, #4]
100163dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100163de:	3304      	adds	r3, #4
100163e0:	930a      	str	r3, [sp, #40]	@ 0x28
100163e2:	e4d8      	b.n	10015d96 <_vfiprintf_r+0x86>
100163e4:	9b02      	ldr	r3, [sp, #8]
100163e6:	7822      	ldrb	r2, [r4, #0]
100163e8:	f043 0301 	orr.w	r3, r3, #1
100163ec:	9302      	str	r3, [sp, #8]
100163ee:	e4f7      	b.n	10015de0 <_vfiprintf_r+0xd0>
100163f0:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
100163f4:	7822      	ldrb	r2, [r4, #0]
100163f6:	2b00      	cmp	r3, #0
100163f8:	f47f acf2 	bne.w	10015de0 <_vfiprintf_r+0xd0>
100163fc:	2320      	movs	r3, #32
100163fe:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10016402:	e4ed      	b.n	10015de0 <_vfiprintf_r+0xd0>
10016404:	9b02      	ldr	r3, [sp, #8]
10016406:	7822      	ldrb	r2, [r4, #0]
10016408:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1001640c:	9302      	str	r3, [sp, #8]
1001640e:	e4e7      	b.n	10015de0 <_vfiprintf_r+0xd0>
10016410:	4621      	mov	r1, r4
10016412:	f811 2b01 	ldrb.w	r2, [r1], #1
10016416:	2a2a      	cmp	r2, #42	@ 0x2a
10016418:	f000 8433 	beq.w	10016c82 <_vfiprintf_r+0xf72>
1001641c:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10016420:	2b09      	cmp	r3, #9
10016422:	460c      	mov	r4, r1
10016424:	f200 83f6 	bhi.w	10016c14 <_vfiprintf_r+0xf04>
10016428:	2200      	movs	r2, #0
1001642a:	4611      	mov	r1, r2
1001642c:	f814 2b01 	ldrb.w	r2, [r4], #1
10016430:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10016434:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10016438:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001643c:	2b09      	cmp	r3, #9
1001643e:	d9f5      	bls.n	1001642c <_vfiprintf_r+0x71c>
10016440:	9105      	str	r1, [sp, #20]
10016442:	e4ce      	b.n	10015de2 <_vfiprintf_r+0xd2>
10016444:	232b      	movs	r3, #43	@ 0x2b
10016446:	7822      	ldrb	r2, [r4, #0]
10016448:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001644c:	e4c8      	b.n	10015de0 <_vfiprintf_r+0xd0>
1001644e:	7822      	ldrb	r2, [r4, #0]
10016450:	9b02      	ldr	r3, [sp, #8]
10016452:	2a6c      	cmp	r2, #108	@ 0x6c
10016454:	f000 8336 	beq.w	10016ac4 <_vfiprintf_r+0xdb4>
10016458:	f043 0310 	orr.w	r3, r3, #16
1001645c:	9302      	str	r3, [sp, #8]
1001645e:	e4bf      	b.n	10015de0 <_vfiprintf_r+0xd0>
10016460:	222d      	movs	r2, #45	@ 0x2d
10016462:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10016466:	9a05      	ldr	r2, [sp, #20]
10016468:	425b      	negs	r3, r3
1001646a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001646e:	3201      	adds	r2, #1
10016470:	d003      	beq.n	1001647a <_vfiprintf_r+0x76a>
10016472:	9a02      	ldr	r2, [sp, #8]
10016474:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10016478:	9202      	str	r2, [sp, #8]
1001647a:	2b0a      	cmp	r3, #10
1001647c:	f171 0200 	sbcs.w	r2, r1, #0
10016480:	f080 82bd 	bcs.w	100169fe <_vfiprintf_r+0xcee>
10016484:	3330      	adds	r3, #48	@ 0x30
10016486:	b2db      	uxtb	r3, r3
10016488:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
1001648c:	9b05      	ldr	r3, [sp, #20]
1001648e:	2b01      	cmp	r3, #1
10016490:	bfb8      	it	lt
10016492:	2301      	movlt	r3, #1
10016494:	9304      	str	r3, [sp, #16]
10016496:	2301      	movs	r3, #1
10016498:	9309      	str	r3, [sp, #36]	@ 0x24
1001649a:	f20d 1417 	addw	r4, sp, #279	@ 0x117
1001649e:	2300      	movs	r3, #0
100164a0:	930b      	str	r3, [sp, #44]	@ 0x2c
100164a2:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
100164a6:	2b00      	cmp	r3, #0
100164a8:	f43f adae 	beq.w	10016008 <_vfiprintf_r+0x2f8>
100164ac:	9b04      	ldr	r3, [sp, #16]
100164ae:	3301      	adds	r3, #1
100164b0:	9304      	str	r3, [sp, #16]
100164b2:	e5a9      	b.n	10016008 <_vfiprintf_r+0x2f8>
100164b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100164b6:	941d      	str	r4, [sp, #116]	@ 0x74
100164b8:	2201      	movs	r2, #1
100164ba:	931e      	str	r3, [sp, #120]	@ 0x78
100164bc:	931c      	str	r3, [sp, #112]	@ 0x70
100164be:	921b      	str	r2, [sp, #108]	@ 0x6c
100164c0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100164c4:	f109 0908 	add.w	r9, r9, #8
100164c8:	e60c      	b.n	100160e4 <_vfiprintf_r+0x3d4>
100164ca:	9b08      	ldr	r3, [sp, #32]
100164cc:	9804      	ldr	r0, [sp, #16]
100164ce:	1a1d      	subs	r5, r3, r0
100164d0:	2d00      	cmp	r5, #0
100164d2:	f77f ade7 	ble.w	100160a4 <_vfiprintf_r+0x394>
100164d6:	2d10      	cmp	r5, #16
100164d8:	f340 83cb 	ble.w	10016c72 <_vfiprintf_r+0xf62>
100164dc:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 10016694 <_vfiprintf_r+0x984>
100164e0:	4643      	mov	r3, r8
100164e2:	2610      	movs	r6, #16
100164e4:	46a0      	mov	r8, r4
100164e6:	4661      	mov	r1, ip
100164e8:	461c      	mov	r4, r3
100164ea:	e007      	b.n	100164fc <_vfiprintf_r+0x7ec>
100164ec:	f102 0c02 	add.w	ip, r2, #2
100164f0:	f109 0908 	add.w	r9, r9, #8
100164f4:	4602      	mov	r2, r0
100164f6:	3d10      	subs	r5, #16
100164f8:	2d10      	cmp	r5, #16
100164fa:	dd1a      	ble.n	10016532 <_vfiprintf_r+0x822>
100164fc:	1c50      	adds	r0, r2, #1
100164fe:	3110      	adds	r1, #16
10016500:	2807      	cmp	r0, #7
10016502:	e9c9 4600 	strd	r4, r6, [r9]
10016506:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
1001650a:	ddef      	ble.n	100164ec <_vfiprintf_r+0x7dc>
1001650c:	aa1a      	add	r2, sp, #104	@ 0x68
1001650e:	2900      	cmp	r1, #0
10016510:	d07c      	beq.n	1001660c <_vfiprintf_r+0x8fc>
10016512:	9903      	ldr	r1, [sp, #12]
10016514:	4658      	mov	r0, fp
10016516:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001651a:	f7ff fbb1 	bl	10015c80 <__sprint_r.part.0>
1001651e:	2800      	cmp	r0, #0
10016520:	f47f ad4e 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
10016524:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
10016528:	3d10      	subs	r5, #16
1001652a:	2d10      	cmp	r5, #16
1001652c:	f102 0c01 	add.w	ip, r2, #1
10016530:	dce4      	bgt.n	100164fc <_vfiprintf_r+0x7ec>
10016532:	4623      	mov	r3, r4
10016534:	4660      	mov	r0, ip
10016536:	4644      	mov	r4, r8
10016538:	468c      	mov	ip, r1
1001653a:	4698      	mov	r8, r3
1001653c:	44ac      	add	ip, r5
1001653e:	2807      	cmp	r0, #7
10016540:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
10016544:	f8c9 8000 	str.w	r8, [r9]
10016548:	f8c9 5004 	str.w	r5, [r9, #4]
1001654c:	f340 81a4 	ble.w	10016898 <_vfiprintf_r+0xb88>
10016550:	f1bc 0f00 	cmp.w	ip, #0
10016554:	f000 8327 	beq.w	10016ba6 <_vfiprintf_r+0xe96>
10016558:	9903      	ldr	r1, [sp, #12]
1001655a:	aa1a      	add	r2, sp, #104	@ 0x68
1001655c:	4658      	mov	r0, fp
1001655e:	f7ff fb8f 	bl	10015c80 <__sprint_r.part.0>
10016562:	2800      	cmp	r0, #0
10016564:	f47f ad2c 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
10016568:	9b05      	ldr	r3, [sp, #20]
1001656a:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001656c:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016570:	1a1d      	subs	r5, r3, r0
10016572:	2d00      	cmp	r5, #0
10016574:	f102 0101 	add.w	r1, r2, #1
10016578:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001657c:	f77f ad98 	ble.w	100160b0 <_vfiprintf_r+0x3a0>
10016580:	2d10      	cmp	r5, #16
10016582:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 10016694 <_vfiprintf_r+0x984>
10016586:	dd2d      	ble.n	100165e4 <_vfiprintf_r+0x8d4>
10016588:	462b      	mov	r3, r5
1001658a:	2610      	movs	r6, #16
1001658c:	4625      	mov	r5, r4
1001658e:	4660      	mov	r0, ip
10016590:	461c      	mov	r4, r3
10016592:	e007      	b.n	100165a4 <_vfiprintf_r+0x894>
10016594:	f102 0c02 	add.w	ip, r2, #2
10016598:	f109 0908 	add.w	r9, r9, #8
1001659c:	460a      	mov	r2, r1
1001659e:	3c10      	subs	r4, #16
100165a0:	2c10      	cmp	r4, #16
100165a2:	dd1a      	ble.n	100165da <_vfiprintf_r+0x8ca>
100165a4:	1c51      	adds	r1, r2, #1
100165a6:	4b3b      	ldr	r3, [pc, #236]	@ (10016694 <_vfiprintf_r+0x984>)
100165a8:	3010      	adds	r0, #16
100165aa:	2907      	cmp	r1, #7
100165ac:	e9c9 3600 	strd	r3, r6, [r9]
100165b0:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
100165b4:	ddee      	ble.n	10016594 <_vfiprintf_r+0x884>
100165b6:	aa1a      	add	r2, sp, #104	@ 0x68
100165b8:	b310      	cbz	r0, 10016600 <_vfiprintf_r+0x8f0>
100165ba:	9903      	ldr	r1, [sp, #12]
100165bc:	4658      	mov	r0, fp
100165be:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100165c2:	f7ff fb5d 	bl	10015c80 <__sprint_r.part.0>
100165c6:	2800      	cmp	r0, #0
100165c8:	f47f acfa 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
100165cc:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
100165d0:	3c10      	subs	r4, #16
100165d2:	2c10      	cmp	r4, #16
100165d4:	f102 0c01 	add.w	ip, r2, #1
100165d8:	dce4      	bgt.n	100165a4 <_vfiprintf_r+0x894>
100165da:	4623      	mov	r3, r4
100165dc:	4661      	mov	r1, ip
100165de:	462c      	mov	r4, r5
100165e0:	4684      	mov	ip, r0
100165e2:	461d      	mov	r5, r3
100165e4:	44ac      	add	ip, r5
100165e6:	2907      	cmp	r1, #7
100165e8:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
100165ec:	f8c9 8000 	str.w	r8, [r9]
100165f0:	f8c9 5004 	str.w	r5, [r9, #4]
100165f4:	f300 80ed 	bgt.w	100167d2 <_vfiprintf_r+0xac2>
100165f8:	f109 0908 	add.w	r9, r9, #8
100165fc:	3101      	adds	r1, #1
100165fe:	e557      	b.n	100160b0 <_vfiprintf_r+0x3a0>
10016600:	f04f 0c01 	mov.w	ip, #1
10016604:	4602      	mov	r2, r0
10016606:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001660a:	e7c8      	b.n	1001659e <_vfiprintf_r+0x88e>
1001660c:	f04f 0c01 	mov.w	ip, #1
10016610:	460a      	mov	r2, r1
10016612:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016616:	e76e      	b.n	100164f6 <_vfiprintf_r+0x7e6>
10016618:	f1bc 0f00 	cmp.w	ip, #0
1001661c:	d00f      	beq.n	1001663e <_vfiprintf_r+0x92e>
1001661e:	9903      	ldr	r1, [sp, #12]
10016620:	9311      	str	r3, [sp, #68]	@ 0x44
10016622:	aa1a      	add	r2, sp, #104	@ 0x68
10016624:	4658      	mov	r0, fp
10016626:	f7ff fb2b 	bl	10015c80 <__sprint_r.part.0>
1001662a:	2800      	cmp	r0, #0
1001662c:	f47f acc8 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
10016630:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016634:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10016636:	1c51      	adds	r1, r2, #1
10016638:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001663c:	e50f      	b.n	1001605e <_vfiprintf_r+0x34e>
1001663e:	2b00      	cmp	r3, #0
10016640:	f000 8156 	beq.w	100168f0 <_vfiprintf_r+0xbe0>
10016644:	2302      	movs	r3, #2
10016646:	931e      	str	r3, [sp, #120]	@ 0x78
10016648:	469c      	mov	ip, r3
1001664a:	ab13      	add	r3, sp, #76	@ 0x4c
1001664c:	931d      	str	r3, [sp, #116]	@ 0x74
1001664e:	2101      	movs	r1, #1
10016650:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016654:	460a      	mov	r2, r1
10016656:	f109 0908 	add.w	r9, r9, #8
1001665a:	3101      	adds	r1, #1
1001665c:	e51e      	b.n	1001609c <_vfiprintf_r+0x38c>
1001665e:	980d      	ldr	r0, [sp, #52]	@ 0x34
10016660:	ac46      	add	r4, sp, #280	@ 0x118
10016662:	f003 020f 	and.w	r2, r3, #15
10016666:	091b      	lsrs	r3, r3, #4
10016668:	5c82      	ldrb	r2, [r0, r2]
1001666a:	f804 2d01 	strb.w	r2, [r4, #-1]!
1001666e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
10016672:	0909      	lsrs	r1, r1, #4
10016674:	ea53 0201 	orrs.w	r2, r3, r1
10016678:	d1f3      	bne.n	10016662 <_vfiprintf_r+0x952>
1001667a:	9a05      	ldr	r2, [sp, #20]
1001667c:	ab46      	add	r3, sp, #280	@ 0x118
1001667e:	1b1b      	subs	r3, r3, r4
10016680:	429a      	cmp	r2, r3
10016682:	bfb8      	it	lt
10016684:	461a      	movlt	r2, r3
10016686:	9309      	str	r3, [sp, #36]	@ 0x24
10016688:	9204      	str	r2, [sp, #16]
1001668a:	e708      	b.n	1001649e <_vfiprintf_r+0x78e>
1001668c:	10019120 	.word	0x10019120
10016690:	2000044c 	.word	0x2000044c
10016694:	10019360 	.word	0x10019360
10016698:	2d10      	cmp	r5, #16
1001669a:	f340 82bf 	ble.w	10016c1c <_vfiprintf_r+0xf0c>
1001669e:	4eae      	ldr	r6, [pc, #696]	@ (10016958 <_vfiprintf_r+0xc48>)
100166a0:	9311      	str	r3, [sp, #68]	@ 0x44
100166a2:	4649      	mov	r1, r9
100166a4:	f04f 0810 	mov.w	r8, #16
100166a8:	46a1      	mov	r9, r4
100166aa:	4634      	mov	r4, r6
100166ac:	4666      	mov	r6, ip
100166ae:	e007      	b.n	100166c0 <_vfiprintf_r+0x9b0>
100166b0:	f102 0e02 	add.w	lr, r2, #2
100166b4:	3108      	adds	r1, #8
100166b6:	4602      	mov	r2, r0
100166b8:	3d10      	subs	r5, #16
100166ba:	2d10      	cmp	r5, #16
100166bc:	dd18      	ble.n	100166f0 <_vfiprintf_r+0x9e0>
100166be:	1c50      	adds	r0, r2, #1
100166c0:	3610      	adds	r6, #16
100166c2:	2807      	cmp	r0, #7
100166c4:	e9c1 4800 	strd	r4, r8, [r1]
100166c8:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
100166cc:	ddf0      	ble.n	100166b0 <_vfiprintf_r+0x9a0>
100166ce:	9903      	ldr	r1, [sp, #12]
100166d0:	aa1a      	add	r2, sp, #104	@ 0x68
100166d2:	4658      	mov	r0, fp
100166d4:	b316      	cbz	r6, 1001671c <_vfiprintf_r+0xa0c>
100166d6:	f7ff fad3 	bl	10015c80 <__sprint_r.part.0>
100166da:	2800      	cmp	r0, #0
100166dc:	f47f ac70 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
100166e0:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
100166e4:	3d10      	subs	r5, #16
100166e6:	2d10      	cmp	r5, #16
100166e8:	f102 0e01 	add.w	lr, r2, #1
100166ec:	a91d      	add	r1, sp, #116	@ 0x74
100166ee:	dce6      	bgt.n	100166be <_vfiprintf_r+0x9ae>
100166f0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
100166f2:	46b4      	mov	ip, r6
100166f4:	4626      	mov	r6, r4
100166f6:	464c      	mov	r4, r9
100166f8:	4689      	mov	r9, r1
100166fa:	44ac      	add	ip, r5
100166fc:	f1be 0f07 	cmp.w	lr, #7
10016700:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
10016704:	f8c9 6000 	str.w	r6, [r9]
10016708:	f8c9 5004 	str.w	r5, [r9, #4]
1001670c:	f300 809a 	bgt.w	10016844 <_vfiprintf_r+0xb34>
10016710:	f109 0908 	add.w	r9, r9, #8
10016714:	f10e 0101 	add.w	r1, lr, #1
10016718:	4672      	mov	r2, lr
1001671a:	e48b      	b.n	10016034 <_vfiprintf_r+0x324>
1001671c:	4632      	mov	r2, r6
1001671e:	f04f 0e01 	mov.w	lr, #1
10016722:	a91d      	add	r1, sp, #116	@ 0x74
10016724:	e7c8      	b.n	100166b8 <_vfiprintf_r+0x9a8>
10016726:	9a02      	ldr	r2, [sp, #8]
10016728:	931b      	str	r3, [sp, #108]	@ 0x6c
1001672a:	0754      	lsls	r4, r2, #29
1001672c:	d548      	bpl.n	100167c0 <_vfiprintf_r+0xab0>
1001672e:	9a08      	ldr	r2, [sp, #32]
10016730:	9904      	ldr	r1, [sp, #16]
10016732:	1a54      	subs	r4, r2, r1
10016734:	2c00      	cmp	r4, #0
10016736:	dd43      	ble.n	100167c0 <_vfiprintf_r+0xab0>
10016738:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001673c:	2c10      	cmp	r4, #16
1001673e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10016740:	f340 827b 	ble.w	10016c3a <_vfiprintf_r+0xf2a>
10016744:	4e84      	ldr	r6, [pc, #528]	@ (10016958 <_vfiprintf_r+0xc48>)
10016746:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001674a:	2510      	movs	r5, #16
1001674c:	e006      	b.n	1001675c <_vfiprintf_r+0xa4c>
1001674e:	1c88      	adds	r0, r1, #2
10016750:	f109 0908 	add.w	r9, r9, #8
10016754:	4611      	mov	r1, r2
10016756:	3c10      	subs	r4, #16
10016758:	2c10      	cmp	r4, #16
1001675a:	dd19      	ble.n	10016790 <_vfiprintf_r+0xa80>
1001675c:	1c4a      	adds	r2, r1, #1
1001675e:	3310      	adds	r3, #16
10016760:	2a07      	cmp	r2, #7
10016762:	e9c9 6500 	strd	r6, r5, [r9]
10016766:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
1001676a:	ddf0      	ble.n	1001674e <_vfiprintf_r+0xa3e>
1001676c:	aa1a      	add	r2, sp, #104	@ 0x68
1001676e:	b313      	cbz	r3, 100167b6 <_vfiprintf_r+0xaa6>
10016770:	4641      	mov	r1, r8
10016772:	4658      	mov	r0, fp
10016774:	f7ff fa84 	bl	10015c80 <__sprint_r.part.0>
10016778:	2800      	cmp	r0, #0
1001677a:	f47f ac21 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
1001677e:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
10016782:	3c10      	subs	r4, #16
10016784:	2c10      	cmp	r4, #16
10016786:	f101 0001 	add.w	r0, r1, #1
1001678a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001678e:	dce5      	bgt.n	1001675c <_vfiprintf_r+0xa4c>
10016790:	4423      	add	r3, r4
10016792:	2807      	cmp	r0, #7
10016794:	e9c9 6400 	strd	r6, r4, [r9]
10016798:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
1001679c:	f77f acab 	ble.w	100160f6 <_vfiprintf_r+0x3e6>
100167a0:	b173      	cbz	r3, 100167c0 <_vfiprintf_r+0xab0>
100167a2:	9903      	ldr	r1, [sp, #12]
100167a4:	aa1a      	add	r2, sp, #104	@ 0x68
100167a6:	4658      	mov	r0, fp
100167a8:	f7ff fa6a 	bl	10015c80 <__sprint_r.part.0>
100167ac:	2800      	cmp	r0, #0
100167ae:	f47f ac07 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
100167b2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100167b4:	e49f      	b.n	100160f6 <_vfiprintf_r+0x3e6>
100167b6:	2001      	movs	r0, #1
100167b8:	4619      	mov	r1, r3
100167ba:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100167be:	e7ca      	b.n	10016756 <_vfiprintf_r+0xa46>
100167c0:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
100167c4:	9904      	ldr	r1, [sp, #16]
100167c6:	428a      	cmp	r2, r1
100167c8:	bfac      	ite	ge
100167ca:	189b      	addge	r3, r3, r2
100167cc:	185b      	addlt	r3, r3, r1
100167ce:	9307      	str	r3, [sp, #28]
100167d0:	e49c      	b.n	1001610c <_vfiprintf_r+0x3fc>
100167d2:	f1bc 0f00 	cmp.w	ip, #0
100167d6:	f43f ae6d 	beq.w	100164b4 <_vfiprintf_r+0x7a4>
100167da:	9903      	ldr	r1, [sp, #12]
100167dc:	aa1a      	add	r2, sp, #104	@ 0x68
100167de:	4658      	mov	r0, fp
100167e0:	f7ff fa4e 	bl	10015c80 <__sprint_r.part.0>
100167e4:	2800      	cmp	r0, #0
100167e6:	f47f abeb 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
100167ea:	991b      	ldr	r1, [sp, #108]	@ 0x6c
100167ec:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
100167f0:	3101      	adds	r1, #1
100167f2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100167f6:	e45b      	b.n	100160b0 <_vfiprintf_r+0x3a0>
100167f8:	921b      	str	r2, [sp, #108]	@ 0x6c
100167fa:	f7ff bbd6 	b.w	10015faa <_vfiprintf_r+0x29a>
100167fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016800:	f852 3b04 	ldr.w	r3, [r2], #4
10016804:	920a      	str	r2, [sp, #40]	@ 0x28
10016806:	f014 0210 	ands.w	r2, r4, #16
1001680a:	f47f ad75 	bne.w	100162f8 <_vfiprintf_r+0x5e8>
1001680e:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10016812:	f000 816d 	beq.w	10016af0 <_vfiprintf_r+0xde0>
10016816:	b29b      	uxth	r3, r3
10016818:	4611      	mov	r1, r2
1001681a:	e56d      	b.n	100162f8 <_vfiprintf_r+0x5e8>
1001681c:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001681e:	f850 3b04 	ldr.w	r3, [r0], #4
10016822:	900a      	str	r0, [sp, #40]	@ 0x28
10016824:	f012 0010 	ands.w	r0, r2, #16
10016828:	f47f ad19 	bne.w	1001625e <_vfiprintf_r+0x54e>
1001682c:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
10016830:	f000 8166 	beq.w	10016b00 <_vfiprintf_r+0xdf0>
10016834:	b29b      	uxth	r3, r3
10016836:	4601      	mov	r1, r0
10016838:	e511      	b.n	1001625e <_vfiprintf_r+0x54e>
1001683a:	2101      	movs	r1, #1
1001683c:	4662      	mov	r2, ip
1001683e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016842:	e42b      	b.n	1001609c <_vfiprintf_r+0x38c>
10016844:	f1bc 0f00 	cmp.w	ip, #0
10016848:	f000 8095 	beq.w	10016976 <_vfiprintf_r+0xc66>
1001684c:	9903      	ldr	r1, [sp, #12]
1001684e:	9311      	str	r3, [sp, #68]	@ 0x44
10016850:	aa1a      	add	r2, sp, #104	@ 0x68
10016852:	4658      	mov	r0, fp
10016854:	f7ff fa14 	bl	10015c80 <__sprint_r.part.0>
10016858:	2800      	cmp	r0, #0
1001685a:	f47f abb1 	bne.w	10015fc0 <_vfiprintf_r+0x2b0>
1001685e:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016862:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10016864:	1c51      	adds	r1, r2, #1
10016866:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001686a:	f7ff bbe3 	b.w	10016034 <_vfiprintf_r+0x324>
1001686e:	9b05      	ldr	r3, [sp, #20]
10016870:	9304      	str	r3, [sp, #16]
10016872:	9309      	str	r3, [sp, #36]	@ 0x24
10016874:	ac46      	add	r4, sp, #280	@ 0x118
10016876:	e612      	b.n	1001649e <_vfiprintf_r+0x78e>
10016878:	7822      	ldrb	r2, [r4, #0]
1001687a:	930a      	str	r3, [sp, #40]	@ 0x28
1001687c:	f7ff bab0 	b.w	10015de0 <_vfiprintf_r+0xd0>
10016880:	9b05      	ldr	r3, [sp, #20]
10016882:	9304      	str	r3, [sp, #16]
10016884:	ac46      	add	r4, sp, #280	@ 0x118
10016886:	e60a      	b.n	1001649e <_vfiprintf_r+0x78e>
10016888:	9d03      	ldr	r5, [sp, #12]
1001688a:	6da8      	ldr	r0, [r5, #88]	@ 0x58
1001688c:	f7fb fc8c 	bl	100121a8 <__retarget_lock_acquire_recursive>
10016890:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10016894:	f7ff ba5b 	b.w	10015d4e <_vfiprintf_r+0x3e>
10016898:	f109 0908 	add.w	r9, r9, #8
1001689c:	1c41      	adds	r1, r0, #1
1001689e:	4602      	mov	r2, r0
100168a0:	e400      	b.n	100160a4 <_vfiprintf_r+0x394>
100168a2:	9a02      	ldr	r2, [sp, #8]
100168a4:	0592      	lsls	r2, r2, #22
100168a6:	f100 8184 	bmi.w	10016bb2 <_vfiprintf_r+0xea2>
100168aa:	17d9      	asrs	r1, r3, #31
100168ac:	460a      	mov	r2, r1
100168ae:	e49d      	b.n	100161ec <_vfiprintf_r+0x4dc>
100168b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100168b2:	7822      	ldrb	r2, [r4, #0]
100168b4:	2b00      	cmp	r3, #0
100168b6:	f43f aa93 	beq.w	10015de0 <_vfiprintf_r+0xd0>
100168ba:	781b      	ldrb	r3, [r3, #0]
100168bc:	2b00      	cmp	r3, #0
100168be:	f43f aa8f 	beq.w	10015de0 <_vfiprintf_r+0xd0>
100168c2:	9b02      	ldr	r3, [sp, #8]
100168c4:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
100168c8:	9302      	str	r3, [sp, #8]
100168ca:	f7ff ba89 	b.w	10015de0 <_vfiprintf_r+0xd0>
100168ce:	9b02      	ldr	r3, [sp, #8]
100168d0:	06de      	lsls	r6, r3, #27
100168d2:	f100 80fe 	bmi.w	10016ad2 <_vfiprintf_r+0xdc2>
100168d6:	9b02      	ldr	r3, [sp, #8]
100168d8:	065d      	lsls	r5, r3, #25
100168da:	f100 8176 	bmi.w	10016bca <_vfiprintf_r+0xeba>
100168de:	9b02      	ldr	r3, [sp, #8]
100168e0:	059c      	lsls	r4, r3, #22
100168e2:	f140 80f6 	bpl.w	10016ad2 <_vfiprintf_r+0xdc2>
100168e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100168e8:	9a07      	ldr	r2, [sp, #28]
100168ea:	681b      	ldr	r3, [r3, #0]
100168ec:	701a      	strb	r2, [r3, #0]
100168ee:	e575      	b.n	100163dc <_vfiprintf_r+0x6cc>
100168f0:	4662      	mov	r2, ip
100168f2:	2101      	movs	r1, #1
100168f4:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100168f8:	f7ff bbd0 	b.w	1001609c <_vfiprintf_r+0x38c>
100168fc:	9406      	str	r4, [sp, #24]
100168fe:	9c02      	ldr	r4, [sp, #8]
10016900:	e4ed      	b.n	100162de <_vfiprintf_r+0x5ce>
10016902:	9a02      	ldr	r2, [sp, #8]
10016904:	9406      	str	r4, [sp, #24]
10016906:	e49d      	b.n	10016244 <_vfiprintf_r+0x534>
10016908:	4b14      	ldr	r3, [pc, #80]	@ (1001695c <_vfiprintf_r+0xc4c>)
1001690a:	9406      	str	r4, [sp, #24]
1001690c:	930d      	str	r3, [sp, #52]	@ 0x34
1001690e:	9b02      	ldr	r3, [sp, #8]
10016910:	f013 0120 	ands.w	r1, r3, #32
10016914:	d063      	beq.n	100169de <_vfiprintf_r+0xcce>
10016916:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016918:	3307      	adds	r3, #7
1001691a:	f023 0307 	bic.w	r3, r3, #7
1001691e:	4618      	mov	r0, r3
10016920:	6859      	ldr	r1, [r3, #4]
10016922:	f850 3b08 	ldr.w	r3, [r0], #8
10016926:	900a      	str	r0, [sp, #40]	@ 0x28
10016928:	9c02      	ldr	r4, [sp, #8]
1001692a:	07e6      	lsls	r6, r4, #31
1001692c:	d50a      	bpl.n	10016944 <_vfiprintf_r+0xc34>
1001692e:	ea53 0001 	orrs.w	r0, r3, r1
10016932:	d007      	beq.n	10016944 <_vfiprintf_r+0xc34>
10016934:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
10016938:	f044 0202 	orr.w	r2, r4, #2
1001693c:	9202      	str	r2, [sp, #8]
1001693e:	2230      	movs	r2, #48	@ 0x30
10016940:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
10016944:	9a02      	ldr	r2, [sp, #8]
10016946:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
1001694a:	9202      	str	r2, [sp, #8]
1001694c:	e52a      	b.n	100163a4 <_vfiprintf_r+0x694>
1001694e:	4b04      	ldr	r3, [pc, #16]	@ (10016960 <_vfiprintf_r+0xc50>)
10016950:	9406      	str	r4, [sp, #24]
10016952:	930d      	str	r3, [sp, #52]	@ 0x34
10016954:	e7db      	b.n	1001690e <_vfiprintf_r+0xbfe>
10016956:	bf00      	nop
10016958:	10019370 	.word	0x10019370
1001695c:	10019134 	.word	0x10019134
10016960:	10019120 	.word	0x10019120
10016964:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016966:	681b      	ldr	r3, [r3, #0]
10016968:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
1001696c:	2301      	movs	r3, #1
1001696e:	9304      	str	r3, [sp, #16]
10016970:	9309      	str	r3, [sp, #36]	@ 0x24
10016972:	ac2d      	add	r4, sp, #180	@ 0xb4
10016974:	e427      	b.n	100161c6 <_vfiprintf_r+0x4b6>
10016976:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
1001697a:	2a00      	cmp	r2, #0
1001697c:	f000 811f 	beq.w	10016bbe <_vfiprintf_r+0xeae>
10016980:	2101      	movs	r1, #1
10016982:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10016986:	911e      	str	r1, [sp, #120]	@ 0x78
10016988:	921d      	str	r2, [sp, #116]	@ 0x74
1001698a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001698e:	468c      	mov	ip, r1
10016990:	f7ff bb61 	b.w	10016056 <_vfiprintf_r+0x346>
10016994:	2208      	movs	r2, #8
10016996:	2100      	movs	r1, #0
10016998:	a818      	add	r0, sp, #96	@ 0x60
1001699a:	9415      	str	r4, [sp, #84]	@ 0x54
1001699c:	f7fb fb4c 	bl	10012038 <memset>
100169a0:	9b05      	ldr	r3, [sp, #20]
100169a2:	1c58      	adds	r0, r3, #1
100169a4:	f000 80ba 	beq.w	10016b1c <_vfiprintf_r+0xe0c>
100169a8:	2500      	movs	r5, #0
100169aa:	9404      	str	r4, [sp, #16]
100169ac:	4698      	mov	r8, r3
100169ae:	462c      	mov	r4, r5
100169b0:	e00c      	b.n	100169cc <_vfiprintf_r+0xcbc>
100169b2:	a92d      	add	r1, sp, #180	@ 0xb4
100169b4:	4658      	mov	r0, fp
100169b6:	f7fb fb91 	bl	100120dc <_wcrtomb_r>
100169ba:	1c41      	adds	r1, r0, #1
100169bc:	4420      	add	r0, r4
100169be:	f000 813f 	beq.w	10016c40 <_vfiprintf_r+0xf30>
100169c2:	4540      	cmp	r0, r8
100169c4:	dc08      	bgt.n	100169d8 <_vfiprintf_r+0xcc8>
100169c6:	f000 8158 	beq.w	10016c7a <_vfiprintf_r+0xf6a>
100169ca:	4604      	mov	r4, r0
100169cc:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100169ce:	5952      	ldr	r2, [r2, r5]
100169d0:	ab18      	add	r3, sp, #96	@ 0x60
100169d2:	3504      	adds	r5, #4
100169d4:	2a00      	cmp	r2, #0
100169d6:	d1ec      	bne.n	100169b2 <_vfiprintf_r+0xca2>
100169d8:	9409      	str	r4, [sp, #36]	@ 0x24
100169da:	9c04      	ldr	r4, [sp, #16]
100169dc:	e0ac      	b.n	10016b38 <_vfiprintf_r+0xe28>
100169de:	980a      	ldr	r0, [sp, #40]	@ 0x28
100169e0:	f850 3b04 	ldr.w	r3, [r0], #4
100169e4:	900a      	str	r0, [sp, #40]	@ 0x28
100169e6:	9802      	ldr	r0, [sp, #8]
100169e8:	f010 0010 	ands.w	r0, r0, #16
100169ec:	d19c      	bne.n	10016928 <_vfiprintf_r+0xc18>
100169ee:	9902      	ldr	r1, [sp, #8]
100169f0:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
100169f4:	f000 808b 	beq.w	10016b0e <_vfiprintf_r+0xdfe>
100169f8:	b29b      	uxth	r3, r3
100169fa:	4601      	mov	r1, r0
100169fc:	e794      	b.n	10016928 <_vfiprintf_r+0xc18>
100169fe:	9a02      	ldr	r2, [sp, #8]
10016a00:	f8cd 9010 	str.w	r9, [sp, #16]
10016a04:	ac46      	add	r4, sp, #280	@ 0x118
10016a06:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
10016a0a:	46a1      	mov	r9, r4
10016a0c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10016a10:	4ea5      	ldr	r6, [pc, #660]	@ (10016ca8 <_vfiprintf_r+0xf98>)
10016a12:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
10016a16:	f04f 0c00 	mov.w	ip, #0
10016a1a:	4614      	mov	r4, r2
10016a1c:	e005      	b.n	10016a2a <_vfiprintf_r+0xd1a>
10016a1e:	2b0a      	cmp	r3, #10
10016a20:	f171 0100 	sbcs.w	r1, r1, #0
10016a24:	d336      	bcc.n	10016a94 <_vfiprintf_r+0xd84>
10016a26:	4643      	mov	r3, r8
10016a28:	4629      	mov	r1, r5
10016a2a:	185a      	adds	r2, r3, r1
10016a2c:	f142 0200 	adc.w	r2, r2, #0
10016a30:	fba6 0502 	umull	r0, r5, r6, r2
10016a34:	f025 0003 	bic.w	r0, r5, #3
10016a38:	eb00 0095 	add.w	r0, r0, r5, lsr #2
10016a3c:	1a12      	subs	r2, r2, r0
10016a3e:	1a98      	subs	r0, r3, r2
10016a40:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
10016a44:	f161 0e00 	sbc.w	lr, r1, #0
10016a48:	fb05 f500 	mul.w	r5, r5, r0
10016a4c:	fb06 550e 	mla	r5, r6, lr, r5
10016a50:	fba0 8006 	umull	r8, r0, r0, r6
10016a54:	4405      	add	r5, r0
10016a56:	f008 0e01 	and.w	lr, r8, #1
10016a5a:	2005      	movs	r0, #5
10016a5c:	fbae 0e00 	umull	r0, lr, lr, r0
10016a60:	1880      	adds	r0, r0, r2
10016a62:	ea4f 0858 	mov.w	r8, r8, lsr #1
10016a66:	3030      	adds	r0, #48	@ 0x30
10016a68:	f809 0c01 	strb.w	r0, [r9, #-1]
10016a6c:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
10016a70:	f10c 0c01 	add.w	ip, ip, #1
10016a74:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10016a78:	086d      	lsrs	r5, r5, #1
10016a7a:	2c00      	cmp	r4, #0
10016a7c:	d0cf      	beq.n	10016a1e <_vfiprintf_r+0xd0e>
10016a7e:	f89b 2000 	ldrb.w	r2, [fp]
10016a82:	4562      	cmp	r2, ip
10016a84:	d1cb      	bne.n	10016a1e <_vfiprintf_r+0xd0e>
10016a86:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10016a8a:	d0c8      	beq.n	10016a1e <_vfiprintf_r+0xd0e>
10016a8c:	2b0a      	cmp	r3, #10
10016a8e:	f171 0100 	sbcs.w	r1, r1, #0
10016a92:	d272      	bcs.n	10016b7a <_vfiprintf_r+0xe6a>
10016a94:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10016a98:	464c      	mov	r4, r9
10016a9a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10016a9e:	f8dd 9010 	ldr.w	r9, [sp, #16]
10016aa2:	e5ea      	b.n	1001667a <_vfiprintf_r+0x96a>
10016aa4:	9202      	str	r2, [sp, #8]
10016aa6:	e441      	b.n	1001632c <_vfiprintf_r+0x61c>
10016aa8:	9402      	str	r4, [sp, #8]
10016aaa:	e4e6      	b.n	1001647a <_vfiprintf_r+0x76a>
10016aac:	4658      	mov	r0, fp
10016aae:	f7fc fc79 	bl	100133a4 <__sinit>
10016ab2:	f7ff b943 	b.w	10015d3c <_vfiprintf_r+0x2c>
10016ab6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
10016aba:	7862      	ldrb	r2, [r4, #1]
10016abc:	9302      	str	r3, [sp, #8]
10016abe:	3401      	adds	r4, #1
10016ac0:	f7ff b98e 	b.w	10015de0 <_vfiprintf_r+0xd0>
10016ac4:	f043 0320 	orr.w	r3, r3, #32
10016ac8:	7862      	ldrb	r2, [r4, #1]
10016aca:	9302      	str	r3, [sp, #8]
10016acc:	3401      	adds	r4, #1
10016ace:	f7ff b987 	b.w	10015de0 <_vfiprintf_r+0xd0>
10016ad2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016ad4:	9a07      	ldr	r2, [sp, #28]
10016ad6:	681b      	ldr	r3, [r3, #0]
10016ad8:	601a      	str	r2, [r3, #0]
10016ada:	e47f      	b.n	100163dc <_vfiprintf_r+0x6cc>
10016adc:	9b05      	ldr	r3, [sp, #20]
10016ade:	4c73      	ldr	r4, [pc, #460]	@ (10016cac <_vfiprintf_r+0xf9c>)
10016ae0:	2b06      	cmp	r3, #6
10016ae2:	bf28      	it	cs
10016ae4:	2306      	movcs	r3, #6
10016ae6:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
10016aea:	9304      	str	r3, [sp, #16]
10016aec:	f7ff ba89 	b.w	10016002 <_vfiprintf_r+0x2f2>
10016af0:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
10016af4:	f43f ac00 	beq.w	100162f8 <_vfiprintf_r+0x5e8>
10016af8:	b2db      	uxtb	r3, r3
10016afa:	4601      	mov	r1, r0
10016afc:	f7ff bbfc 	b.w	100162f8 <_vfiprintf_r+0x5e8>
10016b00:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
10016b04:	bf1c      	itt	ne
10016b06:	b2db      	uxtbne	r3, r3
10016b08:	4621      	movne	r1, r4
10016b0a:	f7ff bba8 	b.w	1001625e <_vfiprintf_r+0x54e>
10016b0e:	9902      	ldr	r1, [sp, #8]
10016b10:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
10016b14:	bf1c      	itt	ne
10016b16:	b2db      	uxtbne	r3, r3
10016b18:	4621      	movne	r1, r4
10016b1a:	e705      	b.n	10016928 <_vfiprintf_r+0xc18>
10016b1c:	ab18      	add	r3, sp, #96	@ 0x60
10016b1e:	9300      	str	r3, [sp, #0]
10016b20:	2300      	movs	r3, #0
10016b22:	4619      	mov	r1, r3
10016b24:	aa15      	add	r2, sp, #84	@ 0x54
10016b26:	4658      	mov	r0, fp
10016b28:	f7fb fbd4 	bl	100122d4 <_wcsrtombs_r>
10016b2c:	4603      	mov	r3, r0
10016b2e:	3301      	adds	r3, #1
10016b30:	9009      	str	r0, [sp, #36]	@ 0x24
10016b32:	f000 8085 	beq.w	10016c40 <_vfiprintf_r+0xf30>
10016b36:	9415      	str	r4, [sp, #84]	@ 0x54
10016b38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016b3a:	b373      	cbz	r3, 10016b9a <_vfiprintf_r+0xe8a>
10016b3c:	2b63      	cmp	r3, #99	@ 0x63
10016b3e:	dc49      	bgt.n	10016bd4 <_vfiprintf_r+0xec4>
10016b40:	2300      	movs	r3, #0
10016b42:	930b      	str	r3, [sp, #44]	@ 0x2c
10016b44:	ac2d      	add	r4, sp, #180	@ 0xb4
10016b46:	2208      	movs	r2, #8
10016b48:	2100      	movs	r1, #0
10016b4a:	a818      	add	r0, sp, #96	@ 0x60
10016b4c:	f7fb fa74 	bl	10012038 <memset>
10016b50:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10016b52:	ab18      	add	r3, sp, #96	@ 0x60
10016b54:	9300      	str	r3, [sp, #0]
10016b56:	aa15      	add	r2, sp, #84	@ 0x54
10016b58:	462b      	mov	r3, r5
10016b5a:	4621      	mov	r1, r4
10016b5c:	4658      	mov	r0, fp
10016b5e:	f7fb fbb9 	bl	100122d4 <_wcsrtombs_r>
10016b62:	4285      	cmp	r5, r0
10016b64:	f040 8098 	bne.w	10016c98 <_vfiprintf_r+0xf88>
10016b68:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10016b6a:	960a      	str	r6, [sp, #40]	@ 0x28
10016b6c:	2300      	movs	r3, #0
10016b6e:	54a3      	strb	r3, [r4, r2]
10016b70:	9305      	str	r3, [sp, #20]
10016b72:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
10016b76:	9304      	str	r3, [sp, #16]
10016b78:	e493      	b.n	100164a2 <_vfiprintf_r+0x792>
10016b7a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10016b7c:	9910      	ldr	r1, [sp, #64]	@ 0x40
10016b7e:	eba9 0903 	sub.w	r9, r9, r3
10016b82:	461a      	mov	r2, r3
10016b84:	4648      	mov	r0, r9
10016b86:	f7fc ff39 	bl	100139fc <strncpy>
10016b8a:	f89b 3001 	ldrb.w	r3, [fp, #1]
10016b8e:	b10b      	cbz	r3, 10016b94 <_vfiprintf_r+0xe84>
10016b90:	f10b 0b01 	add.w	fp, fp, #1
10016b94:	f04f 0c00 	mov.w	ip, #0
10016b98:	e745      	b.n	10016a26 <_vfiprintf_r+0xd16>
10016b9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016b9c:	960a      	str	r6, [sp, #40]	@ 0x28
10016b9e:	e9cd 3304 	strd	r3, r3, [sp, #16]
10016ba2:	930b      	str	r3, [sp, #44]	@ 0x2c
10016ba4:	e47d      	b.n	100164a2 <_vfiprintf_r+0x792>
10016ba6:	2101      	movs	r1, #1
10016ba8:	4662      	mov	r2, ip
10016baa:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016bae:	f7ff ba79 	b.w	100160a4 <_vfiprintf_r+0x394>
10016bb2:	f343 11c0 	sbfx	r1, r3, #7, #1
10016bb6:	460a      	mov	r2, r1
10016bb8:	b25b      	sxtb	r3, r3
10016bba:	f7ff bb17 	b.w	100161ec <_vfiprintf_r+0x4dc>
10016bbe:	4662      	mov	r2, ip
10016bc0:	2101      	movs	r1, #1
10016bc2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016bc6:	f7ff ba4a 	b.w	1001605e <_vfiprintf_r+0x34e>
10016bca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016bcc:	9a07      	ldr	r2, [sp, #28]
10016bce:	681b      	ldr	r3, [r3, #0]
10016bd0:	801a      	strh	r2, [r3, #0]
10016bd2:	e403      	b.n	100163dc <_vfiprintf_r+0x6cc>
10016bd4:	1c59      	adds	r1, r3, #1
10016bd6:	4658      	mov	r0, fp
10016bd8:	f7fa ff6a 	bl	10011ab0 <_malloc_r>
10016bdc:	4604      	mov	r4, r0
10016bde:	2800      	cmp	r0, #0
10016be0:	d02e      	beq.n	10016c40 <_vfiprintf_r+0xf30>
10016be2:	900b      	str	r0, [sp, #44]	@ 0x2c
10016be4:	e7af      	b.n	10016b46 <_vfiprintf_r+0xe36>
10016be6:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10016be8:	f7fb fae0 	bl	100121ac <__retarget_lock_release_recursive>
10016bec:	f7ff b9a0 	b.w	10015f30 <_vfiprintf_r+0x220>
10016bf0:	9b05      	ldr	r3, [sp, #20]
10016bf2:	9304      	str	r3, [sp, #16]
10016bf4:	9309      	str	r3, [sp, #36]	@ 0x24
10016bf6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016bf8:	960a      	str	r6, [sp, #40]	@ 0x28
10016bfa:	9305      	str	r3, [sp, #20]
10016bfc:	e451      	b.n	100164a2 <_vfiprintf_r+0x792>
10016bfe:	4620      	mov	r0, r4
10016c00:	9505      	str	r5, [sp, #20]
10016c02:	960a      	str	r6, [sp, #40]	@ 0x28
10016c04:	f7fc fcfc 	bl	10013600 <strlen>
10016c08:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10016c0c:	9009      	str	r0, [sp, #36]	@ 0x24
10016c0e:	9304      	str	r3, [sp, #16]
10016c10:	950b      	str	r5, [sp, #44]	@ 0x2c
10016c12:	e446      	b.n	100164a2 <_vfiprintf_r+0x792>
10016c14:	2300      	movs	r3, #0
10016c16:	9305      	str	r3, [sp, #20]
10016c18:	f7ff b8e3 	b.w	10015de2 <_vfiprintf_r+0xd2>
10016c1c:	4e24      	ldr	r6, [pc, #144]	@ (10016cb0 <_vfiprintf_r+0xfa0>)
10016c1e:	4686      	mov	lr, r0
10016c20:	e56b      	b.n	100166fa <_vfiprintf_r+0x9ea>
10016c22:	2330      	movs	r3, #48	@ 0x30
10016c24:	e430      	b.n	10016488 <_vfiprintf_r+0x778>
10016c26:	9903      	ldr	r1, [sp, #12]
10016c28:	aa1a      	add	r2, sp, #104	@ 0x68
10016c2a:	4658      	mov	r0, fp
10016c2c:	f7ff f828 	bl	10015c80 <__sprint_r.part.0>
10016c30:	2800      	cmp	r0, #0
10016c32:	f43f a9ab 	beq.w	10015f8c <_vfiprintf_r+0x27c>
10016c36:	f7ff b9c9 	b.w	10015fcc <_vfiprintf_r+0x2bc>
10016c3a:	4e1d      	ldr	r6, [pc, #116]	@ (10016cb0 <_vfiprintf_r+0xfa0>)
10016c3c:	1c48      	adds	r0, r1, #1
10016c3e:	e5a7      	b.n	10016790 <_vfiprintf_r+0xa80>
10016c40:	9a03      	ldr	r2, [sp, #12]
10016c42:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10016c46:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016c4a:	8193      	strh	r3, [r2, #12]
10016c4c:	f7ff b9c1 	b.w	10015fd2 <_vfiprintf_r+0x2c2>
10016c50:	9b03      	ldr	r3, [sp, #12]
10016c52:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10016c54:	07d9      	lsls	r1, r3, #31
10016c56:	d407      	bmi.n	10016c68 <_vfiprintf_r+0xf58>
10016c58:	9b03      	ldr	r3, [sp, #12]
10016c5a:	899b      	ldrh	r3, [r3, #12]
10016c5c:	059a      	lsls	r2, r3, #22
10016c5e:	d403      	bmi.n	10016c68 <_vfiprintf_r+0xf58>
10016c60:	9b03      	ldr	r3, [sp, #12]
10016c62:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10016c64:	f7fb faa2 	bl	100121ac <__retarget_lock_release_recursive>
10016c68:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016c6c:	9307      	str	r3, [sp, #28]
10016c6e:	f7ff b9b8 	b.w	10015fe2 <_vfiprintf_r+0x2d2>
10016c72:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 10016cb4 <_vfiprintf_r+0xfa4>
10016c76:	4608      	mov	r0, r1
10016c78:	e460      	b.n	1001653c <_vfiprintf_r+0x82c>
10016c7a:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
10016c7e:	9309      	str	r3, [sp, #36]	@ 0x24
10016c80:	e75a      	b.n	10016b38 <_vfiprintf_r+0xe28>
10016c82:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016c84:	7862      	ldrb	r2, [r4, #1]
10016c86:	460c      	mov	r4, r1
10016c88:	f853 1b04 	ldr.w	r1, [r3], #4
10016c8c:	930a      	str	r3, [sp, #40]	@ 0x28
10016c8e:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10016c92:	9105      	str	r1, [sp, #20]
10016c94:	f7ff b8a4 	b.w	10015de0 <_vfiprintf_r+0xd0>
10016c98:	9a03      	ldr	r2, [sp, #12]
10016c9a:	8993      	ldrh	r3, [r2, #12]
10016c9c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016ca0:	8193      	strh	r3, [r2, #12]
10016ca2:	f7ff b98d 	b.w	10015fc0 <_vfiprintf_r+0x2b0>
10016ca6:	bf00      	nop
10016ca8:	cccccccd 	.word	0xcccccccd
10016cac:	10019148 	.word	0x10019148
10016cb0:	10019370 	.word	0x10019370
10016cb4:	10019360 	.word	0x10019360

10016cb8 <__sbprintf>:
10016cb8:	b5f0      	push	{r4, r5, r6, r7, lr}
10016cba:	461f      	mov	r7, r3
10016cbc:	898b      	ldrh	r3, [r1, #12]
10016cbe:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10016cc2:	f023 0302 	bic.w	r3, r3, #2
10016cc6:	f8ad 300c 	strh.w	r3, [sp, #12]
10016cca:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10016ccc:	9319      	str	r3, [sp, #100]	@ 0x64
10016cce:	89cb      	ldrh	r3, [r1, #14]
10016cd0:	f8ad 300e 	strh.w	r3, [sp, #14]
10016cd4:	69cb      	ldr	r3, [r1, #28]
10016cd6:	9307      	str	r3, [sp, #28]
10016cd8:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10016cda:	9309      	str	r3, [sp, #36]	@ 0x24
10016cdc:	ab1a      	add	r3, sp, #104	@ 0x68
10016cde:	9300      	str	r3, [sp, #0]
10016ce0:	9304      	str	r3, [sp, #16]
10016ce2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10016ce6:	4615      	mov	r5, r2
10016ce8:	4606      	mov	r6, r0
10016cea:	9302      	str	r3, [sp, #8]
10016cec:	9305      	str	r3, [sp, #20]
10016cee:	a816      	add	r0, sp, #88	@ 0x58
10016cf0:	2300      	movs	r3, #0
10016cf2:	460c      	mov	r4, r1
10016cf4:	9306      	str	r3, [sp, #24]
10016cf6:	f7fb fa53 	bl	100121a0 <__retarget_lock_init_recursive>
10016cfa:	462a      	mov	r2, r5
10016cfc:	463b      	mov	r3, r7
10016cfe:	4669      	mov	r1, sp
10016d00:	4630      	mov	r0, r6
10016d02:	f7ff f805 	bl	10015d10 <_vfiprintf_r>
10016d06:	1e05      	subs	r5, r0, #0
10016d08:	db07      	blt.n	10016d1a <__sbprintf+0x62>
10016d0a:	4669      	mov	r1, sp
10016d0c:	4630      	mov	r0, r6
10016d0e:	f000 ff65 	bl	10017bdc <_fflush_r>
10016d12:	2800      	cmp	r0, #0
10016d14:	bf18      	it	ne
10016d16:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10016d1a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10016d1e:	065b      	lsls	r3, r3, #25
10016d20:	d503      	bpl.n	10016d2a <__sbprintf+0x72>
10016d22:	89a3      	ldrh	r3, [r4, #12]
10016d24:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016d28:	81a3      	strh	r3, [r4, #12]
10016d2a:	9816      	ldr	r0, [sp, #88]	@ 0x58
10016d2c:	f7fb fa3a 	bl	100121a4 <__retarget_lock_close_recursive>
10016d30:	4628      	mov	r0, r5
10016d32:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10016d36:	bdf0      	pop	{r4, r5, r6, r7, pc}

10016d38 <__register_exitproc>:
10016d38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10016d3c:	4d1b      	ldr	r5, [pc, #108]	@ (10016dac <__register_exitproc+0x74>)
10016d3e:	4606      	mov	r6, r0
10016d40:	6828      	ldr	r0, [r5, #0]
10016d42:	4698      	mov	r8, r3
10016d44:	460f      	mov	r7, r1
10016d46:	4691      	mov	r9, r2
10016d48:	f7fb fa2e 	bl	100121a8 <__retarget_lock_acquire_recursive>
10016d4c:	4b18      	ldr	r3, [pc, #96]	@ (10016db0 <__register_exitproc+0x78>)
10016d4e:	681c      	ldr	r4, [r3, #0]
10016d50:	b31c      	cbz	r4, 10016d9a <__register_exitproc+0x62>
10016d52:	6828      	ldr	r0, [r5, #0]
10016d54:	6865      	ldr	r5, [r4, #4]
10016d56:	2d1f      	cmp	r5, #31
10016d58:	dc22      	bgt.n	10016da0 <__register_exitproc+0x68>
10016d5a:	b94e      	cbnz	r6, 10016d70 <__register_exitproc+0x38>
10016d5c:	1c6b      	adds	r3, r5, #1
10016d5e:	3502      	adds	r5, #2
10016d60:	6063      	str	r3, [r4, #4]
10016d62:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10016d66:	f7fb fa21 	bl	100121ac <__retarget_lock_release_recursive>
10016d6a:	2000      	movs	r0, #0
10016d6c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10016d70:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10016d74:	2301      	movs	r3, #1
10016d76:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
10016d7a:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
10016d7e:	40ab      	lsls	r3, r5
10016d80:	431a      	orrs	r2, r3
10016d82:	2e02      	cmp	r6, #2
10016d84:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
10016d88:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
10016d8c:	d1e6      	bne.n	10016d5c <__register_exitproc+0x24>
10016d8e:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
10016d92:	431a      	orrs	r2, r3
10016d94:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
10016d98:	e7e0      	b.n	10016d5c <__register_exitproc+0x24>
10016d9a:	4c06      	ldr	r4, [pc, #24]	@ (10016db4 <__register_exitproc+0x7c>)
10016d9c:	601c      	str	r4, [r3, #0]
10016d9e:	e7d8      	b.n	10016d52 <__register_exitproc+0x1a>
10016da0:	f7fb fa04 	bl	100121ac <__retarget_lock_release_recursive>
10016da4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10016da8:	e7e0      	b.n	10016d6c <__register_exitproc+0x34>
10016daa:	bf00      	nop
10016dac:	20000448 	.word	0x20000448
10016db0:	20001460 	.word	0x20001460
10016db4:	200015ac 	.word	0x200015ac

10016db8 <__ascii_mbtowc>:
10016db8:	b082      	sub	sp, #8
10016dba:	b149      	cbz	r1, 10016dd0 <__ascii_mbtowc+0x18>
10016dbc:	b15a      	cbz	r2, 10016dd6 <__ascii_mbtowc+0x1e>
10016dbe:	b16b      	cbz	r3, 10016ddc <__ascii_mbtowc+0x24>
10016dc0:	7813      	ldrb	r3, [r2, #0]
10016dc2:	600b      	str	r3, [r1, #0]
10016dc4:	7812      	ldrb	r2, [r2, #0]
10016dc6:	1e10      	subs	r0, r2, #0
10016dc8:	bf18      	it	ne
10016dca:	2001      	movne	r0, #1
10016dcc:	b002      	add	sp, #8
10016dce:	4770      	bx	lr
10016dd0:	a901      	add	r1, sp, #4
10016dd2:	2a00      	cmp	r2, #0
10016dd4:	d1f3      	bne.n	10016dbe <__ascii_mbtowc+0x6>
10016dd6:	4610      	mov	r0, r2
10016dd8:	b002      	add	sp, #8
10016dda:	4770      	bx	lr
10016ddc:	f06f 0001 	mvn.w	r0, #1
10016de0:	e7f4      	b.n	10016dcc <__ascii_mbtowc+0x14>
10016de2:	bf00      	nop

10016de4 <memmove>:
10016de4:	4288      	cmp	r0, r1
10016de6:	d90e      	bls.n	10016e06 <memmove+0x22>
10016de8:	188b      	adds	r3, r1, r2
10016dea:	4283      	cmp	r3, r0
10016dec:	d90b      	bls.n	10016e06 <memmove+0x22>
10016dee:	eb00 0c02 	add.w	ip, r0, r2
10016df2:	2a00      	cmp	r2, #0
10016df4:	d06e      	beq.n	10016ed4 <memmove+0xf0>
10016df6:	4662      	mov	r2, ip
10016df8:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
10016dfc:	f802 cd01 	strb.w	ip, [r2, #-1]!
10016e00:	4299      	cmp	r1, r3
10016e02:	d1f9      	bne.n	10016df8 <memmove+0x14>
10016e04:	4770      	bx	lr
10016e06:	2a0f      	cmp	r2, #15
10016e08:	d80f      	bhi.n	10016e2a <memmove+0x46>
10016e0a:	4603      	mov	r3, r0
10016e0c:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10016e10:	2a00      	cmp	r2, #0
10016e12:	d05f      	beq.n	10016ed4 <memmove+0xf0>
10016e14:	f10c 0c01 	add.w	ip, ip, #1
10016e18:	3b01      	subs	r3, #1
10016e1a:	448c      	add	ip, r1
10016e1c:	f811 2b01 	ldrb.w	r2, [r1], #1
10016e20:	f803 2f01 	strb.w	r2, [r3, #1]!
10016e24:	4561      	cmp	r1, ip
10016e26:	d1f9      	bne.n	10016e1c <memmove+0x38>
10016e28:	4770      	bx	lr
10016e2a:	ea40 0301 	orr.w	r3, r0, r1
10016e2e:	079b      	lsls	r3, r3, #30
10016e30:	d151      	bne.n	10016ed6 <memmove+0xf2>
10016e32:	f1a2 0310 	sub.w	r3, r2, #16
10016e36:	b570      	push	{r4, r5, r6, lr}
10016e38:	f101 0c20 	add.w	ip, r1, #32
10016e3c:	f023 050f 	bic.w	r5, r3, #15
10016e40:	f101 0e10 	add.w	lr, r1, #16
10016e44:	f100 0410 	add.w	r4, r0, #16
10016e48:	44ac      	add	ip, r5
10016e4a:	091b      	lsrs	r3, r3, #4
10016e4c:	f85e 5c10 	ldr.w	r5, [lr, #-16]
10016e50:	f844 5c10 	str.w	r5, [r4, #-16]
10016e54:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
10016e58:	f844 5c0c 	str.w	r5, [r4, #-12]
10016e5c:	f85e 5c08 	ldr.w	r5, [lr, #-8]
10016e60:	f844 5c08 	str.w	r5, [r4, #-8]
10016e64:	f85e 5c04 	ldr.w	r5, [lr, #-4]
10016e68:	f844 5c04 	str.w	r5, [r4, #-4]
10016e6c:	f10e 0e10 	add.w	lr, lr, #16
10016e70:	45e6      	cmp	lr, ip
10016e72:	f104 0410 	add.w	r4, r4, #16
10016e76:	d1e9      	bne.n	10016e4c <memmove+0x68>
10016e78:	3301      	adds	r3, #1
10016e7a:	f012 0f0c 	tst.w	r2, #12
10016e7e:	eb01 1103 	add.w	r1, r1, r3, lsl #4
10016e82:	f002 040f 	and.w	r4, r2, #15
10016e86:	eb00 1303 	add.w	r3, r0, r3, lsl #4
10016e8a:	d028      	beq.n	10016ede <memmove+0xfa>
10016e8c:	3c04      	subs	r4, #4
10016e8e:	f024 0603 	bic.w	r6, r4, #3
10016e92:	ea4f 0c94 	mov.w	ip, r4, lsr #2
10016e96:	441e      	add	r6, r3
10016e98:	1f1c      	subs	r4, r3, #4
10016e9a:	468e      	mov	lr, r1
10016e9c:	f85e 5b04 	ldr.w	r5, [lr], #4
10016ea0:	f844 5f04 	str.w	r5, [r4, #4]!
10016ea4:	42b4      	cmp	r4, r6
10016ea6:	d1f9      	bne.n	10016e9c <memmove+0xb8>
10016ea8:	f10c 0401 	add.w	r4, ip, #1
10016eac:	f002 0203 	and.w	r2, r2, #3
10016eb0:	eb03 0384 	add.w	r3, r3, r4, lsl #2
10016eb4:	eb01 0184 	add.w	r1, r1, r4, lsl #2
10016eb8:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10016ebc:	b14a      	cbz	r2, 10016ed2 <memmove+0xee>
10016ebe:	f10c 0c01 	add.w	ip, ip, #1
10016ec2:	3b01      	subs	r3, #1
10016ec4:	448c      	add	ip, r1
10016ec6:	f811 2b01 	ldrb.w	r2, [r1], #1
10016eca:	f803 2f01 	strb.w	r2, [r3, #1]!
10016ece:	4561      	cmp	r1, ip
10016ed0:	d1f9      	bne.n	10016ec6 <memmove+0xe2>
10016ed2:	bd70      	pop	{r4, r5, r6, pc}
10016ed4:	4770      	bx	lr
10016ed6:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10016eda:	4603      	mov	r3, r0
10016edc:	e79a      	b.n	10016e14 <memmove+0x30>
10016ede:	4622      	mov	r2, r4
10016ee0:	e7ea      	b.n	10016eb8 <memmove+0xd4>
10016ee2:	bf00      	nop

10016ee4 <__assert_func>:
10016ee4:	b500      	push	{lr}
10016ee6:	4c0b      	ldr	r4, [pc, #44]	@ (10016f14 <__assert_func+0x30>)
10016ee8:	6825      	ldr	r5, [r4, #0]
10016eea:	4614      	mov	r4, r2
10016eec:	68ee      	ldr	r6, [r5, #12]
10016eee:	461a      	mov	r2, r3
10016ef0:	b085      	sub	sp, #20
10016ef2:	4603      	mov	r3, r0
10016ef4:	460d      	mov	r5, r1
10016ef6:	b14c      	cbz	r4, 10016f0c <__assert_func+0x28>
10016ef8:	4907      	ldr	r1, [pc, #28]	@ (10016f18 <__assert_func+0x34>)
10016efa:	9500      	str	r5, [sp, #0]
10016efc:	e9cd 1401 	strd	r1, r4, [sp, #4]
10016f00:	4630      	mov	r0, r6
10016f02:	4906      	ldr	r1, [pc, #24]	@ (10016f1c <__assert_func+0x38>)
10016f04:	f001 f88a 	bl	1001801c <fiprintf>
10016f08:	f001 f960 	bl	100181cc <abort>
10016f0c:	4904      	ldr	r1, [pc, #16]	@ (10016f20 <__assert_func+0x3c>)
10016f0e:	460c      	mov	r4, r1
10016f10:	e7f3      	b.n	10016efa <__assert_func+0x16>
10016f12:	bf00      	nop
10016f14:	200005b8 	.word	0x200005b8
10016f18:	10019380 	.word	0x10019380
10016f1c:	10019390 	.word	0x10019390
10016f20:	10018f54 	.word	0x10018f54

10016f24 <_fclose_r>:
10016f24:	b570      	push	{r4, r5, r6, lr}
10016f26:	2900      	cmp	r1, #0
10016f28:	d03f      	beq.n	10016faa <_fclose_r+0x86>
10016f2a:	4605      	mov	r5, r0
10016f2c:	460c      	mov	r4, r1
10016f2e:	b110      	cbz	r0, 10016f36 <_fclose_r+0x12>
10016f30:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10016f32:	2b00      	cmp	r3, #0
10016f34:	d03c      	beq.n	10016fb0 <_fclose_r+0x8c>
10016f36:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10016f38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10016f3c:	07de      	lsls	r6, r3, #31
10016f3e:	d432      	bmi.n	10016fa6 <_fclose_r+0x82>
10016f40:	0590      	lsls	r0, r2, #22
10016f42:	d538      	bpl.n	10016fb6 <_fclose_r+0x92>
10016f44:	4621      	mov	r1, r4
10016f46:	4628      	mov	r0, r5
10016f48:	f000 fdac 	bl	10017aa4 <__sflush_r>
10016f4c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
10016f4e:	4606      	mov	r6, r0
10016f50:	b133      	cbz	r3, 10016f60 <_fclose_r+0x3c>
10016f52:	69e1      	ldr	r1, [r4, #28]
10016f54:	4628      	mov	r0, r5
10016f56:	4798      	blx	r3
10016f58:	2800      	cmp	r0, #0
10016f5a:	bfb8      	it	lt
10016f5c:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
10016f60:	89a3      	ldrh	r3, [r4, #12]
10016f62:	061a      	lsls	r2, r3, #24
10016f64:	d439      	bmi.n	10016fda <_fclose_r+0xb6>
10016f66:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10016f68:	b141      	cbz	r1, 10016f7c <_fclose_r+0x58>
10016f6a:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10016f6e:	4299      	cmp	r1, r3
10016f70:	d002      	beq.n	10016f78 <_fclose_r+0x54>
10016f72:	4628      	mov	r0, r5
10016f74:	f7fc fc44 	bl	10013800 <_free_r>
10016f78:	2300      	movs	r3, #0
10016f7a:	6323      	str	r3, [r4, #48]	@ 0x30
10016f7c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
10016f7e:	b121      	cbz	r1, 10016f8a <_fclose_r+0x66>
10016f80:	4628      	mov	r0, r5
10016f82:	f7fc fc3d 	bl	10013800 <_free_r>
10016f86:	2300      	movs	r3, #0
10016f88:	6463      	str	r3, [r4, #68]	@ 0x44
10016f8a:	f7fc fa29 	bl	100133e0 <__sfp_lock_acquire>
10016f8e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10016f90:	2200      	movs	r2, #0
10016f92:	07db      	lsls	r3, r3, #31
10016f94:	81a2      	strh	r2, [r4, #12]
10016f96:	d51c      	bpl.n	10016fd2 <_fclose_r+0xae>
10016f98:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016f9a:	f7fb f903 	bl	100121a4 <__retarget_lock_close_recursive>
10016f9e:	f7fc fa25 	bl	100133ec <__sfp_lock_release>
10016fa2:	4630      	mov	r0, r6
10016fa4:	bd70      	pop	{r4, r5, r6, pc}
10016fa6:	2a00      	cmp	r2, #0
10016fa8:	d1cc      	bne.n	10016f44 <_fclose_r+0x20>
10016faa:	2600      	movs	r6, #0
10016fac:	4630      	mov	r0, r6
10016fae:	bd70      	pop	{r4, r5, r6, pc}
10016fb0:	f7fc f9f8 	bl	100133a4 <__sinit>
10016fb4:	e7bf      	b.n	10016f36 <_fclose_r+0x12>
10016fb6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016fb8:	f7fb f8f6 	bl	100121a8 <__retarget_lock_acquire_recursive>
10016fbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016fc0:	2b00      	cmp	r3, #0
10016fc2:	d1bf      	bne.n	10016f44 <_fclose_r+0x20>
10016fc4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10016fc6:	07d9      	lsls	r1, r3, #31
10016fc8:	d4ef      	bmi.n	10016faa <_fclose_r+0x86>
10016fca:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016fcc:	f7fb f8ee 	bl	100121ac <__retarget_lock_release_recursive>
10016fd0:	e7eb      	b.n	10016faa <_fclose_r+0x86>
10016fd2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016fd4:	f7fb f8ea 	bl	100121ac <__retarget_lock_release_recursive>
10016fd8:	e7de      	b.n	10016f98 <_fclose_r+0x74>
10016fda:	6921      	ldr	r1, [r4, #16]
10016fdc:	4628      	mov	r0, r5
10016fde:	f7fc fc0f 	bl	10013800 <_free_r>
10016fe2:	e7c0      	b.n	10016f66 <_fclose_r+0x42>

10016fe4 <__swsetup_r>:
10016fe4:	b538      	push	{r3, r4, r5, lr}
10016fe6:	4b2e      	ldr	r3, [pc, #184]	@ (100170a0 <__swsetup_r+0xbc>)
10016fe8:	681b      	ldr	r3, [r3, #0]
10016fea:	4605      	mov	r5, r0
10016fec:	460c      	mov	r4, r1
10016fee:	b113      	cbz	r3, 10016ff6 <__swsetup_r+0x12>
10016ff0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
10016ff2:	2a00      	cmp	r2, #0
10016ff4:	d04b      	beq.n	1001708e <__swsetup_r+0xaa>
10016ff6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016ffa:	0718      	lsls	r0, r3, #28
10016ffc:	d51c      	bpl.n	10017038 <__swsetup_r+0x54>
10016ffe:	6922      	ldr	r2, [r4, #16]
10017000:	b322      	cbz	r2, 1001704c <__swsetup_r+0x68>
10017002:	f013 0101 	ands.w	r1, r3, #1
10017006:	d007      	beq.n	10017018 <__swsetup_r+0x34>
10017008:	6961      	ldr	r1, [r4, #20]
1001700a:	2000      	movs	r0, #0
1001700c:	4249      	negs	r1, r1
1001700e:	60a0      	str	r0, [r4, #8]
10017010:	61a1      	str	r1, [r4, #24]
10017012:	b13a      	cbz	r2, 10017024 <__swsetup_r+0x40>
10017014:	2000      	movs	r0, #0
10017016:	bd38      	pop	{r3, r4, r5, pc}
10017018:	0798      	lsls	r0, r3, #30
1001701a:	bf58      	it	pl
1001701c:	6961      	ldrpl	r1, [r4, #20]
1001701e:	60a1      	str	r1, [r4, #8]
10017020:	2a00      	cmp	r2, #0
10017022:	d1f7      	bne.n	10017014 <__swsetup_r+0x30>
10017024:	0619      	lsls	r1, r3, #24
10017026:	bf58      	it	pl
10017028:	4610      	movpl	r0, r2
1001702a:	d5f4      	bpl.n	10017016 <__swsetup_r+0x32>
1001702c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017030:	81a3      	strh	r3, [r4, #12]
10017032:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017036:	bd38      	pop	{r3, r4, r5, pc}
10017038:	06d9      	lsls	r1, r3, #27
1001703a:	d52c      	bpl.n	10017096 <__swsetup_r+0xb2>
1001703c:	075a      	lsls	r2, r3, #29
1001703e:	d412      	bmi.n	10017066 <__swsetup_r+0x82>
10017040:	6922      	ldr	r2, [r4, #16]
10017042:	f043 0308 	orr.w	r3, r3, #8
10017046:	81a3      	strh	r3, [r4, #12]
10017048:	2a00      	cmp	r2, #0
1001704a:	d1da      	bne.n	10017002 <__swsetup_r+0x1e>
1001704c:	f403 7120 	and.w	r1, r3, #640	@ 0x280
10017050:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10017054:	d0d5      	beq.n	10017002 <__swsetup_r+0x1e>
10017056:	4621      	mov	r1, r4
10017058:	4628      	mov	r0, r5
1001705a:	f000 f823 	bl	100170a4 <__smakebuf_r>
1001705e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017062:	6922      	ldr	r2, [r4, #16]
10017064:	e7cd      	b.n	10017002 <__swsetup_r+0x1e>
10017066:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10017068:	b151      	cbz	r1, 10017080 <__swsetup_r+0x9c>
1001706a:	f104 0240 	add.w	r2, r4, #64	@ 0x40
1001706e:	4291      	cmp	r1, r2
10017070:	d004      	beq.n	1001707c <__swsetup_r+0x98>
10017072:	4628      	mov	r0, r5
10017074:	f7fc fbc4 	bl	10013800 <_free_r>
10017078:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001707c:	2200      	movs	r2, #0
1001707e:	6322      	str	r2, [r4, #48]	@ 0x30
10017080:	6922      	ldr	r2, [r4, #16]
10017082:	2100      	movs	r1, #0
10017084:	e9c4 2100 	strd	r2, r1, [r4]
10017088:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
1001708c:	e7d9      	b.n	10017042 <__swsetup_r+0x5e>
1001708e:	4618      	mov	r0, r3
10017090:	f7fc f988 	bl	100133a4 <__sinit>
10017094:	e7af      	b.n	10016ff6 <__swsetup_r+0x12>
10017096:	2209      	movs	r2, #9
10017098:	602a      	str	r2, [r5, #0]
1001709a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001709e:	e7c7      	b.n	10017030 <__swsetup_r+0x4c>
100170a0:	200005b8 	.word	0x200005b8

100170a4 <__smakebuf_r>:
100170a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100170a8:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
100170ac:	460c      	mov	r4, r1
100170ae:	0799      	lsls	r1, r3, #30
100170b0:	b096      	sub	sp, #88	@ 0x58
100170b2:	d508      	bpl.n	100170c6 <__smakebuf_r+0x22>
100170b4:	f104 0343 	add.w	r3, r4, #67	@ 0x43
100170b8:	2201      	movs	r2, #1
100170ba:	e9c4 3204 	strd	r3, r2, [r4, #16]
100170be:	6023      	str	r3, [r4, #0]
100170c0:	b016      	add	sp, #88	@ 0x58
100170c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
100170c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
100170ca:	2900      	cmp	r1, #0
100170cc:	4606      	mov	r6, r0
100170ce:	db26      	blt.n	1001711e <__smakebuf_r+0x7a>
100170d0:	466a      	mov	r2, sp
100170d2:	f000 ff4f 	bl	10017f74 <_fstat_r>
100170d6:	2800      	cmp	r0, #0
100170d8:	db1f      	blt.n	1001711a <__smakebuf_r+0x76>
100170da:	9d01      	ldr	r5, [sp, #4]
100170dc:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
100170e0:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
100170e4:	fab5 f585 	clz	r5, r5
100170e8:	f44f 6880 	mov.w	r8, #1024	@ 0x400
100170ec:	096d      	lsrs	r5, r5, #5
100170ee:	f44f 6700 	mov.w	r7, #2048	@ 0x800
100170f2:	4641      	mov	r1, r8
100170f4:	4630      	mov	r0, r6
100170f6:	f7fa fcdb 	bl	10011ab0 <_malloc_r>
100170fa:	b1e8      	cbz	r0, 10017138 <__smakebuf_r+0x94>
100170fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017100:	f8c4 8014 	str.w	r8, [r4, #20]
10017104:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10017108:	6020      	str	r0, [r4, #0]
1001710a:	6120      	str	r0, [r4, #16]
1001710c:	81a3      	strh	r3, [r4, #12]
1001710e:	bb3d      	cbnz	r5, 10017160 <__smakebuf_r+0xbc>
10017110:	433b      	orrs	r3, r7
10017112:	81a3      	strh	r3, [r4, #12]
10017114:	b016      	add	sp, #88	@ 0x58
10017116:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001711a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001711e:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
10017122:	d019      	beq.n	10017158 <__smakebuf_r+0xb4>
10017124:	f04f 0840 	mov.w	r8, #64	@ 0x40
10017128:	2500      	movs	r5, #0
1001712a:	4641      	mov	r1, r8
1001712c:	4630      	mov	r0, r6
1001712e:	462f      	mov	r7, r5
10017130:	f7fa fcbe 	bl	10011ab0 <_malloc_r>
10017134:	2800      	cmp	r0, #0
10017136:	d1e1      	bne.n	100170fc <__smakebuf_r+0x58>
10017138:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001713c:	059a      	lsls	r2, r3, #22
1001713e:	d4bf      	bmi.n	100170c0 <__smakebuf_r+0x1c>
10017140:	f023 0303 	bic.w	r3, r3, #3
10017144:	f104 0243 	add.w	r2, r4, #67	@ 0x43
10017148:	f043 0302 	orr.w	r3, r3, #2
1001714c:	2101      	movs	r1, #1
1001714e:	e9c4 2104 	strd	r2, r1, [r4, #16]
10017152:	81a3      	strh	r3, [r4, #12]
10017154:	6022      	str	r2, [r4, #0]
10017156:	e7b3      	b.n	100170c0 <__smakebuf_r+0x1c>
10017158:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001715c:	462f      	mov	r7, r5
1001715e:	e7c8      	b.n	100170f2 <__smakebuf_r+0x4e>
10017160:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10017164:	4630      	mov	r0, r6
10017166:	f000 ff1b 	bl	10017fa0 <_isatty_r>
1001716a:	b910      	cbnz	r0, 10017172 <__smakebuf_r+0xce>
1001716c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017170:	e7ce      	b.n	10017110 <__smakebuf_r+0x6c>
10017172:	89a3      	ldrh	r3, [r4, #12]
10017174:	f023 0303 	bic.w	r3, r3, #3
10017178:	f043 0301 	orr.w	r3, r3, #1
1001717c:	b21b      	sxth	r3, r3
1001717e:	e7c7      	b.n	10017110 <__smakebuf_r+0x6c>

10017180 <_Balloc>:
10017180:	6c43      	ldr	r3, [r0, #68]	@ 0x44
10017182:	b570      	push	{r4, r5, r6, lr}
10017184:	4605      	mov	r5, r0
10017186:	460c      	mov	r4, r1
10017188:	b14b      	cbz	r3, 1001719e <_Balloc+0x1e>
1001718a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1001718e:	b180      	cbz	r0, 100171b2 <_Balloc+0x32>
10017190:	6802      	ldr	r2, [r0, #0]
10017192:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
10017196:	2300      	movs	r3, #0
10017198:	60c3      	str	r3, [r0, #12]
1001719a:	6103      	str	r3, [r0, #16]
1001719c:	bd70      	pop	{r4, r5, r6, pc}
1001719e:	2221      	movs	r2, #33	@ 0x21
100171a0:	2104      	movs	r1, #4
100171a2:	f000 fba7 	bl	100178f4 <_calloc_r>
100171a6:	4603      	mov	r3, r0
100171a8:	6468      	str	r0, [r5, #68]	@ 0x44
100171aa:	2800      	cmp	r0, #0
100171ac:	d1ed      	bne.n	1001718a <_Balloc+0xa>
100171ae:	2000      	movs	r0, #0
100171b0:	bd70      	pop	{r4, r5, r6, pc}
100171b2:	2101      	movs	r1, #1
100171b4:	fa01 f604 	lsl.w	r6, r1, r4
100171b8:	1d72      	adds	r2, r6, #5
100171ba:	0092      	lsls	r2, r2, #2
100171bc:	4628      	mov	r0, r5
100171be:	f000 fb99 	bl	100178f4 <_calloc_r>
100171c2:	2800      	cmp	r0, #0
100171c4:	d0f3      	beq.n	100171ae <_Balloc+0x2e>
100171c6:	e9c0 4601 	strd	r4, r6, [r0, #4]
100171ca:	e7e4      	b.n	10017196 <_Balloc+0x16>

100171cc <_Bfree>:
100171cc:	b131      	cbz	r1, 100171dc <_Bfree+0x10>
100171ce:	6c43      	ldr	r3, [r0, #68]	@ 0x44
100171d0:	684a      	ldr	r2, [r1, #4]
100171d2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
100171d6:	6008      	str	r0, [r1, #0]
100171d8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
100171dc:	4770      	bx	lr
100171de:	bf00      	nop

100171e0 <__multadd>:
100171e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100171e4:	690d      	ldr	r5, [r1, #16]
100171e6:	4607      	mov	r7, r0
100171e8:	460e      	mov	r6, r1
100171ea:	461c      	mov	r4, r3
100171ec:	f101 0e14 	add.w	lr, r1, #20
100171f0:	2000      	movs	r0, #0
100171f2:	f8de 1000 	ldr.w	r1, [lr]
100171f6:	b28b      	uxth	r3, r1
100171f8:	fb02 4303 	mla	r3, r2, r3, r4
100171fc:	ea4f 4c13 	mov.w	ip, r3, lsr #16
10017200:	0c09      	lsrs	r1, r1, #16
10017202:	fb02 cc01 	mla	ip, r2, r1, ip
10017206:	3001      	adds	r0, #1
10017208:	b29b      	uxth	r3, r3
1001720a:	eb03 430c 	add.w	r3, r3, ip, lsl #16
1001720e:	4285      	cmp	r5, r0
10017210:	f84e 3b04 	str.w	r3, [lr], #4
10017214:	ea4f 441c 	mov.w	r4, ip, lsr #16
10017218:	dceb      	bgt.n	100171f2 <__multadd+0x12>
1001721a:	b13c      	cbz	r4, 1001722c <__multadd+0x4c>
1001721c:	68b3      	ldr	r3, [r6, #8]
1001721e:	42ab      	cmp	r3, r5
10017220:	dd07      	ble.n	10017232 <__multadd+0x52>
10017222:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10017226:	3501      	adds	r5, #1
10017228:	615c      	str	r4, [r3, #20]
1001722a:	6135      	str	r5, [r6, #16]
1001722c:	4630      	mov	r0, r6
1001722e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10017232:	6871      	ldr	r1, [r6, #4]
10017234:	4638      	mov	r0, r7
10017236:	3101      	adds	r1, #1
10017238:	f7ff ffa2 	bl	10017180 <_Balloc>
1001723c:	4680      	mov	r8, r0
1001723e:	b1a8      	cbz	r0, 1001726c <__multadd+0x8c>
10017240:	6932      	ldr	r2, [r6, #16]
10017242:	3202      	adds	r2, #2
10017244:	f106 010c 	add.w	r1, r6, #12
10017248:	0092      	lsls	r2, r2, #2
1001724a:	300c      	adds	r0, #12
1001724c:	f7fc f928 	bl	100134a0 <memcpy>
10017250:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10017252:	6872      	ldr	r2, [r6, #4]
10017254:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10017258:	6031      	str	r1, [r6, #0]
1001725a:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
1001725e:	4646      	mov	r6, r8
10017260:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10017264:	3501      	adds	r5, #1
10017266:	615c      	str	r4, [r3, #20]
10017268:	6135      	str	r5, [r6, #16]
1001726a:	e7df      	b.n	1001722c <__multadd+0x4c>
1001726c:	4b02      	ldr	r3, [pc, #8]	@ (10017278 <__multadd+0x98>)
1001726e:	4803      	ldr	r0, [pc, #12]	@ (1001727c <__multadd+0x9c>)
10017270:	4642      	mov	r2, r8
10017272:	21ba      	movs	r1, #186	@ 0xba
10017274:	f7ff fe36 	bl	10016ee4 <__assert_func>
10017278:	100191cc 	.word	0x100191cc
1001727c:	100193c0 	.word	0x100193c0

10017280 <__hi0bits>:
10017280:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
10017284:	4603      	mov	r3, r0
10017286:	bf36      	itet	cc
10017288:	0403      	lslcc	r3, r0, #16
1001728a:	2000      	movcs	r0, #0
1001728c:	2010      	movcc	r0, #16
1001728e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
10017292:	bf3c      	itt	cc
10017294:	021b      	lslcc	r3, r3, #8
10017296:	3008      	addcc	r0, #8
10017298:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
1001729c:	bf3c      	itt	cc
1001729e:	011b      	lslcc	r3, r3, #4
100172a0:	3004      	addcc	r0, #4
100172a2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
100172a6:	d303      	bcc.n	100172b0 <__hi0bits+0x30>
100172a8:	2b00      	cmp	r3, #0
100172aa:	db06      	blt.n	100172ba <__hi0bits+0x3a>
100172ac:	3001      	adds	r0, #1
100172ae:	4770      	bx	lr
100172b0:	009b      	lsls	r3, r3, #2
100172b2:	d403      	bmi.n	100172bc <__hi0bits+0x3c>
100172b4:	005b      	lsls	r3, r3, #1
100172b6:	d403      	bmi.n	100172c0 <__hi0bits+0x40>
100172b8:	2020      	movs	r0, #32
100172ba:	4770      	bx	lr
100172bc:	3002      	adds	r0, #2
100172be:	4770      	bx	lr
100172c0:	3003      	adds	r0, #3
100172c2:	4770      	bx	lr

100172c4 <__lo0bits>:
100172c4:	6803      	ldr	r3, [r0, #0]
100172c6:	f013 0207 	ands.w	r2, r3, #7
100172ca:	4601      	mov	r1, r0
100172cc:	d007      	beq.n	100172de <__lo0bits+0x1a>
100172ce:	07da      	lsls	r2, r3, #31
100172d0:	d41f      	bmi.n	10017312 <__lo0bits+0x4e>
100172d2:	0798      	lsls	r0, r3, #30
100172d4:	d521      	bpl.n	1001731a <__lo0bits+0x56>
100172d6:	085b      	lsrs	r3, r3, #1
100172d8:	600b      	str	r3, [r1, #0]
100172da:	2001      	movs	r0, #1
100172dc:	4770      	bx	lr
100172de:	b298      	uxth	r0, r3
100172e0:	b1a0      	cbz	r0, 1001730c <__lo0bits+0x48>
100172e2:	4610      	mov	r0, r2
100172e4:	b2da      	uxtb	r2, r3
100172e6:	b90a      	cbnz	r2, 100172ec <__lo0bits+0x28>
100172e8:	3008      	adds	r0, #8
100172ea:	0a1b      	lsrs	r3, r3, #8
100172ec:	071a      	lsls	r2, r3, #28
100172ee:	bf04      	itt	eq
100172f0:	091b      	lsreq	r3, r3, #4
100172f2:	3004      	addeq	r0, #4
100172f4:	079a      	lsls	r2, r3, #30
100172f6:	bf04      	itt	eq
100172f8:	089b      	lsreq	r3, r3, #2
100172fa:	3002      	addeq	r0, #2
100172fc:	07da      	lsls	r2, r3, #31
100172fe:	d403      	bmi.n	10017308 <__lo0bits+0x44>
10017300:	085b      	lsrs	r3, r3, #1
10017302:	f100 0001 	add.w	r0, r0, #1
10017306:	d006      	beq.n	10017316 <__lo0bits+0x52>
10017308:	600b      	str	r3, [r1, #0]
1001730a:	4770      	bx	lr
1001730c:	0c1b      	lsrs	r3, r3, #16
1001730e:	2010      	movs	r0, #16
10017310:	e7e8      	b.n	100172e4 <__lo0bits+0x20>
10017312:	2000      	movs	r0, #0
10017314:	4770      	bx	lr
10017316:	2020      	movs	r0, #32
10017318:	4770      	bx	lr
1001731a:	089b      	lsrs	r3, r3, #2
1001731c:	600b      	str	r3, [r1, #0]
1001731e:	2002      	movs	r0, #2
10017320:	4770      	bx	lr
10017322:	bf00      	nop

10017324 <__i2b>:
10017324:	b538      	push	{r3, r4, r5, lr}
10017326:	6c43      	ldr	r3, [r0, #68]	@ 0x44
10017328:	4604      	mov	r4, r0
1001732a:	460d      	mov	r5, r1
1001732c:	b14b      	cbz	r3, 10017342 <__i2b+0x1e>
1001732e:	6858      	ldr	r0, [r3, #4]
10017330:	b1b0      	cbz	r0, 10017360 <__i2b+0x3c>
10017332:	6802      	ldr	r2, [r0, #0]
10017334:	605a      	str	r2, [r3, #4]
10017336:	2200      	movs	r2, #0
10017338:	2301      	movs	r3, #1
1001733a:	6145      	str	r5, [r0, #20]
1001733c:	60c2      	str	r2, [r0, #12]
1001733e:	6103      	str	r3, [r0, #16]
10017340:	bd38      	pop	{r3, r4, r5, pc}
10017342:	2221      	movs	r2, #33	@ 0x21
10017344:	2104      	movs	r1, #4
10017346:	f000 fad5 	bl	100178f4 <_calloc_r>
1001734a:	4603      	mov	r3, r0
1001734c:	6460      	str	r0, [r4, #68]	@ 0x44
1001734e:	2800      	cmp	r0, #0
10017350:	d1ed      	bne.n	1001732e <__i2b+0xa>
10017352:	4b09      	ldr	r3, [pc, #36]	@ (10017378 <__i2b+0x54>)
10017354:	4809      	ldr	r0, [pc, #36]	@ (1001737c <__i2b+0x58>)
10017356:	2200      	movs	r2, #0
10017358:	f240 1145 	movw	r1, #325	@ 0x145
1001735c:	f7ff fdc2 	bl	10016ee4 <__assert_func>
10017360:	221c      	movs	r2, #28
10017362:	2101      	movs	r1, #1
10017364:	4620      	mov	r0, r4
10017366:	f000 fac5 	bl	100178f4 <_calloc_r>
1001736a:	2800      	cmp	r0, #0
1001736c:	d0f1      	beq.n	10017352 <__i2b+0x2e>
1001736e:	2201      	movs	r2, #1
10017370:	2302      	movs	r3, #2
10017372:	6042      	str	r2, [r0, #4]
10017374:	6083      	str	r3, [r0, #8]
10017376:	e7de      	b.n	10017336 <__i2b+0x12>
10017378:	100191cc 	.word	0x100191cc
1001737c:	100193c0 	.word	0x100193c0

10017380 <__multiply>:
10017380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017384:	f8d1 8010 	ldr.w	r8, [r1, #16]
10017388:	6915      	ldr	r5, [r2, #16]
1001738a:	45a8      	cmp	r8, r5
1001738c:	b085      	sub	sp, #20
1001738e:	460e      	mov	r6, r1
10017390:	4692      	mov	sl, r2
10017392:	db05      	blt.n	100173a0 <__multiply+0x20>
10017394:	462a      	mov	r2, r5
10017396:	4653      	mov	r3, sl
10017398:	4645      	mov	r5, r8
1001739a:	468a      	mov	sl, r1
1001739c:	4690      	mov	r8, r2
1001739e:	461e      	mov	r6, r3
100173a0:	f8da 3008 	ldr.w	r3, [sl, #8]
100173a4:	f8da 1004 	ldr.w	r1, [sl, #4]
100173a8:	eb05 0408 	add.w	r4, r5, r8
100173ac:	42a3      	cmp	r3, r4
100173ae:	bfb8      	it	lt
100173b0:	3101      	addlt	r1, #1
100173b2:	f7ff fee5 	bl	10017180 <_Balloc>
100173b6:	4684      	mov	ip, r0
100173b8:	2800      	cmp	r0, #0
100173ba:	f000 808b 	beq.w	100174d4 <__multiply+0x154>
100173be:	f100 0714 	add.w	r7, r0, #20
100173c2:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
100173c6:	4577      	cmp	r7, lr
100173c8:	d205      	bcs.n	100173d6 <__multiply+0x56>
100173ca:	463b      	mov	r3, r7
100173cc:	2200      	movs	r2, #0
100173ce:	f843 2b04 	str.w	r2, [r3], #4
100173d2:	459e      	cmp	lr, r3
100173d4:	d8fb      	bhi.n	100173ce <__multiply+0x4e>
100173d6:	3614      	adds	r6, #20
100173d8:	eb06 0888 	add.w	r8, r6, r8, lsl #2
100173dc:	f10a 0914 	add.w	r9, sl, #20
100173e0:	4546      	cmp	r6, r8
100173e2:	eb09 0585 	add.w	r5, r9, r5, lsl #2
100173e6:	d266      	bcs.n	100174b6 <__multiply+0x136>
100173e8:	eba5 030a 	sub.w	r3, r5, sl
100173ec:	3b15      	subs	r3, #21
100173ee:	f023 0303 	bic.w	r3, r3, #3
100173f2:	f10a 0a15 	add.w	sl, sl, #21
100173f6:	3304      	adds	r3, #4
100173f8:	4555      	cmp	r5, sl
100173fa:	bf2c      	ite	cs
100173fc:	469b      	movcs	fp, r3
100173fe:	f04f 0b04 	movcc.w	fp, #4
10017402:	f8cd e008 	str.w	lr, [sp, #8]
10017406:	9403      	str	r4, [sp, #12]
10017408:	46ae      	mov	lr, r5
1001740a:	46e2      	mov	sl, ip
1001740c:	e005      	b.n	1001741a <__multiply+0x9a>
1001740e:	0c09      	lsrs	r1, r1, #16
10017410:	d12a      	bne.n	10017468 <__multiply+0xe8>
10017412:	45b0      	cmp	r8, r6
10017414:	f107 0704 	add.w	r7, r7, #4
10017418:	d94a      	bls.n	100174b0 <__multiply+0x130>
1001741a:	f856 1b04 	ldr.w	r1, [r6], #4
1001741e:	b28d      	uxth	r5, r1
10017420:	2d00      	cmp	r5, #0
10017422:	d0f4      	beq.n	1001740e <__multiply+0x8e>
10017424:	46cc      	mov	ip, r9
10017426:	463c      	mov	r4, r7
10017428:	2300      	movs	r3, #0
1001742a:	9601      	str	r6, [sp, #4]
1001742c:	f85c 0b04 	ldr.w	r0, [ip], #4
10017430:	6821      	ldr	r1, [r4, #0]
10017432:	b286      	uxth	r6, r0
10017434:	b28a      	uxth	r2, r1
10017436:	0c00      	lsrs	r0, r0, #16
10017438:	fb05 2206 	mla	r2, r5, r6, r2
1001743c:	0c09      	lsrs	r1, r1, #16
1001743e:	441a      	add	r2, r3
10017440:	fb05 1100 	mla	r1, r5, r0, r1
10017444:	eb01 4112 	add.w	r1, r1, r2, lsr #16
10017448:	b292      	uxth	r2, r2
1001744a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1001744e:	45e6      	cmp	lr, ip
10017450:	f844 2b04 	str.w	r2, [r4], #4
10017454:	ea4f 4311 	mov.w	r3, r1, lsr #16
10017458:	d8e8      	bhi.n	1001742c <__multiply+0xac>
1001745a:	9e01      	ldr	r6, [sp, #4]
1001745c:	f847 300b 	str.w	r3, [r7, fp]
10017460:	f856 1c04 	ldr.w	r1, [r6, #-4]
10017464:	0c09      	lsrs	r1, r1, #16
10017466:	d0d4      	beq.n	10017412 <__multiply+0x92>
10017468:	683b      	ldr	r3, [r7, #0]
1001746a:	2200      	movs	r2, #0
1001746c:	4648      	mov	r0, r9
1001746e:	461d      	mov	r5, r3
10017470:	463c      	mov	r4, r7
10017472:	4694      	mov	ip, r2
10017474:	8802      	ldrh	r2, [r0, #0]
10017476:	fb01 c202 	mla	r2, r1, r2, ip
1001747a:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1001747e:	b29b      	uxth	r3, r3
10017480:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
10017484:	f844 3b04 	str.w	r3, [r4], #4
10017488:	f850 3b04 	ldr.w	r3, [r0], #4
1001748c:	6825      	ldr	r5, [r4, #0]
1001748e:	ea4f 4c13 	mov.w	ip, r3, lsr #16
10017492:	b2ab      	uxth	r3, r5
10017494:	fb01 330c 	mla	r3, r1, ip, r3
10017498:	eb03 4312 	add.w	r3, r3, r2, lsr #16
1001749c:	4586      	cmp	lr, r0
1001749e:	ea4f 4c13 	mov.w	ip, r3, lsr #16
100174a2:	d8e7      	bhi.n	10017474 <__multiply+0xf4>
100174a4:	45b0      	cmp	r8, r6
100174a6:	f847 300b 	str.w	r3, [r7, fp]
100174aa:	f107 0704 	add.w	r7, r7, #4
100174ae:	d8b4      	bhi.n	1001741a <__multiply+0x9a>
100174b0:	e9dd e402 	ldrd	lr, r4, [sp, #8]
100174b4:	46d4      	mov	ip, sl
100174b6:	2c00      	cmp	r4, #0
100174b8:	dc02      	bgt.n	100174c0 <__multiply+0x140>
100174ba:	e005      	b.n	100174c8 <__multiply+0x148>
100174bc:	3c01      	subs	r4, #1
100174be:	d003      	beq.n	100174c8 <__multiply+0x148>
100174c0:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
100174c4:	2b00      	cmp	r3, #0
100174c6:	d0f9      	beq.n	100174bc <__multiply+0x13c>
100174c8:	4660      	mov	r0, ip
100174ca:	f8cc 4010 	str.w	r4, [ip, #16]
100174ce:	b005      	add	sp, #20
100174d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100174d4:	4b03      	ldr	r3, [pc, #12]	@ (100174e4 <__multiply+0x164>)
100174d6:	4804      	ldr	r0, [pc, #16]	@ (100174e8 <__multiply+0x168>)
100174d8:	4662      	mov	r2, ip
100174da:	f44f 71b1 	mov.w	r1, #354	@ 0x162
100174de:	f7ff fd01 	bl	10016ee4 <__assert_func>
100174e2:	bf00      	nop
100174e4:	100191cc 	.word	0x100191cc
100174e8:	100193c0 	.word	0x100193c0

100174ec <__pow5mult>:
100174ec:	f012 0303 	ands.w	r3, r2, #3
100174f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100174f4:	4614      	mov	r4, r2
100174f6:	4607      	mov	r7, r0
100174f8:	d12c      	bne.n	10017554 <__pow5mult+0x68>
100174fa:	460d      	mov	r5, r1
100174fc:	10a4      	asrs	r4, r4, #2
100174fe:	d01c      	beq.n	1001753a <__pow5mult+0x4e>
10017500:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
10017502:	b386      	cbz	r6, 10017566 <__pow5mult+0x7a>
10017504:	07e3      	lsls	r3, r4, #31
10017506:	f04f 0800 	mov.w	r8, #0
1001750a:	d406      	bmi.n	1001751a <__pow5mult+0x2e>
1001750c:	1064      	asrs	r4, r4, #1
1001750e:	d014      	beq.n	1001753a <__pow5mult+0x4e>
10017510:	6830      	ldr	r0, [r6, #0]
10017512:	b1a8      	cbz	r0, 10017540 <__pow5mult+0x54>
10017514:	4606      	mov	r6, r0
10017516:	07e3      	lsls	r3, r4, #31
10017518:	d5f8      	bpl.n	1001750c <__pow5mult+0x20>
1001751a:	4632      	mov	r2, r6
1001751c:	4629      	mov	r1, r5
1001751e:	4638      	mov	r0, r7
10017520:	f7ff ff2e 	bl	10017380 <__multiply>
10017524:	b135      	cbz	r5, 10017534 <__pow5mult+0x48>
10017526:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10017528:	6869      	ldr	r1, [r5, #4]
1001752a:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001752e:	602a      	str	r2, [r5, #0]
10017530:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
10017534:	1064      	asrs	r4, r4, #1
10017536:	4605      	mov	r5, r0
10017538:	d1ea      	bne.n	10017510 <__pow5mult+0x24>
1001753a:	4628      	mov	r0, r5
1001753c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10017540:	4632      	mov	r2, r6
10017542:	4631      	mov	r1, r6
10017544:	4638      	mov	r0, r7
10017546:	f7ff ff1b 	bl	10017380 <__multiply>
1001754a:	6030      	str	r0, [r6, #0]
1001754c:	f8c0 8000 	str.w	r8, [r0]
10017550:	4606      	mov	r6, r0
10017552:	e7e0      	b.n	10017516 <__pow5mult+0x2a>
10017554:	3b01      	subs	r3, #1
10017556:	4a0f      	ldr	r2, [pc, #60]	@ (10017594 <__pow5mult+0xa8>)
10017558:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001755c:	2300      	movs	r3, #0
1001755e:	f7ff fe3f 	bl	100171e0 <__multadd>
10017562:	4605      	mov	r5, r0
10017564:	e7ca      	b.n	100174fc <__pow5mult+0x10>
10017566:	2101      	movs	r1, #1
10017568:	4638      	mov	r0, r7
1001756a:	f7ff fe09 	bl	10017180 <_Balloc>
1001756e:	4606      	mov	r6, r0
10017570:	b140      	cbz	r0, 10017584 <__pow5mult+0x98>
10017572:	2301      	movs	r3, #1
10017574:	f240 2271 	movw	r2, #625	@ 0x271
10017578:	e9c0 3204 	strd	r3, r2, [r0, #16]
1001757c:	2300      	movs	r3, #0
1001757e:	6438      	str	r0, [r7, #64]	@ 0x40
10017580:	6003      	str	r3, [r0, #0]
10017582:	e7bf      	b.n	10017504 <__pow5mult+0x18>
10017584:	4b04      	ldr	r3, [pc, #16]	@ (10017598 <__pow5mult+0xac>)
10017586:	4805      	ldr	r0, [pc, #20]	@ (1001759c <__pow5mult+0xb0>)
10017588:	4632      	mov	r2, r6
1001758a:	f240 1145 	movw	r1, #325	@ 0x145
1001758e:	f7ff fca9 	bl	10016ee4 <__assert_func>
10017592:	bf00      	nop
10017594:	1001941c 	.word	0x1001941c
10017598:	100191cc 	.word	0x100191cc
1001759c:	100193c0 	.word	0x100193c0

100175a0 <__lshift>:
100175a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100175a4:	460c      	mov	r4, r1
100175a6:	4690      	mov	r8, r2
100175a8:	6927      	ldr	r7, [r4, #16]
100175aa:	68a3      	ldr	r3, [r4, #8]
100175ac:	6849      	ldr	r1, [r1, #4]
100175ae:	eb07 1762 	add.w	r7, r7, r2, asr #5
100175b2:	1c7d      	adds	r5, r7, #1
100175b4:	429d      	cmp	r5, r3
100175b6:	4606      	mov	r6, r0
100175b8:	ea4f 1962 	mov.w	r9, r2, asr #5
100175bc:	dd04      	ble.n	100175c8 <__lshift+0x28>
100175be:	005b      	lsls	r3, r3, #1
100175c0:	429d      	cmp	r5, r3
100175c2:	f101 0101 	add.w	r1, r1, #1
100175c6:	dcfa      	bgt.n	100175be <__lshift+0x1e>
100175c8:	4630      	mov	r0, r6
100175ca:	f7ff fdd9 	bl	10017180 <_Balloc>
100175ce:	4684      	mov	ip, r0
100175d0:	2800      	cmp	r0, #0
100175d2:	d051      	beq.n	10017678 <__lshift+0xd8>
100175d4:	f1b9 0f00 	cmp.w	r9, #0
100175d8:	f100 0014 	add.w	r0, r0, #20
100175dc:	dd0e      	ble.n	100175fc <__lshift+0x5c>
100175de:	f109 0205 	add.w	r2, r9, #5
100175e2:	ea4f 0e82 	mov.w	lr, r2, lsl #2
100175e6:	4603      	mov	r3, r0
100175e8:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
100175ec:	2100      	movs	r1, #0
100175ee:	f843 1b04 	str.w	r1, [r3], #4
100175f2:	4293      	cmp	r3, r2
100175f4:	d1fb      	bne.n	100175ee <__lshift+0x4e>
100175f6:	f1ae 0314 	sub.w	r3, lr, #20
100175fa:	4418      	add	r0, r3
100175fc:	6921      	ldr	r1, [r4, #16]
100175fe:	f104 0314 	add.w	r3, r4, #20
10017602:	f018 081f 	ands.w	r8, r8, #31
10017606:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001760a:	d02d      	beq.n	10017668 <__lshift+0xc8>
1001760c:	f1c8 0920 	rsb	r9, r8, #32
10017610:	4686      	mov	lr, r0
10017612:	f04f 0a00 	mov.w	sl, #0
10017616:	681a      	ldr	r2, [r3, #0]
10017618:	fa02 f208 	lsl.w	r2, r2, r8
1001761c:	ea42 020a 	orr.w	r2, r2, sl
10017620:	f84e 2b04 	str.w	r2, [lr], #4
10017624:	f853 2b04 	ldr.w	r2, [r3], #4
10017628:	4299      	cmp	r1, r3
1001762a:	fa22 fa09 	lsr.w	sl, r2, r9
1001762e:	d8f2      	bhi.n	10017616 <__lshift+0x76>
10017630:	1b0b      	subs	r3, r1, r4
10017632:	3b15      	subs	r3, #21
10017634:	f023 0303 	bic.w	r3, r3, #3
10017638:	3304      	adds	r3, #4
1001763a:	f104 0215 	add.w	r2, r4, #21
1001763e:	4291      	cmp	r1, r2
10017640:	bf38      	it	cc
10017642:	2304      	movcc	r3, #4
10017644:	f840 a003 	str.w	sl, [r0, r3]
10017648:	f1ba 0f00 	cmp.w	sl, #0
1001764c:	d100      	bne.n	10017650 <__lshift+0xb0>
1001764e:	463d      	mov	r5, r7
10017650:	6c73      	ldr	r3, [r6, #68]	@ 0x44
10017652:	6862      	ldr	r2, [r4, #4]
10017654:	f8cc 5010 	str.w	r5, [ip, #16]
10017658:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001765c:	6021      	str	r1, [r4, #0]
1001765e:	4660      	mov	r0, ip
10017660:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
10017664:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10017668:	3804      	subs	r0, #4
1001766a:	f853 2b04 	ldr.w	r2, [r3], #4
1001766e:	f840 2f04 	str.w	r2, [r0, #4]!
10017672:	4299      	cmp	r1, r3
10017674:	d8f9      	bhi.n	1001766a <__lshift+0xca>
10017676:	e7ea      	b.n	1001764e <__lshift+0xae>
10017678:	4b03      	ldr	r3, [pc, #12]	@ (10017688 <__lshift+0xe8>)
1001767a:	4804      	ldr	r0, [pc, #16]	@ (1001768c <__lshift+0xec>)
1001767c:	4662      	mov	r2, ip
1001767e:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
10017682:	f7ff fc2f 	bl	10016ee4 <__assert_func>
10017686:	bf00      	nop
10017688:	100191cc 	.word	0x100191cc
1001768c:	100193c0 	.word	0x100193c0

10017690 <__mcmp>:
10017690:	690b      	ldr	r3, [r1, #16]
10017692:	4684      	mov	ip, r0
10017694:	6900      	ldr	r0, [r0, #16]
10017696:	1ac0      	subs	r0, r0, r3
10017698:	d116      	bne.n	100176c8 <__mcmp+0x38>
1001769a:	f10c 0c14 	add.w	ip, ip, #20
1001769e:	3114      	adds	r1, #20
100176a0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
100176a4:	b410      	push	{r4}
100176a6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
100176aa:	e001      	b.n	100176b0 <__mcmp+0x20>
100176ac:	4594      	cmp	ip, r2
100176ae:	d208      	bcs.n	100176c2 <__mcmp+0x32>
100176b0:	f852 4d04 	ldr.w	r4, [r2, #-4]!
100176b4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
100176b8:	428c      	cmp	r4, r1
100176ba:	d0f7      	beq.n	100176ac <__mcmp+0x1c>
100176bc:	d205      	bcs.n	100176ca <__mcmp+0x3a>
100176be:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100176c2:	f85d 4b04 	ldr.w	r4, [sp], #4
100176c6:	4770      	bx	lr
100176c8:	4770      	bx	lr
100176ca:	2001      	movs	r0, #1
100176cc:	f85d 4b04 	ldr.w	r4, [sp], #4
100176d0:	4770      	bx	lr
100176d2:	bf00      	nop

100176d4 <__mdiff>:
100176d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100176d8:	6913      	ldr	r3, [r2, #16]
100176da:	690f      	ldr	r7, [r1, #16]
100176dc:	1aff      	subs	r7, r7, r3
100176de:	2f00      	cmp	r7, #0
100176e0:	b083      	sub	sp, #12
100176e2:	460d      	mov	r5, r1
100176e4:	4690      	mov	r8, r2
100176e6:	d115      	bne.n	10017714 <__mdiff+0x40>
100176e8:	f101 0614 	add.w	r6, r1, #20
100176ec:	3214      	adds	r2, #20
100176ee:	eb02 0283 	add.w	r2, r2, r3, lsl #2
100176f2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
100176f6:	e001      	b.n	100176fc <__mdiff+0x28>
100176f8:	429e      	cmp	r6, r3
100176fa:	d276      	bcs.n	100177ea <__mdiff+0x116>
100176fc:	f853 4d04 	ldr.w	r4, [r3, #-4]!
10017700:	f852 1d04 	ldr.w	r1, [r2, #-4]!
10017704:	428c      	cmp	r4, r1
10017706:	d0f7      	beq.n	100176f8 <__mdiff+0x24>
10017708:	d206      	bcs.n	10017718 <__mdiff+0x44>
1001770a:	462b      	mov	r3, r5
1001770c:	2701      	movs	r7, #1
1001770e:	4645      	mov	r5, r8
10017710:	4698      	mov	r8, r3
10017712:	e001      	b.n	10017718 <__mdiff+0x44>
10017714:	dbf9      	blt.n	1001770a <__mdiff+0x36>
10017716:	2700      	movs	r7, #0
10017718:	6869      	ldr	r1, [r5, #4]
1001771a:	f7ff fd31 	bl	10017180 <_Balloc>
1001771e:	4681      	mov	r9, r0
10017720:	2800      	cmp	r0, #0
10017722:	d076      	beq.n	10017812 <__mdiff+0x13e>
10017724:	692e      	ldr	r6, [r5, #16]
10017726:	60c7      	str	r7, [r0, #12]
10017728:	f8d8 0010 	ldr.w	r0, [r8, #16]
1001772c:	f105 0b14 	add.w	fp, r5, #20
10017730:	f108 0e14 	add.w	lr, r8, #20
10017734:	f109 0a14 	add.w	sl, r9, #20
10017738:	f105 0110 	add.w	r1, r5, #16
1001773c:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
10017740:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
10017744:	4657      	mov	r7, sl
10017746:	f04f 0c00 	mov.w	ip, #0
1001774a:	f8cd b004 	str.w	fp, [sp, #4]
1001774e:	f85e 4b04 	ldr.w	r4, [lr], #4
10017752:	f851 5f04 	ldr.w	r5, [r1, #4]!
10017756:	fa1f fb84 	uxth.w	fp, r4
1001775a:	b2ab      	uxth	r3, r5
1001775c:	eba3 030b 	sub.w	r3, r3, fp
10017760:	0c24      	lsrs	r4, r4, #16
10017762:	4463      	add	r3, ip
10017764:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
10017768:	eb04 4423 	add.w	r4, r4, r3, asr #16
1001776c:	b29b      	uxth	r3, r3
1001776e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10017772:	4570      	cmp	r0, lr
10017774:	f847 3b04 	str.w	r3, [r7], #4
10017778:	ea4f 4c24 	mov.w	ip, r4, asr #16
1001777c:	d8e7      	bhi.n	1001774e <__mdiff+0x7a>
1001777e:	eba0 0108 	sub.w	r1, r0, r8
10017782:	3915      	subs	r1, #21
10017784:	0889      	lsrs	r1, r1, #2
10017786:	1c4c      	adds	r4, r1, #1
10017788:	f8dd b004 	ldr.w	fp, [sp, #4]
1001778c:	f108 0815 	add.w	r8, r8, #21
10017790:	00a4      	lsls	r4, r4, #2
10017792:	4540      	cmp	r0, r8
10017794:	bf38      	it	cc
10017796:	2404      	movcc	r4, #4
10017798:	eb0b 0504 	add.w	r5, fp, r4
1001779c:	42aa      	cmp	r2, r5
1001779e:	4454      	add	r4, sl
100177a0:	d930      	bls.n	10017804 <__mdiff+0x130>
100177a2:	4627      	mov	r7, r4
100177a4:	4628      	mov	r0, r5
100177a6:	f850 3b04 	ldr.w	r3, [r0], #4
100177aa:	fa1c fe83 	uxtah	lr, ip, r3
100177ae:	0c19      	lsrs	r1, r3, #16
100177b0:	4463      	add	r3, ip
100177b2:	eb01 412e 	add.w	r1, r1, lr, asr #16
100177b6:	b29b      	uxth	r3, r3
100177b8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
100177bc:	4282      	cmp	r2, r0
100177be:	f847 3b04 	str.w	r3, [r7], #4
100177c2:	ea4f 4c21 	mov.w	ip, r1, asr #16
100177c6:	d8ee      	bhi.n	100177a6 <__mdiff+0xd2>
100177c8:	3a01      	subs	r2, #1
100177ca:	1b52      	subs	r2, r2, r5
100177cc:	f022 0203 	bic.w	r2, r2, #3
100177d0:	4414      	add	r4, r2
100177d2:	b923      	cbnz	r3, 100177de <__mdiff+0x10a>
100177d4:	f854 3d04 	ldr.w	r3, [r4, #-4]!
100177d8:	3e01      	subs	r6, #1
100177da:	2b00      	cmp	r3, #0
100177dc:	d0fa      	beq.n	100177d4 <__mdiff+0x100>
100177de:	4648      	mov	r0, r9
100177e0:	f8c9 6010 	str.w	r6, [r9, #16]
100177e4:	b003      	add	sp, #12
100177e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100177ea:	2100      	movs	r1, #0
100177ec:	f7ff fcc8 	bl	10017180 <_Balloc>
100177f0:	4681      	mov	r9, r0
100177f2:	b1a8      	cbz	r0, 10017820 <__mdiff+0x14c>
100177f4:	2201      	movs	r2, #1
100177f6:	2300      	movs	r3, #0
100177f8:	e9c0 2304 	strd	r2, r3, [r0, #16]
100177fc:	4648      	mov	r0, r9
100177fe:	b003      	add	sp, #12
10017800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017804:	0089      	lsls	r1, r1, #2
10017806:	4540      	cmp	r0, r8
10017808:	bf38      	it	cc
1001780a:	2100      	movcc	r1, #0
1001780c:	eb0a 0401 	add.w	r4, sl, r1
10017810:	e7df      	b.n	100177d2 <__mdiff+0xfe>
10017812:	4b07      	ldr	r3, [pc, #28]	@ (10017830 <__mdiff+0x15c>)
10017814:	4807      	ldr	r0, [pc, #28]	@ (10017834 <__mdiff+0x160>)
10017816:	464a      	mov	r2, r9
10017818:	f240 2145 	movw	r1, #581	@ 0x245
1001781c:	f7ff fb62 	bl	10016ee4 <__assert_func>
10017820:	4b03      	ldr	r3, [pc, #12]	@ (10017830 <__mdiff+0x15c>)
10017822:	4804      	ldr	r0, [pc, #16]	@ (10017834 <__mdiff+0x160>)
10017824:	464a      	mov	r2, r9
10017826:	f240 2137 	movw	r1, #567	@ 0x237
1001782a:	f7ff fb5b 	bl	10016ee4 <__assert_func>
1001782e:	bf00      	nop
10017830:	100191cc 	.word	0x100191cc
10017834:	100193c0 	.word	0x100193c0

10017838 <__d2b>:
10017838:	b5f0      	push	{r4, r5, r6, r7, lr}
1001783a:	2101      	movs	r1, #1
1001783c:	b083      	sub	sp, #12
1001783e:	4616      	mov	r6, r2
10017840:	461f      	mov	r7, r3
10017842:	f7ff fc9d 	bl	10017180 <_Balloc>
10017846:	4605      	mov	r5, r0
10017848:	2800      	cmp	r0, #0
1001784a:	d047      	beq.n	100178dc <__d2b+0xa4>
1001784c:	f3c7 540a 	ubfx	r4, r7, #20, #11
10017850:	f3c7 0313 	ubfx	r3, r7, #0, #20
10017854:	b10c      	cbz	r4, 1001785a <__d2b+0x22>
10017856:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001785a:	2e00      	cmp	r6, #0
1001785c:	9301      	str	r3, [sp, #4]
1001785e:	d114      	bne.n	1001788a <__d2b+0x52>
10017860:	a801      	add	r0, sp, #4
10017862:	f7ff fd2f 	bl	100172c4 <__lo0bits>
10017866:	9b01      	ldr	r3, [sp, #4]
10017868:	616b      	str	r3, [r5, #20]
1001786a:	2201      	movs	r2, #1
1001786c:	3020      	adds	r0, #32
1001786e:	612a      	str	r2, [r5, #16]
10017870:	b314      	cbz	r4, 100178b8 <__d2b+0x80>
10017872:	9b08      	ldr	r3, [sp, #32]
10017874:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
10017878:	4404      	add	r4, r0
1001787a:	601c      	str	r4, [r3, #0]
1001787c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001787e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
10017882:	6018      	str	r0, [r3, #0]
10017884:	4628      	mov	r0, r5
10017886:	b003      	add	sp, #12
10017888:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001788a:	4668      	mov	r0, sp
1001788c:	9600      	str	r6, [sp, #0]
1001788e:	f7ff fd19 	bl	100172c4 <__lo0bits>
10017892:	9b01      	ldr	r3, [sp, #4]
10017894:	b300      	cbz	r0, 100178d8 <__d2b+0xa0>
10017896:	9900      	ldr	r1, [sp, #0]
10017898:	f1c0 0220 	rsb	r2, r0, #32
1001789c:	fa03 f202 	lsl.w	r2, r3, r2
100178a0:	40c3      	lsrs	r3, r0
100178a2:	9301      	str	r3, [sp, #4]
100178a4:	430a      	orrs	r2, r1
100178a6:	2b00      	cmp	r3, #0
100178a8:	e9c5 2305 	strd	r2, r3, [r5, #20]
100178ac:	bf0c      	ite	eq
100178ae:	2201      	moveq	r2, #1
100178b0:	2202      	movne	r2, #2
100178b2:	612a      	str	r2, [r5, #16]
100178b4:	2c00      	cmp	r4, #0
100178b6:	d1dc      	bne.n	10017872 <__d2b+0x3a>
100178b8:	eb05 0182 	add.w	r1, r5, r2, lsl #2
100178bc:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
100178c0:	6908      	ldr	r0, [r1, #16]
100178c2:	9908      	ldr	r1, [sp, #32]
100178c4:	600b      	str	r3, [r1, #0]
100178c6:	f7ff fcdb 	bl	10017280 <__hi0bits>
100178ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100178cc:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
100178d0:	6018      	str	r0, [r3, #0]
100178d2:	4628      	mov	r0, r5
100178d4:	b003      	add	sp, #12
100178d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100178d8:	9a00      	ldr	r2, [sp, #0]
100178da:	e7e4      	b.n	100178a6 <__d2b+0x6e>
100178dc:	4b03      	ldr	r3, [pc, #12]	@ (100178ec <__d2b+0xb4>)
100178de:	4804      	ldr	r0, [pc, #16]	@ (100178f0 <__d2b+0xb8>)
100178e0:	462a      	mov	r2, r5
100178e2:	f240 310f 	movw	r1, #783	@ 0x30f
100178e6:	f7ff fafd 	bl	10016ee4 <__assert_func>
100178ea:	bf00      	nop
100178ec:	100191cc 	.word	0x100191cc
100178f0:	100193c0 	.word	0x100193c0

100178f4 <_calloc_r>:
100178f4:	b538      	push	{r3, r4, r5, lr}
100178f6:	fba1 1402 	umull	r1, r4, r1, r2
100178fa:	bb54      	cbnz	r4, 10017952 <_calloc_r+0x5e>
100178fc:	f7fa f8d8 	bl	10011ab0 <_malloc_r>
10017900:	4605      	mov	r5, r0
10017902:	b350      	cbz	r0, 1001795a <_calloc_r+0x66>
10017904:	f850 2c04 	ldr.w	r2, [r0, #-4]
10017908:	f022 0203 	bic.w	r2, r2, #3
1001790c:	3a04      	subs	r2, #4
1001790e:	2a24      	cmp	r2, #36	@ 0x24
10017910:	d810      	bhi.n	10017934 <_calloc_r+0x40>
10017912:	2a13      	cmp	r2, #19
10017914:	d913      	bls.n	1001793e <_calloc_r+0x4a>
10017916:	2a1b      	cmp	r2, #27
10017918:	6004      	str	r4, [r0, #0]
1001791a:	6044      	str	r4, [r0, #4]
1001791c:	d916      	bls.n	1001794c <_calloc_r+0x58>
1001791e:	2a24      	cmp	r2, #36	@ 0x24
10017920:	6084      	str	r4, [r0, #8]
10017922:	60c4      	str	r4, [r0, #12]
10017924:	bf11      	iteee	ne
10017926:	f100 0210 	addne.w	r2, r0, #16
1001792a:	f100 0218 	addeq.w	r2, r0, #24
1001792e:	6104      	streq	r4, [r0, #16]
10017930:	6144      	streq	r4, [r0, #20]
10017932:	e005      	b.n	10017940 <_calloc_r+0x4c>
10017934:	4621      	mov	r1, r4
10017936:	f7fa fb7f 	bl	10012038 <memset>
1001793a:	4628      	mov	r0, r5
1001793c:	bd38      	pop	{r3, r4, r5, pc}
1001793e:	4602      	mov	r2, r0
10017940:	2300      	movs	r3, #0
10017942:	6013      	str	r3, [r2, #0]
10017944:	6053      	str	r3, [r2, #4]
10017946:	6093      	str	r3, [r2, #8]
10017948:	4628      	mov	r0, r5
1001794a:	bd38      	pop	{r3, r4, r5, pc}
1001794c:	f100 0208 	add.w	r2, r0, #8
10017950:	e7f6      	b.n	10017940 <_calloc_r+0x4c>
10017952:	f7f8 fad7 	bl	1000ff04 <__errno>
10017956:	230c      	movs	r3, #12
10017958:	6003      	str	r3, [r0, #0]
1001795a:	2500      	movs	r5, #0
1001795c:	4628      	mov	r0, r5
1001795e:	bd38      	pop	{r3, r4, r5, pc}

10017960 <_wcsnrtombs_l>:
10017960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017964:	b08b      	sub	sp, #44	@ 0x2c
10017966:	e9dd 7a15 	ldrd	r7, sl, [sp, #84]	@ 0x54
1001796a:	4686      	mov	lr, r0
1001796c:	461e      	mov	r6, r3
1001796e:	2f00      	cmp	r7, #0
10017970:	d05a      	beq.n	10017a28 <_wcsnrtombs_l+0xc8>
10017972:	6815      	ldr	r5, [r2, #0]
10017974:	2900      	cmp	r1, #0
10017976:	d05c      	beq.n	10017a32 <_wcsnrtombs_l+0xd2>
10017978:	9b14      	ldr	r3, [sp, #80]	@ 0x50
1001797a:	2b00      	cmp	r3, #0
1001797c:	d069      	beq.n	10017a52 <_wcsnrtombs_l+0xf2>
1001797e:	1e74      	subs	r4, r6, #1
10017980:	b34e      	cbz	r6, 100179d6 <_wcsnrtombs_l+0x76>
10017982:	3d04      	subs	r5, #4
10017984:	e9cd 5e01 	strd	r5, lr, [sp, #4]
10017988:	f8dd b050 	ldr.w	fp, [sp, #80]	@ 0x50
1001798c:	9104      	str	r1, [sp, #16]
1001798e:	2600      	movs	r6, #0
10017990:	9103      	str	r1, [sp, #12]
10017992:	9205      	str	r2, [sp, #20]
10017994:	e00b      	b.n	100179ae <_wcsnrtombs_l+0x4e>
10017996:	9b03      	ldr	r3, [sp, #12]
10017998:	bb0b      	cbnz	r3, 100179de <_wcsnrtombs_l+0x7e>
1001799a:	9b01      	ldr	r3, [sp, #4]
1001799c:	6818      	ldr	r0, [r3, #0]
1001799e:	2800      	cmp	r0, #0
100179a0:	d036      	beq.n	10017a10 <_wcsnrtombs_l+0xb0>
100179a2:	45dc      	cmp	ip, fp
100179a4:	d257      	bcs.n	10017a56 <_wcsnrtombs_l+0xf6>
100179a6:	3c01      	subs	r4, #1
100179a8:	1c63      	adds	r3, r4, #1
100179aa:	4666      	mov	r6, ip
100179ac:	d013      	beq.n	100179d6 <_wcsnrtombs_l+0x76>
100179ae:	9b01      	ldr	r3, [sp, #4]
100179b0:	9802      	ldr	r0, [sp, #8]
100179b2:	f853 2f04 	ldr.w	r2, [r3, #4]!
100179b6:	9301      	str	r3, [sp, #4]
100179b8:	f8da 50e0 	ldr.w	r5, [sl, #224]	@ 0xe0
100179bc:	463b      	mov	r3, r7
100179be:	a907      	add	r1, sp, #28
100179c0:	e9d7 9800 	ldrd	r9, r8, [r7]
100179c4:	47a8      	blx	r5
100179c6:	1c42      	adds	r2, r0, #1
100179c8:	d037      	beq.n	10017a3a <_wcsnrtombs_l+0xda>
100179ca:	eb00 0c06 	add.w	ip, r0, r6
100179ce:	45dc      	cmp	ip, fp
100179d0:	d9e1      	bls.n	10017996 <_wcsnrtombs_l+0x36>
100179d2:	e9c7 9800 	strd	r9, r8, [r7]
100179d6:	4630      	mov	r0, r6
100179d8:	b00b      	add	sp, #44	@ 0x2c
100179da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100179de:	2800      	cmp	r0, #0
100179e0:	dd0e      	ble.n	10017a00 <_wcsnrtombs_l+0xa0>
100179e2:	9b04      	ldr	r3, [sp, #16]
100179e4:	9d01      	ldr	r5, [sp, #4]
100179e6:	4418      	add	r0, r3
100179e8:	1e5a      	subs	r2, r3, #1
100179ea:	a907      	add	r1, sp, #28
100179ec:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
100179f0:	f811 3b01 	ldrb.w	r3, [r1], #1
100179f4:	f802 3f01 	strb.w	r3, [r2, #1]!
100179f8:	4596      	cmp	lr, r2
100179fa:	d1f9      	bne.n	100179f0 <_wcsnrtombs_l+0x90>
100179fc:	9501      	str	r5, [sp, #4]
100179fe:	9004      	str	r0, [sp, #16]
10017a00:	9b05      	ldr	r3, [sp, #20]
10017a02:	681a      	ldr	r2, [r3, #0]
10017a04:	3204      	adds	r2, #4
10017a06:	601a      	str	r2, [r3, #0]
10017a08:	9b01      	ldr	r3, [sp, #4]
10017a0a:	6818      	ldr	r0, [r3, #0]
10017a0c:	2800      	cmp	r0, #0
10017a0e:	d1c8      	bne.n	100179a2 <_wcsnrtombs_l+0x42>
10017a10:	9903      	ldr	r1, [sp, #12]
10017a12:	9a05      	ldr	r2, [sp, #20]
10017a14:	b101      	cbz	r1, 10017a18 <_wcsnrtombs_l+0xb8>
10017a16:	6010      	str	r0, [r2, #0]
10017a18:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
10017a1c:	2200      	movs	r2, #0
10017a1e:	4630      	mov	r0, r6
10017a20:	603a      	str	r2, [r7, #0]
10017a22:	b00b      	add	sp, #44	@ 0x2c
10017a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017a28:	6815      	ldr	r5, [r2, #0]
10017a2a:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
10017a2e:	2900      	cmp	r1, #0
10017a30:	d1a2      	bne.n	10017978 <_wcsnrtombs_l+0x18>
10017a32:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10017a36:	9314      	str	r3, [sp, #80]	@ 0x50
10017a38:	e7a1      	b.n	1001797e <_wcsnrtombs_l+0x1e>
10017a3a:	f8dd e008 	ldr.w	lr, [sp, #8]
10017a3e:	4606      	mov	r6, r0
10017a40:	218a      	movs	r1, #138	@ 0x8a
10017a42:	2200      	movs	r2, #0
10017a44:	4630      	mov	r0, r6
10017a46:	f8ce 1000 	str.w	r1, [lr]
10017a4a:	603a      	str	r2, [r7, #0]
10017a4c:	b00b      	add	sp, #44	@ 0x2c
10017a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017a52:	9e14      	ldr	r6, [sp, #80]	@ 0x50
10017a54:	e7bf      	b.n	100179d6 <_wcsnrtombs_l+0x76>
10017a56:	4666      	mov	r6, ip
10017a58:	e7bd      	b.n	100179d6 <_wcsnrtombs_l+0x76>
10017a5a:	bf00      	nop

10017a5c <_wcsnrtombs_r>:
10017a5c:	b510      	push	{r4, lr}
10017a5e:	b084      	sub	sp, #16
10017a60:	4c05      	ldr	r4, [pc, #20]	@ (10017a78 <_wcsnrtombs_r+0x1c>)
10017a62:	9806      	ldr	r0, [sp, #24]
10017a64:	9000      	str	r0, [sp, #0]
10017a66:	9807      	ldr	r0, [sp, #28]
10017a68:	9001      	str	r0, [sp, #4]
10017a6a:	4804      	ldr	r0, [pc, #16]	@ (10017a7c <_wcsnrtombs_r+0x20>)
10017a6c:	6800      	ldr	r0, [r0, #0]
10017a6e:	9402      	str	r4, [sp, #8]
10017a70:	f7ff ff76 	bl	10017960 <_wcsnrtombs_l>
10017a74:	b004      	add	sp, #16
10017a76:	bd10      	pop	{r4, pc}
10017a78:	2000044c 	.word	0x2000044c
10017a7c:	200005b8 	.word	0x200005b8

10017a80 <_close_r>:
10017a80:	b538      	push	{r3, r4, r5, lr}
10017a82:	4d07      	ldr	r5, [pc, #28]	@ (10017aa0 <_close_r+0x20>)
10017a84:	2200      	movs	r2, #0
10017a86:	4604      	mov	r4, r0
10017a88:	4608      	mov	r0, r1
10017a8a:	602a      	str	r2, [r5, #0]
10017a8c:	f7f6 fe86 	bl	1000e79c <_close>
10017a90:	1c43      	adds	r3, r0, #1
10017a92:	d000      	beq.n	10017a96 <_close_r+0x16>
10017a94:	bd38      	pop	{r3, r4, r5, pc}
10017a96:	682b      	ldr	r3, [r5, #0]
10017a98:	2b00      	cmp	r3, #0
10017a9a:	d0fb      	beq.n	10017a94 <_close_r+0x14>
10017a9c:	6023      	str	r3, [r4, #0]
10017a9e:	bd38      	pop	{r3, r4, r5, pc}
10017aa0:	2000173c 	.word	0x2000173c

10017aa4 <__sflush_r>:
10017aa4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
10017aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10017aac:	460c      	mov	r4, r1
10017aae:	0711      	lsls	r1, r2, #28
10017ab0:	4680      	mov	r8, r0
10017ab2:	d44b      	bmi.n	10017b4c <__sflush_r+0xa8>
10017ab4:	6861      	ldr	r1, [r4, #4]
10017ab6:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
10017aba:	2900      	cmp	r1, #0
10017abc:	81a3      	strh	r3, [r4, #12]
10017abe:	dd60      	ble.n	10017b82 <__sflush_r+0xde>
10017ac0:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10017ac2:	2d00      	cmp	r5, #0
10017ac4:	d03f      	beq.n	10017b46 <__sflush_r+0xa2>
10017ac6:	2100      	movs	r1, #0
10017ac8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
10017acc:	f8d8 6000 	ldr.w	r6, [r8]
10017ad0:	f8c8 1000 	str.w	r1, [r8]
10017ad4:	69e1      	ldr	r1, [r4, #28]
10017ad6:	d161      	bne.n	10017b9c <__sflush_r+0xf8>
10017ad8:	2301      	movs	r3, #1
10017ada:	4640      	mov	r0, r8
10017adc:	47a8      	blx	r5
10017ade:	1c43      	adds	r3, r0, #1
10017ae0:	4602      	mov	r2, r0
10017ae2:	d06b      	beq.n	10017bbc <__sflush_r+0x118>
10017ae4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017ae8:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10017aea:	69e1      	ldr	r1, [r4, #28]
10017aec:	075f      	lsls	r7, r3, #29
10017aee:	d505      	bpl.n	10017afc <__sflush_r+0x58>
10017af0:	6863      	ldr	r3, [r4, #4]
10017af2:	1ad2      	subs	r2, r2, r3
10017af4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10017af6:	b10b      	cbz	r3, 10017afc <__sflush_r+0x58>
10017af8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10017afa:	1ad2      	subs	r2, r2, r3
10017afc:	2300      	movs	r3, #0
10017afe:	4640      	mov	r0, r8
10017b00:	47a8      	blx	r5
10017b02:	1c45      	adds	r5, r0, #1
10017b04:	d14c      	bne.n	10017ba0 <__sflush_r+0xfc>
10017b06:	f8d8 1000 	ldr.w	r1, [r8]
10017b0a:	291d      	cmp	r1, #29
10017b0c:	d83d      	bhi.n	10017b8a <__sflush_r+0xe6>
10017b0e:	4a32      	ldr	r2, [pc, #200]	@ (10017bd8 <__sflush_r+0x134>)
10017b10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017b14:	410a      	asrs	r2, r1
10017b16:	f012 0201 	ands.w	r2, r2, #1
10017b1a:	d138      	bne.n	10017b8e <__sflush_r+0xea>
10017b1c:	6062      	str	r2, [r4, #4]
10017b1e:	6922      	ldr	r2, [r4, #16]
10017b20:	6022      	str	r2, [r4, #0]
10017b22:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10017b26:	81a2      	strh	r2, [r4, #12]
10017b28:	04da      	lsls	r2, r3, #19
10017b2a:	d452      	bmi.n	10017bd2 <__sflush_r+0x12e>
10017b2c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10017b2e:	f8c8 6000 	str.w	r6, [r8]
10017b32:	b141      	cbz	r1, 10017b46 <__sflush_r+0xa2>
10017b34:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10017b38:	4299      	cmp	r1, r3
10017b3a:	d002      	beq.n	10017b42 <__sflush_r+0x9e>
10017b3c:	4640      	mov	r0, r8
10017b3e:	f7fb fe5f 	bl	10013800 <_free_r>
10017b42:	2300      	movs	r3, #0
10017b44:	6323      	str	r3, [r4, #48]	@ 0x30
10017b46:	2000      	movs	r0, #0
10017b48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10017b4c:	6926      	ldr	r6, [r4, #16]
10017b4e:	2e00      	cmp	r6, #0
10017b50:	d0f9      	beq.n	10017b46 <__sflush_r+0xa2>
10017b52:	6825      	ldr	r5, [r4, #0]
10017b54:	6026      	str	r6, [r4, #0]
10017b56:	0791      	lsls	r1, r2, #30
10017b58:	bf0c      	ite	eq
10017b5a:	6963      	ldreq	r3, [r4, #20]
10017b5c:	2300      	movne	r3, #0
10017b5e:	1bad      	subs	r5, r5, r6
10017b60:	60a3      	str	r3, [r4, #8]
10017b62:	e00b      	b.n	10017b7c <__sflush_r+0xd8>
10017b64:	462b      	mov	r3, r5
10017b66:	4632      	mov	r2, r6
10017b68:	69e1      	ldr	r1, [r4, #28]
10017b6a:	6a67      	ldr	r7, [r4, #36]	@ 0x24
10017b6c:	4640      	mov	r0, r8
10017b6e:	47b8      	blx	r7
10017b70:	f1b0 0c00 	subs.w	ip, r0, #0
10017b74:	eba5 050c 	sub.w	r5, r5, ip
10017b78:	4466      	add	r6, ip
10017b7a:	dd06      	ble.n	10017b8a <__sflush_r+0xe6>
10017b7c:	2d00      	cmp	r5, #0
10017b7e:	dcf1      	bgt.n	10017b64 <__sflush_r+0xc0>
10017b80:	e7e1      	b.n	10017b46 <__sflush_r+0xa2>
10017b82:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
10017b84:	2900      	cmp	r1, #0
10017b86:	dc9b      	bgt.n	10017ac0 <__sflush_r+0x1c>
10017b88:	e7dd      	b.n	10017b46 <__sflush_r+0xa2>
10017b8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017b8e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017b92:	81a3      	strh	r3, [r4, #12]
10017b94:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10017b9c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10017b9e:	e7a5      	b.n	10017aec <__sflush_r+0x48>
10017ba0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017ba4:	6922      	ldr	r2, [r4, #16]
10017ba6:	6022      	str	r2, [r4, #0]
10017ba8:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10017bac:	81a2      	strh	r2, [r4, #12]
10017bae:	04db      	lsls	r3, r3, #19
10017bb0:	f04f 0200 	mov.w	r2, #0
10017bb4:	6062      	str	r2, [r4, #4]
10017bb6:	d5b9      	bpl.n	10017b2c <__sflush_r+0x88>
10017bb8:	6520      	str	r0, [r4, #80]	@ 0x50
10017bba:	e7b7      	b.n	10017b2c <__sflush_r+0x88>
10017bbc:	f8d8 3000 	ldr.w	r3, [r8]
10017bc0:	2b00      	cmp	r3, #0
10017bc2:	d08f      	beq.n	10017ae4 <__sflush_r+0x40>
10017bc4:	2b1d      	cmp	r3, #29
10017bc6:	d001      	beq.n	10017bcc <__sflush_r+0x128>
10017bc8:	2b16      	cmp	r3, #22
10017bca:	d1de      	bne.n	10017b8a <__sflush_r+0xe6>
10017bcc:	f8c8 6000 	str.w	r6, [r8]
10017bd0:	e7b9      	b.n	10017b46 <__sflush_r+0xa2>
10017bd2:	2900      	cmp	r1, #0
10017bd4:	d1aa      	bne.n	10017b2c <__sflush_r+0x88>
10017bd6:	e7ef      	b.n	10017bb8 <__sflush_r+0x114>
10017bd8:	dfbffffe 	.word	0xdfbffffe

10017bdc <_fflush_r>:
10017bdc:	b538      	push	{r3, r4, r5, lr}
10017bde:	460c      	mov	r4, r1
10017be0:	4605      	mov	r5, r0
10017be2:	b108      	cbz	r0, 10017be8 <_fflush_r+0xc>
10017be4:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10017be6:	b303      	cbz	r3, 10017c2a <_fflush_r+0x4e>
10017be8:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10017bec:	b188      	cbz	r0, 10017c12 <_fflush_r+0x36>
10017bee:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017bf0:	07db      	lsls	r3, r3, #31
10017bf2:	d401      	bmi.n	10017bf8 <_fflush_r+0x1c>
10017bf4:	0581      	lsls	r1, r0, #22
10017bf6:	d50f      	bpl.n	10017c18 <_fflush_r+0x3c>
10017bf8:	4628      	mov	r0, r5
10017bfa:	4621      	mov	r1, r4
10017bfc:	f7ff ff52 	bl	10017aa4 <__sflush_r>
10017c00:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017c02:	07da      	lsls	r2, r3, #31
10017c04:	4605      	mov	r5, r0
10017c06:	d402      	bmi.n	10017c0e <_fflush_r+0x32>
10017c08:	89a3      	ldrh	r3, [r4, #12]
10017c0a:	059b      	lsls	r3, r3, #22
10017c0c:	d508      	bpl.n	10017c20 <_fflush_r+0x44>
10017c0e:	4628      	mov	r0, r5
10017c10:	bd38      	pop	{r3, r4, r5, pc}
10017c12:	4605      	mov	r5, r0
10017c14:	4628      	mov	r0, r5
10017c16:	bd38      	pop	{r3, r4, r5, pc}
10017c18:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017c1a:	f7fa fac5 	bl	100121a8 <__retarget_lock_acquire_recursive>
10017c1e:	e7eb      	b.n	10017bf8 <_fflush_r+0x1c>
10017c20:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017c22:	f7fa fac3 	bl	100121ac <__retarget_lock_release_recursive>
10017c26:	4628      	mov	r0, r5
10017c28:	bd38      	pop	{r3, r4, r5, pc}
10017c2a:	f7fb fbbb 	bl	100133a4 <__sinit>
10017c2e:	e7db      	b.n	10017be8 <_fflush_r+0xc>

10017c30 <_realloc_r>:
10017c30:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017c34:	4616      	mov	r6, r2
10017c36:	2900      	cmp	r1, #0
10017c38:	f000 8096 	beq.w	10017d68 <_realloc_r+0x138>
10017c3c:	460c      	mov	r4, r1
10017c3e:	4680      	mov	r8, r0
10017c40:	f106 050b 	add.w	r5, r6, #11
10017c44:	f7fa fb34 	bl	100122b0 <__malloc_lock>
10017c48:	f854 1c04 	ldr.w	r1, [r4, #-4]
10017c4c:	2d16      	cmp	r5, #22
10017c4e:	f1a4 0908 	sub.w	r9, r4, #8
10017c52:	f021 0703 	bic.w	r7, r1, #3
10017c56:	d858      	bhi.n	10017d0a <_realloc_r+0xda>
10017c58:	2510      	movs	r5, #16
10017c5a:	42ae      	cmp	r6, r5
10017c5c:	d858      	bhi.n	10017d10 <_realloc_r+0xe0>
10017c5e:	42af      	cmp	r7, r5
10017c60:	da60      	bge.n	10017d24 <_realloc_r+0xf4>
10017c62:	4bbe      	ldr	r3, [pc, #760]	@ (10017f5c <_realloc_r+0x32c>)
10017c64:	689a      	ldr	r2, [r3, #8]
10017c66:	eb09 0c07 	add.w	ip, r9, r7
10017c6a:	4562      	cmp	r2, ip
10017c6c:	f8dc 0004 	ldr.w	r0, [ip, #4]
10017c70:	f000 8090 	beq.w	10017d94 <_realloc_r+0x164>
10017c74:	f020 0301 	bic.w	r3, r0, #1
10017c78:	4463      	add	r3, ip
10017c7a:	685b      	ldr	r3, [r3, #4]
10017c7c:	07da      	lsls	r2, r3, #31
10017c7e:	d468      	bmi.n	10017d52 <_realloc_r+0x122>
10017c80:	f020 0003 	bic.w	r0, r0, #3
10017c84:	183b      	adds	r3, r7, r0
10017c86:	429d      	cmp	r5, r3
10017c88:	dd47      	ble.n	10017d1a <_realloc_r+0xea>
10017c8a:	07cb      	lsls	r3, r1, #31
10017c8c:	d412      	bmi.n	10017cb4 <_realloc_r+0x84>
10017c8e:	f854 3c08 	ldr.w	r3, [r4, #-8]
10017c92:	eba9 0b03 	sub.w	fp, r9, r3
10017c96:	f8db 3004 	ldr.w	r3, [fp, #4]
10017c9a:	f023 0203 	bic.w	r2, r3, #3
10017c9e:	4410      	add	r0, r2
10017ca0:	eb00 0a07 	add.w	sl, r0, r7
10017ca4:	4555      	cmp	r5, sl
10017ca6:	f340 80f6 	ble.w	10017e96 <_realloc_r+0x266>
10017caa:	eb07 0a02 	add.w	sl, r7, r2
10017cae:	4555      	cmp	r5, sl
10017cb0:	f340 80cc 	ble.w	10017e4c <_realloc_r+0x21c>
10017cb4:	4631      	mov	r1, r6
10017cb6:	4640      	mov	r0, r8
10017cb8:	f7f9 fefa 	bl	10011ab0 <_malloc_r>
10017cbc:	4606      	mov	r6, r0
10017cbe:	2800      	cmp	r0, #0
10017cc0:	f000 8120 	beq.w	10017f04 <_realloc_r+0x2d4>
10017cc4:	f854 3c04 	ldr.w	r3, [r4, #-4]
10017cc8:	f023 0301 	bic.w	r3, r3, #1
10017ccc:	444b      	add	r3, r9
10017cce:	f1a0 0208 	sub.w	r2, r0, #8
10017cd2:	4293      	cmp	r3, r2
10017cd4:	f000 80b4 	beq.w	10017e40 <_realloc_r+0x210>
10017cd8:	1f3a      	subs	r2, r7, #4
10017cda:	2a24      	cmp	r2, #36	@ 0x24
10017cdc:	f200 80d7 	bhi.w	10017e8e <_realloc_r+0x25e>
10017ce0:	2a13      	cmp	r2, #19
10017ce2:	f200 80a2 	bhi.w	10017e2a <_realloc_r+0x1fa>
10017ce6:	4603      	mov	r3, r0
10017ce8:	4622      	mov	r2, r4
10017cea:	6811      	ldr	r1, [r2, #0]
10017cec:	6019      	str	r1, [r3, #0]
10017cee:	6851      	ldr	r1, [r2, #4]
10017cf0:	6059      	str	r1, [r3, #4]
10017cf2:	6892      	ldr	r2, [r2, #8]
10017cf4:	609a      	str	r2, [r3, #8]
10017cf6:	4621      	mov	r1, r4
10017cf8:	4640      	mov	r0, r8
10017cfa:	f7fb fd81 	bl	10013800 <_free_r>
10017cfe:	4640      	mov	r0, r8
10017d00:	f7fa fadc 	bl	100122bc <__malloc_unlock>
10017d04:	4630      	mov	r0, r6
10017d06:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017d0a:	f035 0507 	bics.w	r5, r5, #7
10017d0e:	d5a4      	bpl.n	10017c5a <_realloc_r+0x2a>
10017d10:	230c      	movs	r3, #12
10017d12:	f8c8 3000 	str.w	r3, [r8]
10017d16:	2600      	movs	r6, #0
10017d18:	e018      	b.n	10017d4c <_realloc_r+0x11c>
10017d1a:	461f      	mov	r7, r3
10017d1c:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
10017d20:	60d3      	str	r3, [r2, #12]
10017d22:	609a      	str	r2, [r3, #8]
10017d24:	f8d9 3004 	ldr.w	r3, [r9, #4]
10017d28:	1b7a      	subs	r2, r7, r5
10017d2a:	2a0f      	cmp	r2, #15
10017d2c:	f003 0301 	and.w	r3, r3, #1
10017d30:	eb09 0007 	add.w	r0, r9, r7
10017d34:	d81d      	bhi.n	10017d72 <_realloc_r+0x142>
10017d36:	433b      	orrs	r3, r7
10017d38:	f8c9 3004 	str.w	r3, [r9, #4]
10017d3c:	6843      	ldr	r3, [r0, #4]
10017d3e:	f043 0301 	orr.w	r3, r3, #1
10017d42:	6043      	str	r3, [r0, #4]
10017d44:	4640      	mov	r0, r8
10017d46:	f7fa fab9 	bl	100122bc <__malloc_unlock>
10017d4a:	4626      	mov	r6, r4
10017d4c:	4630      	mov	r0, r6
10017d4e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017d52:	07c9      	lsls	r1, r1, #31
10017d54:	d4ae      	bmi.n	10017cb4 <_realloc_r+0x84>
10017d56:	f854 3c08 	ldr.w	r3, [r4, #-8]
10017d5a:	eba9 0b03 	sub.w	fp, r9, r3
10017d5e:	f8db 3004 	ldr.w	r3, [fp, #4]
10017d62:	f023 0203 	bic.w	r2, r3, #3
10017d66:	e7a0      	b.n	10017caa <_realloc_r+0x7a>
10017d68:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017d6c:	4611      	mov	r1, r2
10017d6e:	f7f9 be9f 	b.w	10011ab0 <_malloc_r>
10017d72:	eb09 0105 	add.w	r1, r9, r5
10017d76:	432b      	orrs	r3, r5
10017d78:	f042 0201 	orr.w	r2, r2, #1
10017d7c:	f8c9 3004 	str.w	r3, [r9, #4]
10017d80:	604a      	str	r2, [r1, #4]
10017d82:	6843      	ldr	r3, [r0, #4]
10017d84:	f043 0301 	orr.w	r3, r3, #1
10017d88:	6043      	str	r3, [r0, #4]
10017d8a:	3108      	adds	r1, #8
10017d8c:	4640      	mov	r0, r8
10017d8e:	f7fb fd37 	bl	10013800 <_free_r>
10017d92:	e7d7      	b.n	10017d44 <_realloc_r+0x114>
10017d94:	f020 0003 	bic.w	r0, r0, #3
10017d98:	19c2      	adds	r2, r0, r7
10017d9a:	f105 0c10 	add.w	ip, r5, #16
10017d9e:	4562      	cmp	r2, ip
10017da0:	f280 8091 	bge.w	10017ec6 <_realloc_r+0x296>
10017da4:	07ca      	lsls	r2, r1, #31
10017da6:	d485      	bmi.n	10017cb4 <_realloc_r+0x84>
10017da8:	f854 2c08 	ldr.w	r2, [r4, #-8]
10017dac:	eba9 0b02 	sub.w	fp, r9, r2
10017db0:	f8db 2004 	ldr.w	r2, [fp, #4]
10017db4:	f022 0203 	bic.w	r2, r2, #3
10017db8:	4410      	add	r0, r2
10017dba:	eb00 0a07 	add.w	sl, r0, r7
10017dbe:	45d4      	cmp	ip, sl
10017dc0:	f73f af73 	bgt.w	10017caa <_realloc_r+0x7a>
10017dc4:	465e      	mov	r6, fp
10017dc6:	f8db 100c 	ldr.w	r1, [fp, #12]
10017dca:	f856 0f08 	ldr.w	r0, [r6, #8]!
10017dce:	1f3a      	subs	r2, r7, #4
10017dd0:	2a24      	cmp	r2, #36	@ 0x24
10017dd2:	60c1      	str	r1, [r0, #12]
10017dd4:	6088      	str	r0, [r1, #8]
10017dd6:	f200 80ae 	bhi.w	10017f36 <_realloc_r+0x306>
10017dda:	2a13      	cmp	r2, #19
10017ddc:	f240 80a9 	bls.w	10017f32 <_realloc_r+0x302>
10017de0:	6821      	ldr	r1, [r4, #0]
10017de2:	f8cb 1008 	str.w	r1, [fp, #8]
10017de6:	6861      	ldr	r1, [r4, #4]
10017de8:	f8cb 100c 	str.w	r1, [fp, #12]
10017dec:	2a1b      	cmp	r2, #27
10017dee:	f200 80a8 	bhi.w	10017f42 <_realloc_r+0x312>
10017df2:	3408      	adds	r4, #8
10017df4:	f10b 0210 	add.w	r2, fp, #16
10017df8:	6821      	ldr	r1, [r4, #0]
10017dfa:	6011      	str	r1, [r2, #0]
10017dfc:	6861      	ldr	r1, [r4, #4]
10017dfe:	6051      	str	r1, [r2, #4]
10017e00:	68a1      	ldr	r1, [r4, #8]
10017e02:	6091      	str	r1, [r2, #8]
10017e04:	eb0b 0105 	add.w	r1, fp, r5
10017e08:	ebaa 0205 	sub.w	r2, sl, r5
10017e0c:	f042 0201 	orr.w	r2, r2, #1
10017e10:	6099      	str	r1, [r3, #8]
10017e12:	604a      	str	r2, [r1, #4]
10017e14:	f8db 3004 	ldr.w	r3, [fp, #4]
10017e18:	f003 0301 	and.w	r3, r3, #1
10017e1c:	432b      	orrs	r3, r5
10017e1e:	4640      	mov	r0, r8
10017e20:	f8cb 3004 	str.w	r3, [fp, #4]
10017e24:	f7fa fa4a 	bl	100122bc <__malloc_unlock>
10017e28:	e790      	b.n	10017d4c <_realloc_r+0x11c>
10017e2a:	6823      	ldr	r3, [r4, #0]
10017e2c:	6003      	str	r3, [r0, #0]
10017e2e:	6863      	ldr	r3, [r4, #4]
10017e30:	6043      	str	r3, [r0, #4]
10017e32:	2a1b      	cmp	r2, #27
10017e34:	d83c      	bhi.n	10017eb0 <_realloc_r+0x280>
10017e36:	f104 0208 	add.w	r2, r4, #8
10017e3a:	f100 0308 	add.w	r3, r0, #8
10017e3e:	e754      	b.n	10017cea <_realloc_r+0xba>
10017e40:	f850 3c04 	ldr.w	r3, [r0, #-4]
10017e44:	f023 0303 	bic.w	r3, r3, #3
10017e48:	441f      	add	r7, r3
10017e4a:	e76b      	b.n	10017d24 <_realloc_r+0xf4>
10017e4c:	1f3a      	subs	r2, r7, #4
10017e4e:	465e      	mov	r6, fp
10017e50:	f8db 300c 	ldr.w	r3, [fp, #12]
10017e54:	f856 1f08 	ldr.w	r1, [r6, #8]!
10017e58:	2a24      	cmp	r2, #36	@ 0x24
10017e5a:	60cb      	str	r3, [r1, #12]
10017e5c:	6099      	str	r1, [r3, #8]
10017e5e:	d822      	bhi.n	10017ea6 <_realloc_r+0x276>
10017e60:	2a13      	cmp	r2, #19
10017e62:	d91e      	bls.n	10017ea2 <_realloc_r+0x272>
10017e64:	6823      	ldr	r3, [r4, #0]
10017e66:	f8cb 3008 	str.w	r3, [fp, #8]
10017e6a:	6863      	ldr	r3, [r4, #4]
10017e6c:	f8cb 300c 	str.w	r3, [fp, #12]
10017e70:	2a1b      	cmp	r2, #27
10017e72:	d83b      	bhi.n	10017eec <_realloc_r+0x2bc>
10017e74:	3408      	adds	r4, #8
10017e76:	f10b 0310 	add.w	r3, fp, #16
10017e7a:	6822      	ldr	r2, [r4, #0]
10017e7c:	601a      	str	r2, [r3, #0]
10017e7e:	6862      	ldr	r2, [r4, #4]
10017e80:	605a      	str	r2, [r3, #4]
10017e82:	68a2      	ldr	r2, [r4, #8]
10017e84:	609a      	str	r2, [r3, #8]
10017e86:	4634      	mov	r4, r6
10017e88:	4657      	mov	r7, sl
10017e8a:	46d9      	mov	r9, fp
10017e8c:	e74a      	b.n	10017d24 <_realloc_r+0xf4>
10017e8e:	4621      	mov	r1, r4
10017e90:	f7fe ffa8 	bl	10016de4 <memmove>
10017e94:	e72f      	b.n	10017cf6 <_realloc_r+0xc6>
10017e96:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
10017e9a:	1f3a      	subs	r2, r7, #4
10017e9c:	60cb      	str	r3, [r1, #12]
10017e9e:	6099      	str	r1, [r3, #8]
10017ea0:	e7d5      	b.n	10017e4e <_realloc_r+0x21e>
10017ea2:	4633      	mov	r3, r6
10017ea4:	e7e9      	b.n	10017e7a <_realloc_r+0x24a>
10017ea6:	4621      	mov	r1, r4
10017ea8:	4630      	mov	r0, r6
10017eaa:	f7fe ff9b 	bl	10016de4 <memmove>
10017eae:	e7ea      	b.n	10017e86 <_realloc_r+0x256>
10017eb0:	68a3      	ldr	r3, [r4, #8]
10017eb2:	6083      	str	r3, [r0, #8]
10017eb4:	68e3      	ldr	r3, [r4, #12]
10017eb6:	60c3      	str	r3, [r0, #12]
10017eb8:	2a24      	cmp	r2, #36	@ 0x24
10017eba:	d027      	beq.n	10017f0c <_realloc_r+0x2dc>
10017ebc:	f104 0210 	add.w	r2, r4, #16
10017ec0:	f100 0310 	add.w	r3, r0, #16
10017ec4:	e711      	b.n	10017cea <_realloc_r+0xba>
10017ec6:	eb09 0105 	add.w	r1, r9, r5
10017eca:	6099      	str	r1, [r3, #8]
10017ecc:	1b53      	subs	r3, r2, r5
10017ece:	f043 0301 	orr.w	r3, r3, #1
10017ed2:	604b      	str	r3, [r1, #4]
10017ed4:	f854 3c04 	ldr.w	r3, [r4, #-4]
10017ed8:	f003 0301 	and.w	r3, r3, #1
10017edc:	432b      	orrs	r3, r5
10017ede:	4640      	mov	r0, r8
10017ee0:	f844 3c04 	str.w	r3, [r4, #-4]
10017ee4:	f7fa f9ea 	bl	100122bc <__malloc_unlock>
10017ee8:	4626      	mov	r6, r4
10017eea:	e72f      	b.n	10017d4c <_realloc_r+0x11c>
10017eec:	68a3      	ldr	r3, [r4, #8]
10017eee:	f8cb 3010 	str.w	r3, [fp, #16]
10017ef2:	68e3      	ldr	r3, [r4, #12]
10017ef4:	f8cb 3014 	str.w	r3, [fp, #20]
10017ef8:	2a24      	cmp	r2, #36	@ 0x24
10017efa:	d010      	beq.n	10017f1e <_realloc_r+0x2ee>
10017efc:	3410      	adds	r4, #16
10017efe:	f10b 0318 	add.w	r3, fp, #24
10017f02:	e7ba      	b.n	10017e7a <_realloc_r+0x24a>
10017f04:	4640      	mov	r0, r8
10017f06:	f7fa f9d9 	bl	100122bc <__malloc_unlock>
10017f0a:	e704      	b.n	10017d16 <_realloc_r+0xe6>
10017f0c:	6923      	ldr	r3, [r4, #16]
10017f0e:	6103      	str	r3, [r0, #16]
10017f10:	6961      	ldr	r1, [r4, #20]
10017f12:	6141      	str	r1, [r0, #20]
10017f14:	f104 0218 	add.w	r2, r4, #24
10017f18:	f100 0318 	add.w	r3, r0, #24
10017f1c:	e6e5      	b.n	10017cea <_realloc_r+0xba>
10017f1e:	6923      	ldr	r3, [r4, #16]
10017f20:	f8cb 3018 	str.w	r3, [fp, #24]
10017f24:	6963      	ldr	r3, [r4, #20]
10017f26:	f8cb 301c 	str.w	r3, [fp, #28]
10017f2a:	3418      	adds	r4, #24
10017f2c:	f10b 0320 	add.w	r3, fp, #32
10017f30:	e7a3      	b.n	10017e7a <_realloc_r+0x24a>
10017f32:	4632      	mov	r2, r6
10017f34:	e760      	b.n	10017df8 <_realloc_r+0x1c8>
10017f36:	4621      	mov	r1, r4
10017f38:	4630      	mov	r0, r6
10017f3a:	f7fe ff53 	bl	10016de4 <memmove>
10017f3e:	4b07      	ldr	r3, [pc, #28]	@ (10017f5c <_realloc_r+0x32c>)
10017f40:	e760      	b.n	10017e04 <_realloc_r+0x1d4>
10017f42:	68a1      	ldr	r1, [r4, #8]
10017f44:	f8cb 1010 	str.w	r1, [fp, #16]
10017f48:	68e1      	ldr	r1, [r4, #12]
10017f4a:	f8cb 1014 	str.w	r1, [fp, #20]
10017f4e:	2a24      	cmp	r2, #36	@ 0x24
10017f50:	d006      	beq.n	10017f60 <_realloc_r+0x330>
10017f52:	3410      	adds	r4, #16
10017f54:	f10b 0218 	add.w	r2, fp, #24
10017f58:	e74e      	b.n	10017df8 <_realloc_r+0x1c8>
10017f5a:	bf00      	nop
10017f5c:	20000040 	.word	0x20000040
10017f60:	6922      	ldr	r2, [r4, #16]
10017f62:	f8cb 2018 	str.w	r2, [fp, #24]
10017f66:	6962      	ldr	r2, [r4, #20]
10017f68:	f8cb 201c 	str.w	r2, [fp, #28]
10017f6c:	3418      	adds	r4, #24
10017f6e:	f10b 0220 	add.w	r2, fp, #32
10017f72:	e741      	b.n	10017df8 <_realloc_r+0x1c8>

10017f74 <_fstat_r>:
10017f74:	b570      	push	{r4, r5, r6, lr}
10017f76:	460c      	mov	r4, r1
10017f78:	4d08      	ldr	r5, [pc, #32]	@ (10017f9c <_fstat_r+0x28>)
10017f7a:	4603      	mov	r3, r0
10017f7c:	2600      	movs	r6, #0
10017f7e:	4620      	mov	r0, r4
10017f80:	4611      	mov	r1, r2
10017f82:	461c      	mov	r4, r3
10017f84:	602e      	str	r6, [r5, #0]
10017f86:	f7f6 fc15 	bl	1000e7b4 <_fstat>
10017f8a:	1c43      	adds	r3, r0, #1
10017f8c:	d000      	beq.n	10017f90 <_fstat_r+0x1c>
10017f8e:	bd70      	pop	{r4, r5, r6, pc}
10017f90:	682b      	ldr	r3, [r5, #0]
10017f92:	2b00      	cmp	r3, #0
10017f94:	d0fb      	beq.n	10017f8e <_fstat_r+0x1a>
10017f96:	6023      	str	r3, [r4, #0]
10017f98:	bd70      	pop	{r4, r5, r6, pc}
10017f9a:	bf00      	nop
10017f9c:	2000173c 	.word	0x2000173c

10017fa0 <_isatty_r>:
10017fa0:	b538      	push	{r3, r4, r5, lr}
10017fa2:	4d07      	ldr	r5, [pc, #28]	@ (10017fc0 <_isatty_r+0x20>)
10017fa4:	2200      	movs	r2, #0
10017fa6:	4604      	mov	r4, r0
10017fa8:	4608      	mov	r0, r1
10017faa:	602a      	str	r2, [r5, #0]
10017fac:	f7f6 fbfa 	bl	1000e7a4 <_isatty>
10017fb0:	1c43      	adds	r3, r0, #1
10017fb2:	d000      	beq.n	10017fb6 <_isatty_r+0x16>
10017fb4:	bd38      	pop	{r3, r4, r5, pc}
10017fb6:	682b      	ldr	r3, [r5, #0]
10017fb8:	2b00      	cmp	r3, #0
10017fba:	d0fb      	beq.n	10017fb4 <_isatty_r+0x14>
10017fbc:	6023      	str	r3, [r4, #0]
10017fbe:	bd38      	pop	{r3, r4, r5, pc}
10017fc0:	2000173c 	.word	0x2000173c

10017fc4 <_lseek_r>:
10017fc4:	b538      	push	{r3, r4, r5, lr}
10017fc6:	460c      	mov	r4, r1
10017fc8:	4d08      	ldr	r5, [pc, #32]	@ (10017fec <_lseek_r+0x28>)
10017fca:	4684      	mov	ip, r0
10017fcc:	4611      	mov	r1, r2
10017fce:	4620      	mov	r0, r4
10017fd0:	461a      	mov	r2, r3
10017fd2:	2300      	movs	r3, #0
10017fd4:	602b      	str	r3, [r5, #0]
10017fd6:	4664      	mov	r4, ip
10017fd8:	f7f6 fbe8 	bl	1000e7ac <_lseek>
10017fdc:	1c43      	adds	r3, r0, #1
10017fde:	d000      	beq.n	10017fe2 <_lseek_r+0x1e>
10017fe0:	bd38      	pop	{r3, r4, r5, pc}
10017fe2:	682b      	ldr	r3, [r5, #0]
10017fe4:	2b00      	cmp	r3, #0
10017fe6:	d0fb      	beq.n	10017fe0 <_lseek_r+0x1c>
10017fe8:	6023      	str	r3, [r4, #0]
10017fea:	bd38      	pop	{r3, r4, r5, pc}
10017fec:	2000173c 	.word	0x2000173c

10017ff0 <_read_r>:
10017ff0:	b538      	push	{r3, r4, r5, lr}
10017ff2:	460c      	mov	r4, r1
10017ff4:	4d08      	ldr	r5, [pc, #32]	@ (10018018 <_read_r+0x28>)
10017ff6:	4684      	mov	ip, r0
10017ff8:	4611      	mov	r1, r2
10017ffa:	4620      	mov	r0, r4
10017ffc:	461a      	mov	r2, r3
10017ffe:	2300      	movs	r3, #0
10018000:	602b      	str	r3, [r5, #0]
10018002:	4664      	mov	r4, ip
10018004:	f7f6 fbda 	bl	1000e7bc <_read>
10018008:	1c43      	adds	r3, r0, #1
1001800a:	d000      	beq.n	1001800e <_read_r+0x1e>
1001800c:	bd38      	pop	{r3, r4, r5, pc}
1001800e:	682b      	ldr	r3, [r5, #0]
10018010:	2b00      	cmp	r3, #0
10018012:	d0fb      	beq.n	1001800c <_read_r+0x1c>
10018014:	6023      	str	r3, [r4, #0]
10018016:	bd38      	pop	{r3, r4, r5, pc}
10018018:	2000173c 	.word	0x2000173c

1001801c <fiprintf>:
1001801c:	b40e      	push	{r1, r2, r3}
1001801e:	b510      	push	{r4, lr}
10018020:	b083      	sub	sp, #12
10018022:	ab05      	add	r3, sp, #20
10018024:	4c06      	ldr	r4, [pc, #24]	@ (10018040 <fiprintf+0x24>)
10018026:	f853 2b04 	ldr.w	r2, [r3], #4
1001802a:	9301      	str	r3, [sp, #4]
1001802c:	4601      	mov	r1, r0
1001802e:	6820      	ldr	r0, [r4, #0]
10018030:	f7fd fe6e 	bl	10015d10 <_vfiprintf_r>
10018034:	b003      	add	sp, #12
10018036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001803a:	b003      	add	sp, #12
1001803c:	4770      	bx	lr
1001803e:	bf00      	nop
10018040:	200005b8 	.word	0x200005b8

10018044 <__fputwc>:
10018044:	b570      	push	{r4, r5, r6, lr}
10018046:	b082      	sub	sp, #8
10018048:	4606      	mov	r6, r0
1001804a:	460d      	mov	r5, r1
1001804c:	4614      	mov	r4, r2
1001804e:	f7fa f8af 	bl	100121b0 <__locale_mb_cur_max>
10018052:	2801      	cmp	r0, #1
10018054:	d102      	bne.n	1001805c <__fputwc+0x18>
10018056:	1e6b      	subs	r3, r5, #1
10018058:	2bfe      	cmp	r3, #254	@ 0xfe
1001805a:	d926      	bls.n	100180aa <__fputwc+0x66>
1001805c:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
10018060:	462a      	mov	r2, r5
10018062:	a901      	add	r1, sp, #4
10018064:	4630      	mov	r0, r6
10018066:	f7fa f839 	bl	100120dc <_wcrtomb_r>
1001806a:	1c43      	adds	r3, r0, #1
1001806c:	d020      	beq.n	100180b0 <__fputwc+0x6c>
1001806e:	b178      	cbz	r0, 10018090 <__fputwc+0x4c>
10018070:	68a3      	ldr	r3, [r4, #8]
10018072:	f89d 1004 	ldrb.w	r1, [sp, #4]
10018076:	3b01      	subs	r3, #1
10018078:	2b00      	cmp	r3, #0
1001807a:	60a3      	str	r3, [r4, #8]
1001807c:	da04      	bge.n	10018088 <__fputwc+0x44>
1001807e:	69a2      	ldr	r2, [r4, #24]
10018080:	4293      	cmp	r3, r2
10018082:	db08      	blt.n	10018096 <__fputwc+0x52>
10018084:	290a      	cmp	r1, #10
10018086:	d006      	beq.n	10018096 <__fputwc+0x52>
10018088:	6823      	ldr	r3, [r4, #0]
1001808a:	1c5a      	adds	r2, r3, #1
1001808c:	6022      	str	r2, [r4, #0]
1001808e:	7019      	strb	r1, [r3, #0]
10018090:	4628      	mov	r0, r5
10018092:	b002      	add	sp, #8
10018094:	bd70      	pop	{r4, r5, r6, pc}
10018096:	4622      	mov	r2, r4
10018098:	4630      	mov	r0, r6
1001809a:	f000 f841 	bl	10018120 <__swbuf_r>
1001809e:	3001      	adds	r0, #1
100180a0:	d1f6      	bne.n	10018090 <__fputwc+0x4c>
100180a2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100180a6:	b002      	add	sp, #8
100180a8:	bd70      	pop	{r4, r5, r6, pc}
100180aa:	f88d 5004 	strb.w	r5, [sp, #4]
100180ae:	e7df      	b.n	10018070 <__fputwc+0x2c>
100180b0:	89a3      	ldrh	r3, [r4, #12]
100180b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100180b6:	81a3      	strh	r3, [r4, #12]
100180b8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100180bc:	e7f3      	b.n	100180a6 <__fputwc+0x62>
100180be:	bf00      	nop

100180c0 <_fputwc_r>:
100180c0:	b530      	push	{r4, r5, lr}
100180c2:	4614      	mov	r4, r2
100180c4:	6e52      	ldr	r2, [r2, #100]	@ 0x64
100180c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100180ca:	4605      	mov	r5, r0
100180cc:	07d0      	lsls	r0, r2, #31
100180ce:	b083      	sub	sp, #12
100180d0:	d401      	bmi.n	100180d6 <_fputwc_r+0x16>
100180d2:	059a      	lsls	r2, r3, #22
100180d4:	d51c      	bpl.n	10018110 <_fputwc_r+0x50>
100180d6:	0498      	lsls	r0, r3, #18
100180d8:	d406      	bmi.n	100180e8 <_fputwc_r+0x28>
100180da:	6e62      	ldr	r2, [r4, #100]	@ 0x64
100180dc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
100180e0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
100180e4:	81a3      	strh	r3, [r4, #12]
100180e6:	6662      	str	r2, [r4, #100]	@ 0x64
100180e8:	4622      	mov	r2, r4
100180ea:	4628      	mov	r0, r5
100180ec:	f7ff ffaa 	bl	10018044 <__fputwc>
100180f0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100180f2:	07da      	lsls	r2, r3, #31
100180f4:	4605      	mov	r5, r0
100180f6:	d402      	bmi.n	100180fe <_fputwc_r+0x3e>
100180f8:	89a3      	ldrh	r3, [r4, #12]
100180fa:	059b      	lsls	r3, r3, #22
100180fc:	d502      	bpl.n	10018104 <_fputwc_r+0x44>
100180fe:	4628      	mov	r0, r5
10018100:	b003      	add	sp, #12
10018102:	bd30      	pop	{r4, r5, pc}
10018104:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10018106:	f7fa f851 	bl	100121ac <__retarget_lock_release_recursive>
1001810a:	4628      	mov	r0, r5
1001810c:	b003      	add	sp, #12
1001810e:	bd30      	pop	{r4, r5, pc}
10018110:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10018112:	9101      	str	r1, [sp, #4]
10018114:	f7fa f848 	bl	100121a8 <__retarget_lock_acquire_recursive>
10018118:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001811c:	9901      	ldr	r1, [sp, #4]
1001811e:	e7da      	b.n	100180d6 <_fputwc_r+0x16>

10018120 <__swbuf_r>:
10018120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10018122:	460d      	mov	r5, r1
10018124:	4614      	mov	r4, r2
10018126:	4606      	mov	r6, r0
10018128:	b110      	cbz	r0, 10018130 <__swbuf_r+0x10>
1001812a:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001812c:	2b00      	cmp	r3, #0
1001812e:	d04a      	beq.n	100181c6 <__swbuf_r+0xa6>
10018130:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10018134:	69a3      	ldr	r3, [r4, #24]
10018136:	60a3      	str	r3, [r4, #8]
10018138:	0710      	lsls	r0, r2, #28
1001813a:	d51b      	bpl.n	10018174 <__swbuf_r+0x54>
1001813c:	6923      	ldr	r3, [r4, #16]
1001813e:	b1cb      	cbz	r3, 10018174 <__swbuf_r+0x54>
10018140:	b2ed      	uxtb	r5, r5
10018142:	0491      	lsls	r1, r2, #18
10018144:	462f      	mov	r7, r5
10018146:	d521      	bpl.n	1001818c <__swbuf_r+0x6c>
10018148:	6822      	ldr	r2, [r4, #0]
1001814a:	6961      	ldr	r1, [r4, #20]
1001814c:	1ad3      	subs	r3, r2, r3
1001814e:	4299      	cmp	r1, r3
10018150:	dd28      	ble.n	100181a4 <__swbuf_r+0x84>
10018152:	3301      	adds	r3, #1
10018154:	68a1      	ldr	r1, [r4, #8]
10018156:	3901      	subs	r1, #1
10018158:	60a1      	str	r1, [r4, #8]
1001815a:	1c51      	adds	r1, r2, #1
1001815c:	6021      	str	r1, [r4, #0]
1001815e:	7015      	strb	r5, [r2, #0]
10018160:	6962      	ldr	r2, [r4, #20]
10018162:	429a      	cmp	r2, r3
10018164:	d026      	beq.n	100181b4 <__swbuf_r+0x94>
10018166:	89a3      	ldrh	r3, [r4, #12]
10018168:	07db      	lsls	r3, r3, #31
1001816a:	d501      	bpl.n	10018170 <__swbuf_r+0x50>
1001816c:	2d0a      	cmp	r5, #10
1001816e:	d021      	beq.n	100181b4 <__swbuf_r+0x94>
10018170:	4638      	mov	r0, r7
10018172:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10018174:	4621      	mov	r1, r4
10018176:	4630      	mov	r0, r6
10018178:	f7fe ff34 	bl	10016fe4 <__swsetup_r>
1001817c:	bb00      	cbnz	r0, 100181c0 <__swbuf_r+0xa0>
1001817e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10018182:	6923      	ldr	r3, [r4, #16]
10018184:	b2ed      	uxtb	r5, r5
10018186:	0491      	lsls	r1, r2, #18
10018188:	462f      	mov	r7, r5
1001818a:	d4dd      	bmi.n	10018148 <__swbuf_r+0x28>
1001818c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10018190:	81a2      	strh	r2, [r4, #12]
10018192:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10018194:	6961      	ldr	r1, [r4, #20]
10018196:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001819a:	6662      	str	r2, [r4, #100]	@ 0x64
1001819c:	6822      	ldr	r2, [r4, #0]
1001819e:	1ad3      	subs	r3, r2, r3
100181a0:	4299      	cmp	r1, r3
100181a2:	dcd6      	bgt.n	10018152 <__swbuf_r+0x32>
100181a4:	4621      	mov	r1, r4
100181a6:	4630      	mov	r0, r6
100181a8:	f7ff fd18 	bl	10017bdc <_fflush_r>
100181ac:	b940      	cbnz	r0, 100181c0 <__swbuf_r+0xa0>
100181ae:	6822      	ldr	r2, [r4, #0]
100181b0:	2301      	movs	r3, #1
100181b2:	e7cf      	b.n	10018154 <__swbuf_r+0x34>
100181b4:	4621      	mov	r1, r4
100181b6:	4630      	mov	r0, r6
100181b8:	f7ff fd10 	bl	10017bdc <_fflush_r>
100181bc:	2800      	cmp	r0, #0
100181be:	d0d7      	beq.n	10018170 <__swbuf_r+0x50>
100181c0:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
100181c4:	e7d4      	b.n	10018170 <__swbuf_r+0x50>
100181c6:	f7fb f8ed 	bl	100133a4 <__sinit>
100181ca:	e7b1      	b.n	10018130 <__swbuf_r+0x10>

100181cc <abort>:
100181cc:	b508      	push	{r3, lr}
100181ce:	2006      	movs	r0, #6
100181d0:	f000 f804 	bl	100181dc <raise>
100181d4:	2001      	movs	r0, #1
100181d6:	f000 f855 	bl	10018284 <_exit>
100181da:	bf00      	nop

100181dc <raise>:
100181dc:	b538      	push	{r3, r4, r5, lr}
100181de:	4b14      	ldr	r3, [pc, #80]	@ (10018230 <raise+0x54>)
100181e0:	281f      	cmp	r0, #31
100181e2:	681d      	ldr	r5, [r3, #0]
100181e4:	d81e      	bhi.n	10018224 <raise+0x48>
100181e6:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
100181ea:	4604      	mov	r4, r0
100181ec:	b162      	cbz	r2, 10018208 <raise+0x2c>
100181ee:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
100181f2:	b14b      	cbz	r3, 10018208 <raise+0x2c>
100181f4:	2b01      	cmp	r3, #1
100181f6:	d005      	beq.n	10018204 <raise+0x28>
100181f8:	1c59      	adds	r1, r3, #1
100181fa:	d00f      	beq.n	1001821c <raise+0x40>
100181fc:	2100      	movs	r1, #0
100181fe:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
10018202:	4798      	blx	r3
10018204:	2000      	movs	r0, #0
10018206:	bd38      	pop	{r3, r4, r5, pc}
10018208:	4628      	mov	r0, r5
1001820a:	f000 f829 	bl	10018260 <_getpid_r>
1001820e:	4622      	mov	r2, r4
10018210:	4601      	mov	r1, r0
10018212:	4628      	mov	r0, r5
10018214:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10018218:	f000 b80c 	b.w	10018234 <_kill_r>
1001821c:	2316      	movs	r3, #22
1001821e:	602b      	str	r3, [r5, #0]
10018220:	2001      	movs	r0, #1
10018222:	bd38      	pop	{r3, r4, r5, pc}
10018224:	2316      	movs	r3, #22
10018226:	602b      	str	r3, [r5, #0]
10018228:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001822c:	bd38      	pop	{r3, r4, r5, pc}
1001822e:	bf00      	nop
10018230:	200005b8 	.word	0x200005b8

10018234 <_kill_r>:
10018234:	b570      	push	{r4, r5, r6, lr}
10018236:	460c      	mov	r4, r1
10018238:	4d08      	ldr	r5, [pc, #32]	@ (1001825c <_kill_r+0x28>)
1001823a:	4603      	mov	r3, r0
1001823c:	2600      	movs	r6, #0
1001823e:	4620      	mov	r0, r4
10018240:	4611      	mov	r1, r2
10018242:	461c      	mov	r4, r3
10018244:	602e      	str	r6, [r5, #0]
10018246:	f000 f815 	bl	10018274 <_kill>
1001824a:	1c43      	adds	r3, r0, #1
1001824c:	d000      	beq.n	10018250 <_kill_r+0x1c>
1001824e:	bd70      	pop	{r4, r5, r6, pc}
10018250:	682b      	ldr	r3, [r5, #0]
10018252:	2b00      	cmp	r3, #0
10018254:	d0fb      	beq.n	1001824e <_kill_r+0x1a>
10018256:	6023      	str	r3, [r4, #0]
10018258:	bd70      	pop	{r4, r5, r6, pc}
1001825a:	bf00      	nop
1001825c:	2000173c 	.word	0x2000173c

10018260 <_getpid_r>:
10018260:	f000 b800 	b.w	10018264 <_getpid>

10018264 <_getpid>:
10018264:	4b02      	ldr	r3, [pc, #8]	@ (10018270 <_getpid+0xc>)
10018266:	2258      	movs	r2, #88	@ 0x58
10018268:	601a      	str	r2, [r3, #0]
1001826a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001826e:	4770      	bx	lr
10018270:	2000173c 	.word	0x2000173c

10018274 <_kill>:
10018274:	4b02      	ldr	r3, [pc, #8]	@ (10018280 <_kill+0xc>)
10018276:	2258      	movs	r2, #88	@ 0x58
10018278:	601a      	str	r2, [r3, #0]
1001827a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001827e:	4770      	bx	lr
10018280:	2000173c 	.word	0x2000173c

10018284 <_exit>:
10018284:	e7fe      	b.n	10018284 <_exit>
10018286:	bf00      	nop

10018288 <__aeabi_drsub>:
10018288:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
1001828c:	e002      	b.n	10018294 <__adddf3>
1001828e:	bf00      	nop

10018290 <__aeabi_dsub>:
10018290:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

10018294 <__adddf3>:
10018294:	b530      	push	{r4, r5, lr}
10018296:	ea4f 0441 	mov.w	r4, r1, lsl #1
1001829a:	ea4f 0543 	mov.w	r5, r3, lsl #1
1001829e:	ea94 0f05 	teq	r4, r5
100182a2:	bf08      	it	eq
100182a4:	ea90 0f02 	teqeq	r0, r2
100182a8:	bf1f      	itttt	ne
100182aa:	ea54 0c00 	orrsne.w	ip, r4, r0
100182ae:	ea55 0c02 	orrsne.w	ip, r5, r2
100182b2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
100182b6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
100182ba:	f000 80e2 	beq.w	10018482 <__adddf3+0x1ee>
100182be:	ea4f 5454 	mov.w	r4, r4, lsr #21
100182c2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
100182c6:	bfb8      	it	lt
100182c8:	426d      	neglt	r5, r5
100182ca:	dd0c      	ble.n	100182e6 <__adddf3+0x52>
100182cc:	442c      	add	r4, r5
100182ce:	ea80 0202 	eor.w	r2, r0, r2
100182d2:	ea81 0303 	eor.w	r3, r1, r3
100182d6:	ea82 0000 	eor.w	r0, r2, r0
100182da:	ea83 0101 	eor.w	r1, r3, r1
100182de:	ea80 0202 	eor.w	r2, r0, r2
100182e2:	ea81 0303 	eor.w	r3, r1, r3
100182e6:	2d36      	cmp	r5, #54	@ 0x36
100182e8:	bf88      	it	hi
100182ea:	bd30      	pophi	{r4, r5, pc}
100182ec:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
100182f0:	ea4f 3101 	mov.w	r1, r1, lsl #12
100182f4:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
100182f8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
100182fc:	d002      	beq.n	10018304 <__adddf3+0x70>
100182fe:	4240      	negs	r0, r0
10018300:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10018304:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
10018308:	ea4f 3303 	mov.w	r3, r3, lsl #12
1001830c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10018310:	d002      	beq.n	10018318 <__adddf3+0x84>
10018312:	4252      	negs	r2, r2
10018314:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10018318:	ea94 0f05 	teq	r4, r5
1001831c:	f000 80a7 	beq.w	1001846e <__adddf3+0x1da>
10018320:	f1a4 0401 	sub.w	r4, r4, #1
10018324:	f1d5 0e20 	rsbs	lr, r5, #32
10018328:	db0d      	blt.n	10018346 <__adddf3+0xb2>
1001832a:	fa02 fc0e 	lsl.w	ip, r2, lr
1001832e:	fa22 f205 	lsr.w	r2, r2, r5
10018332:	1880      	adds	r0, r0, r2
10018334:	f141 0100 	adc.w	r1, r1, #0
10018338:	fa03 f20e 	lsl.w	r2, r3, lr
1001833c:	1880      	adds	r0, r0, r2
1001833e:	fa43 f305 	asr.w	r3, r3, r5
10018342:	4159      	adcs	r1, r3
10018344:	e00e      	b.n	10018364 <__adddf3+0xd0>
10018346:	f1a5 0520 	sub.w	r5, r5, #32
1001834a:	f10e 0e20 	add.w	lr, lr, #32
1001834e:	2a01      	cmp	r2, #1
10018350:	fa03 fc0e 	lsl.w	ip, r3, lr
10018354:	bf28      	it	cs
10018356:	f04c 0c02 	orrcs.w	ip, ip, #2
1001835a:	fa43 f305 	asr.w	r3, r3, r5
1001835e:	18c0      	adds	r0, r0, r3
10018360:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10018364:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10018368:	d507      	bpl.n	1001837a <__adddf3+0xe6>
1001836a:	f04f 0e00 	mov.w	lr, #0
1001836e:	f1dc 0c00 	rsbs	ip, ip, #0
10018372:	eb7e 0000 	sbcs.w	r0, lr, r0
10018376:	eb6e 0101 	sbc.w	r1, lr, r1
1001837a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
1001837e:	d31b      	bcc.n	100183b8 <__adddf3+0x124>
10018380:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
10018384:	d30c      	bcc.n	100183a0 <__adddf3+0x10c>
10018386:	0849      	lsrs	r1, r1, #1
10018388:	ea5f 0030 	movs.w	r0, r0, rrx
1001838c:	ea4f 0c3c 	mov.w	ip, ip, rrx
10018390:	f104 0401 	add.w	r4, r4, #1
10018394:	ea4f 5244 	mov.w	r2, r4, lsl #21
10018398:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
1001839c:	f080 809a 	bcs.w	100184d4 <__adddf3+0x240>
100183a0:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
100183a4:	bf08      	it	eq
100183a6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
100183aa:	f150 0000 	adcs.w	r0, r0, #0
100183ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100183b2:	ea41 0105 	orr.w	r1, r1, r5
100183b6:	bd30      	pop	{r4, r5, pc}
100183b8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
100183bc:	4140      	adcs	r0, r0
100183be:	eb41 0101 	adc.w	r1, r1, r1
100183c2:	3c01      	subs	r4, #1
100183c4:	bf28      	it	cs
100183c6:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
100183ca:	d2e9      	bcs.n	100183a0 <__adddf3+0x10c>
100183cc:	f091 0f00 	teq	r1, #0
100183d0:	bf04      	itt	eq
100183d2:	4601      	moveq	r1, r0
100183d4:	2000      	moveq	r0, #0
100183d6:	fab1 f381 	clz	r3, r1
100183da:	bf08      	it	eq
100183dc:	3320      	addeq	r3, #32
100183de:	f1a3 030b 	sub.w	r3, r3, #11
100183e2:	f1b3 0220 	subs.w	r2, r3, #32
100183e6:	da0c      	bge.n	10018402 <__adddf3+0x16e>
100183e8:	320c      	adds	r2, #12
100183ea:	dd08      	ble.n	100183fe <__adddf3+0x16a>
100183ec:	f102 0c14 	add.w	ip, r2, #20
100183f0:	f1c2 020c 	rsb	r2, r2, #12
100183f4:	fa01 f00c 	lsl.w	r0, r1, ip
100183f8:	fa21 f102 	lsr.w	r1, r1, r2
100183fc:	e00c      	b.n	10018418 <__adddf3+0x184>
100183fe:	f102 0214 	add.w	r2, r2, #20
10018402:	bfd8      	it	le
10018404:	f1c2 0c20 	rsble	ip, r2, #32
10018408:	fa01 f102 	lsl.w	r1, r1, r2
1001840c:	fa20 fc0c 	lsr.w	ip, r0, ip
10018410:	bfdc      	itt	le
10018412:	ea41 010c 	orrle.w	r1, r1, ip
10018416:	4090      	lslle	r0, r2
10018418:	1ae4      	subs	r4, r4, r3
1001841a:	bfa2      	ittt	ge
1001841c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10018420:	4329      	orrge	r1, r5
10018422:	bd30      	popge	{r4, r5, pc}
10018424:	ea6f 0404 	mvn.w	r4, r4
10018428:	3c1f      	subs	r4, #31
1001842a:	da1c      	bge.n	10018466 <__adddf3+0x1d2>
1001842c:	340c      	adds	r4, #12
1001842e:	dc0e      	bgt.n	1001844e <__adddf3+0x1ba>
10018430:	f104 0414 	add.w	r4, r4, #20
10018434:	f1c4 0220 	rsb	r2, r4, #32
10018438:	fa20 f004 	lsr.w	r0, r0, r4
1001843c:	fa01 f302 	lsl.w	r3, r1, r2
10018440:	ea40 0003 	orr.w	r0, r0, r3
10018444:	fa21 f304 	lsr.w	r3, r1, r4
10018448:	ea45 0103 	orr.w	r1, r5, r3
1001844c:	bd30      	pop	{r4, r5, pc}
1001844e:	f1c4 040c 	rsb	r4, r4, #12
10018452:	f1c4 0220 	rsb	r2, r4, #32
10018456:	fa20 f002 	lsr.w	r0, r0, r2
1001845a:	fa01 f304 	lsl.w	r3, r1, r4
1001845e:	ea40 0003 	orr.w	r0, r0, r3
10018462:	4629      	mov	r1, r5
10018464:	bd30      	pop	{r4, r5, pc}
10018466:	fa21 f004 	lsr.w	r0, r1, r4
1001846a:	4629      	mov	r1, r5
1001846c:	bd30      	pop	{r4, r5, pc}
1001846e:	f094 0f00 	teq	r4, #0
10018472:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
10018476:	bf06      	itte	eq
10018478:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
1001847c:	3401      	addeq	r4, #1
1001847e:	3d01      	subne	r5, #1
10018480:	e74e      	b.n	10018320 <__adddf3+0x8c>
10018482:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10018486:	bf18      	it	ne
10018488:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1001848c:	d029      	beq.n	100184e2 <__adddf3+0x24e>
1001848e:	ea94 0f05 	teq	r4, r5
10018492:	bf08      	it	eq
10018494:	ea90 0f02 	teqeq	r0, r2
10018498:	d005      	beq.n	100184a6 <__adddf3+0x212>
1001849a:	ea54 0c00 	orrs.w	ip, r4, r0
1001849e:	bf04      	itt	eq
100184a0:	4619      	moveq	r1, r3
100184a2:	4610      	moveq	r0, r2
100184a4:	bd30      	pop	{r4, r5, pc}
100184a6:	ea91 0f03 	teq	r1, r3
100184aa:	bf1e      	ittt	ne
100184ac:	2100      	movne	r1, #0
100184ae:	2000      	movne	r0, #0
100184b0:	bd30      	popne	{r4, r5, pc}
100184b2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
100184b6:	d105      	bne.n	100184c4 <__adddf3+0x230>
100184b8:	0040      	lsls	r0, r0, #1
100184ba:	4149      	adcs	r1, r1
100184bc:	bf28      	it	cs
100184be:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
100184c2:	bd30      	pop	{r4, r5, pc}
100184c4:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
100184c8:	bf3c      	itt	cc
100184ca:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
100184ce:	bd30      	popcc	{r4, r5, pc}
100184d0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
100184d4:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
100184d8:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
100184dc:	f04f 0000 	mov.w	r0, #0
100184e0:	bd30      	pop	{r4, r5, pc}
100184e2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
100184e6:	bf1a      	itte	ne
100184e8:	4619      	movne	r1, r3
100184ea:	4610      	movne	r0, r2
100184ec:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
100184f0:	bf1c      	itt	ne
100184f2:	460b      	movne	r3, r1
100184f4:	4602      	movne	r2, r0
100184f6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
100184fa:	bf06      	itte	eq
100184fc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10018500:	ea91 0f03 	teqeq	r1, r3
10018504:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
10018508:	bd30      	pop	{r4, r5, pc}
1001850a:	bf00      	nop

1001850c <__aeabi_ui2d>:
1001850c:	f090 0f00 	teq	r0, #0
10018510:	bf04      	itt	eq
10018512:	2100      	moveq	r1, #0
10018514:	4770      	bxeq	lr
10018516:	b530      	push	{r4, r5, lr}
10018518:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001851c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
10018520:	f04f 0500 	mov.w	r5, #0
10018524:	f04f 0100 	mov.w	r1, #0
10018528:	e750      	b.n	100183cc <__adddf3+0x138>
1001852a:	bf00      	nop

1001852c <__aeabi_i2d>:
1001852c:	f090 0f00 	teq	r0, #0
10018530:	bf04      	itt	eq
10018532:	2100      	moveq	r1, #0
10018534:	4770      	bxeq	lr
10018536:	b530      	push	{r4, r5, lr}
10018538:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001853c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
10018540:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
10018544:	bf48      	it	mi
10018546:	4240      	negmi	r0, r0
10018548:	f04f 0100 	mov.w	r1, #0
1001854c:	e73e      	b.n	100183cc <__adddf3+0x138>
1001854e:	bf00      	nop

10018550 <__aeabi_f2d>:
10018550:	0042      	lsls	r2, r0, #1
10018552:	ea4f 01e2 	mov.w	r1, r2, asr #3
10018556:	ea4f 0131 	mov.w	r1, r1, rrx
1001855a:	ea4f 7002 	mov.w	r0, r2, lsl #28
1001855e:	bf1f      	itttt	ne
10018560:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
10018564:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
10018568:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
1001856c:	4770      	bxne	lr
1001856e:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
10018572:	bf08      	it	eq
10018574:	4770      	bxeq	lr
10018576:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
1001857a:	bf04      	itt	eq
1001857c:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
10018580:	4770      	bxeq	lr
10018582:	b530      	push	{r4, r5, lr}
10018584:	f44f 7460 	mov.w	r4, #896	@ 0x380
10018588:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001858c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
10018590:	e71c      	b.n	100183cc <__adddf3+0x138>
10018592:	bf00      	nop

10018594 <__aeabi_ul2d>:
10018594:	ea50 0201 	orrs.w	r2, r0, r1
10018598:	bf08      	it	eq
1001859a:	4770      	bxeq	lr
1001859c:	b530      	push	{r4, r5, lr}
1001859e:	f04f 0500 	mov.w	r5, #0
100185a2:	e00a      	b.n	100185ba <__aeabi_l2d+0x16>

100185a4 <__aeabi_l2d>:
100185a4:	ea50 0201 	orrs.w	r2, r0, r1
100185a8:	bf08      	it	eq
100185aa:	4770      	bxeq	lr
100185ac:	b530      	push	{r4, r5, lr}
100185ae:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
100185b2:	d502      	bpl.n	100185ba <__aeabi_l2d+0x16>
100185b4:	4240      	negs	r0, r0
100185b6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
100185ba:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100185be:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100185c2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
100185c6:	f43f aed8 	beq.w	1001837a <__adddf3+0xe6>
100185ca:	f04f 0203 	mov.w	r2, #3
100185ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100185d2:	bf18      	it	ne
100185d4:	3203      	addne	r2, #3
100185d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100185da:	bf18      	it	ne
100185dc:	3203      	addne	r2, #3
100185de:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
100185e2:	f1c2 0320 	rsb	r3, r2, #32
100185e6:	fa00 fc03 	lsl.w	ip, r0, r3
100185ea:	fa20 f002 	lsr.w	r0, r0, r2
100185ee:	fa01 fe03 	lsl.w	lr, r1, r3
100185f2:	ea40 000e 	orr.w	r0, r0, lr
100185f6:	fa21 f102 	lsr.w	r1, r1, r2
100185fa:	4414      	add	r4, r2
100185fc:	e6bd      	b.n	1001837a <__adddf3+0xe6>
100185fe:	bf00      	nop

10018600 <__aeabi_dmul>:
10018600:	b570      	push	{r4, r5, r6, lr}
10018602:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10018606:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001860a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001860e:	bf1d      	ittte	ne
10018610:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10018614:	ea94 0f0c 	teqne	r4, ip
10018618:	ea95 0f0c 	teqne	r5, ip
1001861c:	f000 f8de 	bleq	100187dc <__aeabi_dmul+0x1dc>
10018620:	442c      	add	r4, r5
10018622:	ea81 0603 	eor.w	r6, r1, r3
10018626:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1001862a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1001862e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
10018632:	bf18      	it	ne
10018634:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10018638:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001863c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
10018640:	d038      	beq.n	100186b4 <__aeabi_dmul+0xb4>
10018642:	fba0 ce02 	umull	ip, lr, r0, r2
10018646:	f04f 0500 	mov.w	r5, #0
1001864a:	fbe1 e502 	umlal	lr, r5, r1, r2
1001864e:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
10018652:	fbe0 e503 	umlal	lr, r5, r0, r3
10018656:	f04f 0600 	mov.w	r6, #0
1001865a:	fbe1 5603 	umlal	r5, r6, r1, r3
1001865e:	f09c 0f00 	teq	ip, #0
10018662:	bf18      	it	ne
10018664:	f04e 0e01 	orrne.w	lr, lr, #1
10018668:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
1001866c:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
10018670:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
10018674:	d204      	bcs.n	10018680 <__aeabi_dmul+0x80>
10018676:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1001867a:	416d      	adcs	r5, r5
1001867c:	eb46 0606 	adc.w	r6, r6, r6
10018680:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10018684:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10018688:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1001868c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10018690:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10018694:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10018698:	bf88      	it	hi
1001869a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001869e:	d81e      	bhi.n	100186de <__aeabi_dmul+0xde>
100186a0:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
100186a4:	bf08      	it	eq
100186a6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
100186aa:	f150 0000 	adcs.w	r0, r0, #0
100186ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100186b2:	bd70      	pop	{r4, r5, r6, pc}
100186b4:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
100186b8:	ea46 0101 	orr.w	r1, r6, r1
100186bc:	ea40 0002 	orr.w	r0, r0, r2
100186c0:	ea81 0103 	eor.w	r1, r1, r3
100186c4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
100186c8:	bfc2      	ittt	gt
100186ca:	ebd4 050c 	rsbsgt	r5, r4, ip
100186ce:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
100186d2:	bd70      	popgt	{r4, r5, r6, pc}
100186d4:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100186d8:	f04f 0e00 	mov.w	lr, #0
100186dc:	3c01      	subs	r4, #1
100186de:	f300 80ab 	bgt.w	10018838 <__aeabi_dmul+0x238>
100186e2:	f114 0f36 	cmn.w	r4, #54	@ 0x36
100186e6:	bfde      	ittt	le
100186e8:	2000      	movle	r0, #0
100186ea:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
100186ee:	bd70      	pople	{r4, r5, r6, pc}
100186f0:	f1c4 0400 	rsb	r4, r4, #0
100186f4:	3c20      	subs	r4, #32
100186f6:	da35      	bge.n	10018764 <__aeabi_dmul+0x164>
100186f8:	340c      	adds	r4, #12
100186fa:	dc1b      	bgt.n	10018734 <__aeabi_dmul+0x134>
100186fc:	f104 0414 	add.w	r4, r4, #20
10018700:	f1c4 0520 	rsb	r5, r4, #32
10018704:	fa00 f305 	lsl.w	r3, r0, r5
10018708:	fa20 f004 	lsr.w	r0, r0, r4
1001870c:	fa01 f205 	lsl.w	r2, r1, r5
10018710:	ea40 0002 	orr.w	r0, r0, r2
10018714:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
10018718:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001871c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10018720:	fa21 f604 	lsr.w	r6, r1, r4
10018724:	eb42 0106 	adc.w	r1, r2, r6
10018728:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001872c:	bf08      	it	eq
1001872e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10018732:	bd70      	pop	{r4, r5, r6, pc}
10018734:	f1c4 040c 	rsb	r4, r4, #12
10018738:	f1c4 0520 	rsb	r5, r4, #32
1001873c:	fa00 f304 	lsl.w	r3, r0, r4
10018740:	fa20 f005 	lsr.w	r0, r0, r5
10018744:	fa01 f204 	lsl.w	r2, r1, r4
10018748:	ea40 0002 	orr.w	r0, r0, r2
1001874c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10018750:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10018754:	f141 0100 	adc.w	r1, r1, #0
10018758:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001875c:	bf08      	it	eq
1001875e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10018762:	bd70      	pop	{r4, r5, r6, pc}
10018764:	f1c4 0520 	rsb	r5, r4, #32
10018768:	fa00 f205 	lsl.w	r2, r0, r5
1001876c:	ea4e 0e02 	orr.w	lr, lr, r2
10018770:	fa20 f304 	lsr.w	r3, r0, r4
10018774:	fa01 f205 	lsl.w	r2, r1, r5
10018778:	ea43 0302 	orr.w	r3, r3, r2
1001877c:	fa21 f004 	lsr.w	r0, r1, r4
10018780:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10018784:	fa21 f204 	lsr.w	r2, r1, r4
10018788:	ea20 0002 	bic.w	r0, r0, r2
1001878c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10018790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10018794:	bf08      	it	eq
10018796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001879a:	bd70      	pop	{r4, r5, r6, pc}
1001879c:	f094 0f00 	teq	r4, #0
100187a0:	d10f      	bne.n	100187c2 <__aeabi_dmul+0x1c2>
100187a2:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
100187a6:	0040      	lsls	r0, r0, #1
100187a8:	eb41 0101 	adc.w	r1, r1, r1
100187ac:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
100187b0:	bf08      	it	eq
100187b2:	3c01      	subeq	r4, #1
100187b4:	d0f7      	beq.n	100187a6 <__aeabi_dmul+0x1a6>
100187b6:	ea41 0106 	orr.w	r1, r1, r6
100187ba:	f095 0f00 	teq	r5, #0
100187be:	bf18      	it	ne
100187c0:	4770      	bxne	lr
100187c2:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
100187c6:	0052      	lsls	r2, r2, #1
100187c8:	eb43 0303 	adc.w	r3, r3, r3
100187cc:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
100187d0:	bf08      	it	eq
100187d2:	3d01      	subeq	r5, #1
100187d4:	d0f7      	beq.n	100187c6 <__aeabi_dmul+0x1c6>
100187d6:	ea43 0306 	orr.w	r3, r3, r6
100187da:	4770      	bx	lr
100187dc:	ea94 0f0c 	teq	r4, ip
100187e0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100187e4:	bf18      	it	ne
100187e6:	ea95 0f0c 	teqne	r5, ip
100187ea:	d00c      	beq.n	10018806 <__aeabi_dmul+0x206>
100187ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100187f0:	bf18      	it	ne
100187f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100187f6:	d1d1      	bne.n	1001879c <__aeabi_dmul+0x19c>
100187f8:	ea81 0103 	eor.w	r1, r1, r3
100187fc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10018800:	f04f 0000 	mov.w	r0, #0
10018804:	bd70      	pop	{r4, r5, r6, pc}
10018806:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001880a:	bf06      	itte	eq
1001880c:	4610      	moveq	r0, r2
1001880e:	4619      	moveq	r1, r3
10018810:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10018814:	d019      	beq.n	1001884a <__aeabi_dmul+0x24a>
10018816:	ea94 0f0c 	teq	r4, ip
1001881a:	d102      	bne.n	10018822 <__aeabi_dmul+0x222>
1001881c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10018820:	d113      	bne.n	1001884a <__aeabi_dmul+0x24a>
10018822:	ea95 0f0c 	teq	r5, ip
10018826:	d105      	bne.n	10018834 <__aeabi_dmul+0x234>
10018828:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1001882c:	bf1c      	itt	ne
1001882e:	4610      	movne	r0, r2
10018830:	4619      	movne	r1, r3
10018832:	d10a      	bne.n	1001884a <__aeabi_dmul+0x24a>
10018834:	ea81 0103 	eor.w	r1, r1, r3
10018838:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001883c:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
10018840:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
10018844:	f04f 0000 	mov.w	r0, #0
10018848:	bd70      	pop	{r4, r5, r6, pc}
1001884a:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001884e:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
10018852:	bd70      	pop	{r4, r5, r6, pc}

10018854 <__aeabi_ddiv>:
10018854:	b570      	push	{r4, r5, r6, lr}
10018856:	f04f 0cff 	mov.w	ip, #255	@ 0xff
1001885a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001885e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10018862:	bf1d      	ittte	ne
10018864:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10018868:	ea94 0f0c 	teqne	r4, ip
1001886c:	ea95 0f0c 	teqne	r5, ip
10018870:	f000 f8a7 	bleq	100189c2 <__aeabi_ddiv+0x16e>
10018874:	eba4 0405 	sub.w	r4, r4, r5
10018878:	ea81 0e03 	eor.w	lr, r1, r3
1001887c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10018880:	ea4f 3101 	mov.w	r1, r1, lsl #12
10018884:	f000 8088 	beq.w	10018998 <__aeabi_ddiv+0x144>
10018888:	ea4f 3303 	mov.w	r3, r3, lsl #12
1001888c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
10018890:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10018894:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10018898:	ea4f 2202 	mov.w	r2, r2, lsl #8
1001889c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
100188a0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
100188a4:	ea4f 2600 	mov.w	r6, r0, lsl #8
100188a8:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
100188ac:	429d      	cmp	r5, r3
100188ae:	bf08      	it	eq
100188b0:	4296      	cmpeq	r6, r2
100188b2:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
100188b6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
100188ba:	d202      	bcs.n	100188c2 <__aeabi_ddiv+0x6e>
100188bc:	085b      	lsrs	r3, r3, #1
100188be:	ea4f 0232 	mov.w	r2, r2, rrx
100188c2:	1ab6      	subs	r6, r6, r2
100188c4:	eb65 0503 	sbc.w	r5, r5, r3
100188c8:	085b      	lsrs	r3, r3, #1
100188ca:	ea4f 0232 	mov.w	r2, r2, rrx
100188ce:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
100188d2:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
100188d6:	ebb6 0e02 	subs.w	lr, r6, r2
100188da:	eb75 0e03 	sbcs.w	lr, r5, r3
100188de:	bf22      	ittt	cs
100188e0:	1ab6      	subcs	r6, r6, r2
100188e2:	4675      	movcs	r5, lr
100188e4:	ea40 000c 	orrcs.w	r0, r0, ip
100188e8:	085b      	lsrs	r3, r3, #1
100188ea:	ea4f 0232 	mov.w	r2, r2, rrx
100188ee:	ebb6 0e02 	subs.w	lr, r6, r2
100188f2:	eb75 0e03 	sbcs.w	lr, r5, r3
100188f6:	bf22      	ittt	cs
100188f8:	1ab6      	subcs	r6, r6, r2
100188fa:	4675      	movcs	r5, lr
100188fc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10018900:	085b      	lsrs	r3, r3, #1
10018902:	ea4f 0232 	mov.w	r2, r2, rrx
10018906:	ebb6 0e02 	subs.w	lr, r6, r2
1001890a:	eb75 0e03 	sbcs.w	lr, r5, r3
1001890e:	bf22      	ittt	cs
10018910:	1ab6      	subcs	r6, r6, r2
10018912:	4675      	movcs	r5, lr
10018914:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10018918:	085b      	lsrs	r3, r3, #1
1001891a:	ea4f 0232 	mov.w	r2, r2, rrx
1001891e:	ebb6 0e02 	subs.w	lr, r6, r2
10018922:	eb75 0e03 	sbcs.w	lr, r5, r3
10018926:	bf22      	ittt	cs
10018928:	1ab6      	subcs	r6, r6, r2
1001892a:	4675      	movcs	r5, lr
1001892c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10018930:	ea55 0e06 	orrs.w	lr, r5, r6
10018934:	d018      	beq.n	10018968 <__aeabi_ddiv+0x114>
10018936:	ea4f 1505 	mov.w	r5, r5, lsl #4
1001893a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1001893e:	ea4f 1606 	mov.w	r6, r6, lsl #4
10018942:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10018946:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1001894a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1001894e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10018952:	d1c0      	bne.n	100188d6 <__aeabi_ddiv+0x82>
10018954:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10018958:	d10b      	bne.n	10018972 <__aeabi_ddiv+0x11e>
1001895a:	ea41 0100 	orr.w	r1, r1, r0
1001895e:	f04f 0000 	mov.w	r0, #0
10018962:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
10018966:	e7b6      	b.n	100188d6 <__aeabi_ddiv+0x82>
10018968:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001896c:	bf04      	itt	eq
1001896e:	4301      	orreq	r1, r0
10018970:	2000      	moveq	r0, #0
10018972:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10018976:	bf88      	it	hi
10018978:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001897c:	f63f aeaf 	bhi.w	100186de <__aeabi_dmul+0xde>
10018980:	ebb5 0c03 	subs.w	ip, r5, r3
10018984:	bf04      	itt	eq
10018986:	ebb6 0c02 	subseq.w	ip, r6, r2
1001898a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1001898e:	f150 0000 	adcs.w	r0, r0, #0
10018992:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10018996:	bd70      	pop	{r4, r5, r6, pc}
10018998:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
1001899c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
100189a0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
100189a4:	bfc2      	ittt	gt
100189a6:	ebd4 050c 	rsbsgt	r5, r4, ip
100189aa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
100189ae:	bd70      	popgt	{r4, r5, r6, pc}
100189b0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100189b4:	f04f 0e00 	mov.w	lr, #0
100189b8:	3c01      	subs	r4, #1
100189ba:	e690      	b.n	100186de <__aeabi_dmul+0xde>
100189bc:	ea45 0e06 	orr.w	lr, r5, r6
100189c0:	e68d      	b.n	100186de <__aeabi_dmul+0xde>
100189c2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100189c6:	ea94 0f0c 	teq	r4, ip
100189ca:	bf08      	it	eq
100189cc:	ea95 0f0c 	teqeq	r5, ip
100189d0:	f43f af3b 	beq.w	1001884a <__aeabi_dmul+0x24a>
100189d4:	ea94 0f0c 	teq	r4, ip
100189d8:	d10a      	bne.n	100189f0 <__aeabi_ddiv+0x19c>
100189da:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
100189de:	f47f af34 	bne.w	1001884a <__aeabi_dmul+0x24a>
100189e2:	ea95 0f0c 	teq	r5, ip
100189e6:	f47f af25 	bne.w	10018834 <__aeabi_dmul+0x234>
100189ea:	4610      	mov	r0, r2
100189ec:	4619      	mov	r1, r3
100189ee:	e72c      	b.n	1001884a <__aeabi_dmul+0x24a>
100189f0:	ea95 0f0c 	teq	r5, ip
100189f4:	d106      	bne.n	10018a04 <__aeabi_ddiv+0x1b0>
100189f6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100189fa:	f43f aefd 	beq.w	100187f8 <__aeabi_dmul+0x1f8>
100189fe:	4610      	mov	r0, r2
10018a00:	4619      	mov	r1, r3
10018a02:	e722      	b.n	1001884a <__aeabi_dmul+0x24a>
10018a04:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10018a08:	bf18      	it	ne
10018a0a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10018a0e:	f47f aec5 	bne.w	1001879c <__aeabi_dmul+0x19c>
10018a12:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10018a16:	f47f af0d 	bne.w	10018834 <__aeabi_dmul+0x234>
10018a1a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10018a1e:	f47f aeeb 	bne.w	100187f8 <__aeabi_dmul+0x1f8>
10018a22:	e712      	b.n	1001884a <__aeabi_dmul+0x24a>

10018a24 <__gedf2>:
10018a24:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
10018a28:	e006      	b.n	10018a38 <__cmpdf2+0x4>
10018a2a:	bf00      	nop

10018a2c <__ledf2>:
10018a2c:	f04f 0c01 	mov.w	ip, #1
10018a30:	e002      	b.n	10018a38 <__cmpdf2+0x4>
10018a32:	bf00      	nop

10018a34 <__cmpdf2>:
10018a34:	f04f 0c01 	mov.w	ip, #1
10018a38:	f84d cd04 	str.w	ip, [sp, #-4]!
10018a3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10018a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018a44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10018a48:	bf18      	it	ne
10018a4a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10018a4e:	d01b      	beq.n	10018a88 <__cmpdf2+0x54>
10018a50:	b001      	add	sp, #4
10018a52:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10018a56:	bf0c      	ite	eq
10018a58:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10018a5c:	ea91 0f03 	teqne	r1, r3
10018a60:	bf02      	ittt	eq
10018a62:	ea90 0f02 	teqeq	r0, r2
10018a66:	2000      	moveq	r0, #0
10018a68:	4770      	bxeq	lr
10018a6a:	f110 0f00 	cmn.w	r0, #0
10018a6e:	ea91 0f03 	teq	r1, r3
10018a72:	bf58      	it	pl
10018a74:	4299      	cmppl	r1, r3
10018a76:	bf08      	it	eq
10018a78:	4290      	cmpeq	r0, r2
10018a7a:	bf2c      	ite	cs
10018a7c:	17d8      	asrcs	r0, r3, #31
10018a7e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10018a82:	f040 0001 	orr.w	r0, r0, #1
10018a86:	4770      	bx	lr
10018a88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10018a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018a90:	d102      	bne.n	10018a98 <__cmpdf2+0x64>
10018a92:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10018a96:	d107      	bne.n	10018aa8 <__cmpdf2+0x74>
10018a98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10018a9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018aa0:	d1d6      	bne.n	10018a50 <__cmpdf2+0x1c>
10018aa2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10018aa6:	d0d3      	beq.n	10018a50 <__cmpdf2+0x1c>
10018aa8:	f85d 0b04 	ldr.w	r0, [sp], #4
10018aac:	4770      	bx	lr
10018aae:	bf00      	nop

10018ab0 <__aeabi_cdrcmple>:
10018ab0:	4684      	mov	ip, r0
10018ab2:	4610      	mov	r0, r2
10018ab4:	4662      	mov	r2, ip
10018ab6:	468c      	mov	ip, r1
10018ab8:	4619      	mov	r1, r3
10018aba:	4663      	mov	r3, ip
10018abc:	e000      	b.n	10018ac0 <__aeabi_cdcmpeq>
10018abe:	bf00      	nop

10018ac0 <__aeabi_cdcmpeq>:
10018ac0:	b501      	push	{r0, lr}
10018ac2:	f7ff ffb7 	bl	10018a34 <__cmpdf2>
10018ac6:	2800      	cmp	r0, #0
10018ac8:	bf48      	it	mi
10018aca:	f110 0f00 	cmnmi.w	r0, #0
10018ace:	bd01      	pop	{r0, pc}

10018ad0 <__aeabi_dcmpeq>:
10018ad0:	f84d ed08 	str.w	lr, [sp, #-8]!
10018ad4:	f7ff fff4 	bl	10018ac0 <__aeabi_cdcmpeq>
10018ad8:	bf0c      	ite	eq
10018ada:	2001      	moveq	r0, #1
10018adc:	2000      	movne	r0, #0
10018ade:	f85d fb08 	ldr.w	pc, [sp], #8
10018ae2:	bf00      	nop

10018ae4 <__aeabi_dcmplt>:
10018ae4:	f84d ed08 	str.w	lr, [sp, #-8]!
10018ae8:	f7ff ffea 	bl	10018ac0 <__aeabi_cdcmpeq>
10018aec:	bf34      	ite	cc
10018aee:	2001      	movcc	r0, #1
10018af0:	2000      	movcs	r0, #0
10018af2:	f85d fb08 	ldr.w	pc, [sp], #8
10018af6:	bf00      	nop

10018af8 <__aeabi_dcmple>:
10018af8:	f84d ed08 	str.w	lr, [sp, #-8]!
10018afc:	f7ff ffe0 	bl	10018ac0 <__aeabi_cdcmpeq>
10018b00:	bf94      	ite	ls
10018b02:	2001      	movls	r0, #1
10018b04:	2000      	movhi	r0, #0
10018b06:	f85d fb08 	ldr.w	pc, [sp], #8
10018b0a:	bf00      	nop

10018b0c <__aeabi_dcmpge>:
10018b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
10018b10:	f7ff ffce 	bl	10018ab0 <__aeabi_cdrcmple>
10018b14:	bf94      	ite	ls
10018b16:	2001      	movls	r0, #1
10018b18:	2000      	movhi	r0, #0
10018b1a:	f85d fb08 	ldr.w	pc, [sp], #8
10018b1e:	bf00      	nop

10018b20 <__aeabi_dcmpgt>:
10018b20:	f84d ed08 	str.w	lr, [sp, #-8]!
10018b24:	f7ff ffc4 	bl	10018ab0 <__aeabi_cdrcmple>
10018b28:	bf34      	ite	cc
10018b2a:	2001      	movcc	r0, #1
10018b2c:	2000      	movcs	r0, #0
10018b2e:	f85d fb08 	ldr.w	pc, [sp], #8
10018b32:	bf00      	nop

10018b34 <__aeabi_dcmpun>:
10018b34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10018b38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018b3c:	d102      	bne.n	10018b44 <__aeabi_dcmpun+0x10>
10018b3e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10018b42:	d10a      	bne.n	10018b5a <__aeabi_dcmpun+0x26>
10018b44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10018b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018b4c:	d102      	bne.n	10018b54 <__aeabi_dcmpun+0x20>
10018b4e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10018b52:	d102      	bne.n	10018b5a <__aeabi_dcmpun+0x26>
10018b54:	f04f 0000 	mov.w	r0, #0
10018b58:	4770      	bx	lr
10018b5a:	f04f 0001 	mov.w	r0, #1
10018b5e:	4770      	bx	lr

10018b60 <__aeabi_d2iz>:
10018b60:	ea4f 0241 	mov.w	r2, r1, lsl #1
10018b64:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10018b68:	d215      	bcs.n	10018b96 <__aeabi_d2iz+0x36>
10018b6a:	d511      	bpl.n	10018b90 <__aeabi_d2iz+0x30>
10018b6c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10018b70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10018b74:	d912      	bls.n	10018b9c <__aeabi_d2iz+0x3c>
10018b76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10018b7a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10018b7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10018b82:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10018b86:	fa23 f002 	lsr.w	r0, r3, r2
10018b8a:	bf18      	it	ne
10018b8c:	4240      	negne	r0, r0
10018b8e:	4770      	bx	lr
10018b90:	f04f 0000 	mov.w	r0, #0
10018b94:	4770      	bx	lr
10018b96:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10018b9a:	d105      	bne.n	10018ba8 <__aeabi_d2iz+0x48>
10018b9c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
10018ba0:	bf08      	it	eq
10018ba2:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
10018ba6:	4770      	bx	lr
10018ba8:	f04f 0000 	mov.w	r0, #0
10018bac:	4770      	bx	lr
10018bae:	bf00      	nop

10018bb0 <__aeabi_uldivmod>:
10018bb0:	b953      	cbnz	r3, 10018bc8 <__aeabi_uldivmod+0x18>
10018bb2:	b94a      	cbnz	r2, 10018bc8 <__aeabi_uldivmod+0x18>
10018bb4:	2900      	cmp	r1, #0
10018bb6:	bf08      	it	eq
10018bb8:	2800      	cmpeq	r0, #0
10018bba:	bf1c      	itt	ne
10018bbc:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
10018bc0:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
10018bc4:	f000 b96a 	b.w	10018e9c <__aeabi_idiv0>
10018bc8:	f1ad 0c08 	sub.w	ip, sp, #8
10018bcc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10018bd0:	f000 f806 	bl	10018be0 <__udivmoddi4>
10018bd4:	f8dd e004 	ldr.w	lr, [sp, #4]
10018bd8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10018bdc:	b004      	add	sp, #16
10018bde:	4770      	bx	lr

10018be0 <__udivmoddi4>:
10018be0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10018be4:	9d08      	ldr	r5, [sp, #32]
10018be6:	460c      	mov	r4, r1
10018be8:	2b00      	cmp	r3, #0
10018bea:	d14e      	bne.n	10018c8a <__udivmoddi4+0xaa>
10018bec:	4694      	mov	ip, r2
10018bee:	458c      	cmp	ip, r1
10018bf0:	4686      	mov	lr, r0
10018bf2:	fab2 f282 	clz	r2, r2
10018bf6:	d962      	bls.n	10018cbe <__udivmoddi4+0xde>
10018bf8:	b14a      	cbz	r2, 10018c0e <__udivmoddi4+0x2e>
10018bfa:	f1c2 0320 	rsb	r3, r2, #32
10018bfe:	4091      	lsls	r1, r2
10018c00:	fa20 f303 	lsr.w	r3, r0, r3
10018c04:	fa0c fc02 	lsl.w	ip, ip, r2
10018c08:	4319      	orrs	r1, r3
10018c0a:	fa00 fe02 	lsl.w	lr, r0, r2
10018c0e:	ea4f 471c 	mov.w	r7, ip, lsr #16
10018c12:	fa1f f68c 	uxth.w	r6, ip
10018c16:	fbb1 f4f7 	udiv	r4, r1, r7
10018c1a:	ea4f 431e 	mov.w	r3, lr, lsr #16
10018c1e:	fb07 1114 	mls	r1, r7, r4, r1
10018c22:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10018c26:	fb04 f106 	mul.w	r1, r4, r6
10018c2a:	4299      	cmp	r1, r3
10018c2c:	d90a      	bls.n	10018c44 <__udivmoddi4+0x64>
10018c2e:	eb1c 0303 	adds.w	r3, ip, r3
10018c32:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
10018c36:	f080 8112 	bcs.w	10018e5e <__udivmoddi4+0x27e>
10018c3a:	4299      	cmp	r1, r3
10018c3c:	f240 810f 	bls.w	10018e5e <__udivmoddi4+0x27e>
10018c40:	3c02      	subs	r4, #2
10018c42:	4463      	add	r3, ip
10018c44:	1a59      	subs	r1, r3, r1
10018c46:	fa1f f38e 	uxth.w	r3, lr
10018c4a:	fbb1 f0f7 	udiv	r0, r1, r7
10018c4e:	fb07 1110 	mls	r1, r7, r0, r1
10018c52:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10018c56:	fb00 f606 	mul.w	r6, r0, r6
10018c5a:	429e      	cmp	r6, r3
10018c5c:	d90a      	bls.n	10018c74 <__udivmoddi4+0x94>
10018c5e:	eb1c 0303 	adds.w	r3, ip, r3
10018c62:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
10018c66:	f080 80fc 	bcs.w	10018e62 <__udivmoddi4+0x282>
10018c6a:	429e      	cmp	r6, r3
10018c6c:	f240 80f9 	bls.w	10018e62 <__udivmoddi4+0x282>
10018c70:	4463      	add	r3, ip
10018c72:	3802      	subs	r0, #2
10018c74:	1b9b      	subs	r3, r3, r6
10018c76:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
10018c7a:	2100      	movs	r1, #0
10018c7c:	b11d      	cbz	r5, 10018c86 <__udivmoddi4+0xa6>
10018c7e:	40d3      	lsrs	r3, r2
10018c80:	2200      	movs	r2, #0
10018c82:	e9c5 3200 	strd	r3, r2, [r5]
10018c86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10018c8a:	428b      	cmp	r3, r1
10018c8c:	d905      	bls.n	10018c9a <__udivmoddi4+0xba>
10018c8e:	b10d      	cbz	r5, 10018c94 <__udivmoddi4+0xb4>
10018c90:	e9c5 0100 	strd	r0, r1, [r5]
10018c94:	2100      	movs	r1, #0
10018c96:	4608      	mov	r0, r1
10018c98:	e7f5      	b.n	10018c86 <__udivmoddi4+0xa6>
10018c9a:	fab3 f183 	clz	r1, r3
10018c9e:	2900      	cmp	r1, #0
10018ca0:	d146      	bne.n	10018d30 <__udivmoddi4+0x150>
10018ca2:	42a3      	cmp	r3, r4
10018ca4:	d302      	bcc.n	10018cac <__udivmoddi4+0xcc>
10018ca6:	4290      	cmp	r0, r2
10018ca8:	f0c0 80f0 	bcc.w	10018e8c <__udivmoddi4+0x2ac>
10018cac:	1a86      	subs	r6, r0, r2
10018cae:	eb64 0303 	sbc.w	r3, r4, r3
10018cb2:	2001      	movs	r0, #1
10018cb4:	2d00      	cmp	r5, #0
10018cb6:	d0e6      	beq.n	10018c86 <__udivmoddi4+0xa6>
10018cb8:	e9c5 6300 	strd	r6, r3, [r5]
10018cbc:	e7e3      	b.n	10018c86 <__udivmoddi4+0xa6>
10018cbe:	2a00      	cmp	r2, #0
10018cc0:	f040 8090 	bne.w	10018de4 <__udivmoddi4+0x204>
10018cc4:	eba1 040c 	sub.w	r4, r1, ip
10018cc8:	ea4f 481c 	mov.w	r8, ip, lsr #16
10018ccc:	fa1f f78c 	uxth.w	r7, ip
10018cd0:	2101      	movs	r1, #1
10018cd2:	fbb4 f6f8 	udiv	r6, r4, r8
10018cd6:	ea4f 431e 	mov.w	r3, lr, lsr #16
10018cda:	fb08 4416 	mls	r4, r8, r6, r4
10018cde:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10018ce2:	fb07 f006 	mul.w	r0, r7, r6
10018ce6:	4298      	cmp	r0, r3
10018ce8:	d908      	bls.n	10018cfc <__udivmoddi4+0x11c>
10018cea:	eb1c 0303 	adds.w	r3, ip, r3
10018cee:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
10018cf2:	d202      	bcs.n	10018cfa <__udivmoddi4+0x11a>
10018cf4:	4298      	cmp	r0, r3
10018cf6:	f200 80cd 	bhi.w	10018e94 <__udivmoddi4+0x2b4>
10018cfa:	4626      	mov	r6, r4
10018cfc:	1a1c      	subs	r4, r3, r0
10018cfe:	fa1f f38e 	uxth.w	r3, lr
10018d02:	fbb4 f0f8 	udiv	r0, r4, r8
10018d06:	fb08 4410 	mls	r4, r8, r0, r4
10018d0a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10018d0e:	fb00 f707 	mul.w	r7, r0, r7
10018d12:	429f      	cmp	r7, r3
10018d14:	d908      	bls.n	10018d28 <__udivmoddi4+0x148>
10018d16:	eb1c 0303 	adds.w	r3, ip, r3
10018d1a:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
10018d1e:	d202      	bcs.n	10018d26 <__udivmoddi4+0x146>
10018d20:	429f      	cmp	r7, r3
10018d22:	f200 80b0 	bhi.w	10018e86 <__udivmoddi4+0x2a6>
10018d26:	4620      	mov	r0, r4
10018d28:	1bdb      	subs	r3, r3, r7
10018d2a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10018d2e:	e7a5      	b.n	10018c7c <__udivmoddi4+0x9c>
10018d30:	f1c1 0620 	rsb	r6, r1, #32
10018d34:	408b      	lsls	r3, r1
10018d36:	fa22 f706 	lsr.w	r7, r2, r6
10018d3a:	431f      	orrs	r7, r3
10018d3c:	fa20 fc06 	lsr.w	ip, r0, r6
10018d40:	fa04 f301 	lsl.w	r3, r4, r1
10018d44:	ea43 030c 	orr.w	r3, r3, ip
10018d48:	40f4      	lsrs	r4, r6
10018d4a:	fa00 f801 	lsl.w	r8, r0, r1
10018d4e:	0c38      	lsrs	r0, r7, #16
10018d50:	ea4f 4913 	mov.w	r9, r3, lsr #16
10018d54:	fbb4 fef0 	udiv	lr, r4, r0
10018d58:	fa1f fc87 	uxth.w	ip, r7
10018d5c:	fb00 441e 	mls	r4, r0, lr, r4
10018d60:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10018d64:	fb0e f90c 	mul.w	r9, lr, ip
10018d68:	45a1      	cmp	r9, r4
10018d6a:	fa02 f201 	lsl.w	r2, r2, r1
10018d6e:	d90a      	bls.n	10018d86 <__udivmoddi4+0x1a6>
10018d70:	193c      	adds	r4, r7, r4
10018d72:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
10018d76:	f080 8084 	bcs.w	10018e82 <__udivmoddi4+0x2a2>
10018d7a:	45a1      	cmp	r9, r4
10018d7c:	f240 8081 	bls.w	10018e82 <__udivmoddi4+0x2a2>
10018d80:	f1ae 0e02 	sub.w	lr, lr, #2
10018d84:	443c      	add	r4, r7
10018d86:	eba4 0409 	sub.w	r4, r4, r9
10018d8a:	fa1f f983 	uxth.w	r9, r3
10018d8e:	fbb4 f3f0 	udiv	r3, r4, r0
10018d92:	fb00 4413 	mls	r4, r0, r3, r4
10018d96:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10018d9a:	fb03 fc0c 	mul.w	ip, r3, ip
10018d9e:	45a4      	cmp	ip, r4
10018da0:	d907      	bls.n	10018db2 <__udivmoddi4+0x1d2>
10018da2:	193c      	adds	r4, r7, r4
10018da4:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
10018da8:	d267      	bcs.n	10018e7a <__udivmoddi4+0x29a>
10018daa:	45a4      	cmp	ip, r4
10018dac:	d965      	bls.n	10018e7a <__udivmoddi4+0x29a>
10018dae:	3b02      	subs	r3, #2
10018db0:	443c      	add	r4, r7
10018db2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
10018db6:	fba0 9302 	umull	r9, r3, r0, r2
10018dba:	eba4 040c 	sub.w	r4, r4, ip
10018dbe:	429c      	cmp	r4, r3
10018dc0:	46ce      	mov	lr, r9
10018dc2:	469c      	mov	ip, r3
10018dc4:	d351      	bcc.n	10018e6a <__udivmoddi4+0x28a>
10018dc6:	d04e      	beq.n	10018e66 <__udivmoddi4+0x286>
10018dc8:	b155      	cbz	r5, 10018de0 <__udivmoddi4+0x200>
10018dca:	ebb8 030e 	subs.w	r3, r8, lr
10018dce:	eb64 040c 	sbc.w	r4, r4, ip
10018dd2:	fa04 f606 	lsl.w	r6, r4, r6
10018dd6:	40cb      	lsrs	r3, r1
10018dd8:	431e      	orrs	r6, r3
10018dda:	40cc      	lsrs	r4, r1
10018ddc:	e9c5 6400 	strd	r6, r4, [r5]
10018de0:	2100      	movs	r1, #0
10018de2:	e750      	b.n	10018c86 <__udivmoddi4+0xa6>
10018de4:	f1c2 0320 	rsb	r3, r2, #32
10018de8:	fa20 f103 	lsr.w	r1, r0, r3
10018dec:	fa0c fc02 	lsl.w	ip, ip, r2
10018df0:	fa24 f303 	lsr.w	r3, r4, r3
10018df4:	4094      	lsls	r4, r2
10018df6:	430c      	orrs	r4, r1
10018df8:	ea4f 481c 	mov.w	r8, ip, lsr #16
10018dfc:	fa00 fe02 	lsl.w	lr, r0, r2
10018e00:	fa1f f78c 	uxth.w	r7, ip
10018e04:	fbb3 f0f8 	udiv	r0, r3, r8
10018e08:	fb08 3110 	mls	r1, r8, r0, r3
10018e0c:	0c23      	lsrs	r3, r4, #16
10018e0e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10018e12:	fb00 f107 	mul.w	r1, r0, r7
10018e16:	4299      	cmp	r1, r3
10018e18:	d908      	bls.n	10018e2c <__udivmoddi4+0x24c>
10018e1a:	eb1c 0303 	adds.w	r3, ip, r3
10018e1e:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
10018e22:	d22c      	bcs.n	10018e7e <__udivmoddi4+0x29e>
10018e24:	4299      	cmp	r1, r3
10018e26:	d92a      	bls.n	10018e7e <__udivmoddi4+0x29e>
10018e28:	3802      	subs	r0, #2
10018e2a:	4463      	add	r3, ip
10018e2c:	1a5b      	subs	r3, r3, r1
10018e2e:	b2a4      	uxth	r4, r4
10018e30:	fbb3 f1f8 	udiv	r1, r3, r8
10018e34:	fb08 3311 	mls	r3, r8, r1, r3
10018e38:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
10018e3c:	fb01 f307 	mul.w	r3, r1, r7
10018e40:	42a3      	cmp	r3, r4
10018e42:	d908      	bls.n	10018e56 <__udivmoddi4+0x276>
10018e44:	eb1c 0404 	adds.w	r4, ip, r4
10018e48:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
10018e4c:	d213      	bcs.n	10018e76 <__udivmoddi4+0x296>
10018e4e:	42a3      	cmp	r3, r4
10018e50:	d911      	bls.n	10018e76 <__udivmoddi4+0x296>
10018e52:	3902      	subs	r1, #2
10018e54:	4464      	add	r4, ip
10018e56:	1ae4      	subs	r4, r4, r3
10018e58:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
10018e5c:	e739      	b.n	10018cd2 <__udivmoddi4+0xf2>
10018e5e:	4604      	mov	r4, r0
10018e60:	e6f0      	b.n	10018c44 <__udivmoddi4+0x64>
10018e62:	4608      	mov	r0, r1
10018e64:	e706      	b.n	10018c74 <__udivmoddi4+0x94>
10018e66:	45c8      	cmp	r8, r9
10018e68:	d2ae      	bcs.n	10018dc8 <__udivmoddi4+0x1e8>
10018e6a:	ebb9 0e02 	subs.w	lr, r9, r2
10018e6e:	eb63 0c07 	sbc.w	ip, r3, r7
10018e72:	3801      	subs	r0, #1
10018e74:	e7a8      	b.n	10018dc8 <__udivmoddi4+0x1e8>
10018e76:	4631      	mov	r1, r6
10018e78:	e7ed      	b.n	10018e56 <__udivmoddi4+0x276>
10018e7a:	4603      	mov	r3, r0
10018e7c:	e799      	b.n	10018db2 <__udivmoddi4+0x1d2>
10018e7e:	4630      	mov	r0, r6
10018e80:	e7d4      	b.n	10018e2c <__udivmoddi4+0x24c>
10018e82:	46d6      	mov	lr, sl
10018e84:	e77f      	b.n	10018d86 <__udivmoddi4+0x1a6>
10018e86:	4463      	add	r3, ip
10018e88:	3802      	subs	r0, #2
10018e8a:	e74d      	b.n	10018d28 <__udivmoddi4+0x148>
10018e8c:	4606      	mov	r6, r0
10018e8e:	4623      	mov	r3, r4
10018e90:	4608      	mov	r0, r1
10018e92:	e70f      	b.n	10018cb4 <__udivmoddi4+0xd4>
10018e94:	3e02      	subs	r6, #2
10018e96:	4463      	add	r3, ip
10018e98:	e730      	b.n	10018cfc <__udivmoddi4+0x11c>
10018e9a:	bf00      	nop

10018e9c <__aeabi_idiv0>:
10018e9c:	4770      	bx	lr
10018e9e:	bf00      	nop
10018ea0:	20303243 	.word	0x20303243
10018ea4:	746f6f62 	.word	0x746f6f62
10018ea8:	00000000 	.word	0x00000000
10018eac:	35322f31 	.word	0x35322f31
10018eb0:	0034322f 	.word	0x0034322f
10018eb4:	2077654e 	.word	0x2077654e
10018eb8:	6b726f59 	.word	0x6b726f59
10018ebc:	00000000 	.word	0x00000000
10018ec0:	3e434f4c 	.word	0x3e434f4c
10018ec4:	440a7325 	.word	0x440a7325
10018ec8:	3e455441 	.word	0x3e455441
10018ecc:	430a7325 	.word	0x430a7325
10018ed0:	3e545355 	.word	0x3e545355
10018ed4:	000a7325 	.word	0x000a7325
10018ed8:	65636150 	.word	0x65636150
10018edc:	00000000 	.word	0x00000000
10018ee0:	6f727245 	.word	0x6f727245
10018ee4:	55203a72 	.word	0x55203a72
10018ee8:	6365726e 	.word	0x6365726e
10018eec:	696e676f 	.word	0x696e676f
10018ef0:	2064657a 	.word	0x2064657a
10018ef4:	6d6d6f63 	.word	0x6d6d6f63
10018ef8:	20646e61 	.word	0x20646e61
10018efc:	65636572 	.word	0x65636572
10018f00:	64657669 	.word	0x64657669
10018f04:	0a642520 	.word	0x0a642520
10018f08:	00000000 	.word	0x00000000
10018f0c:	706d6f43 	.word	0x706d6f43
10018f10:	6e656e6f 	.word	0x6e656e6f
10018f14:	74532074 	.word	0x74532074
10018f18:	65747261 	.word	0x65747261
10018f1c:	00000064 	.word	0x00000064
10018f20:	6c696146 	.word	0x6c696146
10018f24:	74206465 	.word	0x74206465
10018f28:	6e69206f 	.word	0x6e69206f
10018f2c:	61697469 	.word	0x61697469
10018f30:	657a696c 	.word	0x657a696c
10018f34:	43324920 	.word	0x43324920
10018f38:	0000002e 	.word	0x0000002e
10018f3c:	5f43584d 	.word	0x5f43584d
10018f40:	45535341 	.word	0x45535341
10018f44:	25205452 	.word	0x25205452
10018f48:	25232073 	.word	0x25232073
10018f4c:	28203a64 	.word	0x28203a64
10018f50:	0a297325 	.word	0x0a297325
10018f54:	00000000 	.word	0x00000000
10018f58:	6361502f 	.word	0x6361502f
10018f5c:	30322d65 	.word	0x30322d65
10018f60:	652d3432 	.word	0x652d3432
10018f64:	2f667463 	.word	0x2f667463
10018f68:	6b64736d 	.word	0x6b64736d
10018f6c:	62694c2f 	.word	0x62694c2f
10018f70:	69726172 	.word	0x69726172
10018f74:	422f7365 	.word	0x422f7365
10018f78:	6472616f 	.word	0x6472616f
10018f7c:	414d2f73 	.word	0x414d2f73
10018f80:	30383758 	.word	0x30383758
10018f84:	462f3030 	.word	0x462f3030
10018f88:	5f524854 	.word	0x5f524854
10018f8c:	41766552 	.word	0x41766552
10018f90:	756f532f 	.word	0x756f532f
10018f94:	2f656372 	.word	0x2f656372
10018f98:	72616f62 	.word	0x72616f62
10018f9c:	00632e64 	.word	0x00632e64
10018fa0:	4c494146 	.word	0x4c494146
10018fa4:	00000000 	.word	0x00000000

10018fa8 <num_leds>:
10018fa8:	00000003                                ....

10018fac <led_pin>:
10018fac:	40080400 00000001 00010001 40080400     ...@...........@
10018fbc:	00000002 00010001 40080400 00000004     ...........@....
10018fcc:	00010001                                ....

10018fd0 <num_pbs>:
10018fd0:	00000002                                ....

10018fd4 <pb_pin>:
10018fd4:	40008000 00000004 00010100 40009000     ...@...........@
10018fe4:	00000080 00010100 6361502f 30322d65     ......../Pace-20
10018ff4:	652d3432 2f667463 6b64736d 62694c2f     24-ectf/msdk/Lib
10019004:	69726172 4d2f7365 44637369 65766972     raries/MiscDrive
10019014:	4c2f7372 6c2f4445 632e6465 00000000     rs/LED/led.c....
10019024:	20786469 756e203c 656c5f6d 00007364     idx < num_leds..

10019034 <gpio_cfg_uart3>:
10019034:	40080400 000000c0 00000003              ...@........

10019040 <gpio_cfg_uart2>:
10019040:	40009000 00000003 00000002              ...@........

1001904c <gpio_cfg_uart1>:
1001904c:	40008000 00003000 00000002              ...@.0......

10019058 <gpio_cfg_uart0>:
10019058:	40008000 00000003 00000002              ...@........

10019064 <gpio_cfg_i2c2>:
10019064:	40008000 c0000000 00000002              ...@........

10019070 <gpio_cfg_i2c1>:
10019070:	40008000 00030000 00000002              ...@........

1001907c <gpio_cfg_i2c0>:
1001907c:	40008000 00000c00 00000002              ...@........

10019088 <gpio_cfg_extclk>:
10019088:	40008000 00000008 00000002 6361502f     ...@......../Pac
10019098:	30322d65 652d3432 2f667463 6b64736d     e-2024-ectf/msdk
100190a8:	62694c2f 69726172 432f7365 5349534d     /Libraries/CMSIS
100190b8:	2f2e2e2f 69726550 72446870 72657669     /../PeriphDriver
100190c8:	6f532f73 65637275 4950472f 70672f4f     s/Source/GPIO/gp
100190d8:	635f6f69 6f6d6d6f 00632e6e 74726f70     io_common.c.port
100190e8:	4d203c20 435f4358 475f4746 5f4f4950      < MXC_CFG_GPIO_
100190f8:	54534e49 45434e41 00000053              INSTANCES...

10019104 <CSWTCH.16>:
10019104:	40009000 40080400 40080600 00464e49     ...@...@...@INF.
10019114:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
10019124:	37363534 62613938 66656463 00000000     456789abcdef....
10019134:	33323130 37363534 42413938 46454443     0123456789ABCDEF
10019144:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

10019154 <zeroes.0>:
10019154:	30303030 30303030 30303030 30303030     0000000000000000

10019164 <blanks.1>:
10019164:	20202020 20202020 20202020 20202020                     
10019174:	435f434c 414c4c4f 00004554 435f434c     LC_COLLATE..LC_C
10019184:	45505954 00000000 4d5f434c 54454e4f     TYPE....LC_MONET
10019194:	00595241 4e5f434c 52454d55 00004349     ARY.LC_NUMERIC..
100191a4:	545f434c 00454d49 4d5f434c 41535345     LC_TIME.LC_MESSA
100191b4:	00534547 0000000a 69666e49 7974696e     GES.....Infinity
100191c4:	00000000 004e614e 6c6c6142 7320636f     ....NaN.Balloc s
100191d4:	65636375 64656465 00000000 7461642f     ucceeded..../dat
100191e4:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
100191f4:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
10019204:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
10019214:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
10019224:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
10019234:	632e616f 00000000                       oa.c....

1001923c <_ctype_>:
1001923c:	20202000 20202020 28282020 20282828     .         ((((( 
1001924c:	20202020 20202020 20202020 20202020                     
1001925c:	10108820 10101010 10101010 10101010      ...............
1001926c:	04040410 04040404 10040404 10101010     ................
1001927c:	41411010 41414141 01010101 01010101     ..AAAAAA........
1001928c:	01010101 01010101 01010101 10101010     ................
1001929c:	42421010 42424242 02020202 02020202     ..BBBBBB........
100192ac:	02020202 02020202 02020202 10101010     ................
100192bc:	00000020 00000000 00000000 00000000      ...............
	...

10019340 <zeroes.0>:
10019340:	30303030 30303030 30303030 30303030     0000000000000000

10019350 <blanks.1>:
10019350:	20202020 20202020 20202020 20202020                     

10019360 <zeroes.0>:
10019360:	30303030 30303030 30303030 30303030     0000000000000000

10019370 <blanks.1>:
10019370:	20202020 20202020 20202020 20202020                     
10019380:	7566202c 6974636e 203a6e6f 00000000     , function: ....
10019390:	65737361 6f697472 2522206e 66202273     assertion "%s" f
100193a0:	656c6961 66203a64 20656c69 22732522     ailed: file "%s"
100193b0:	696c202c 2520656e 25732564 00000a73     , line %d%s%s...
100193c0:	7461642f 656a2f61 6e696b6e 6f772f73     /data/jenkins/wo
100193d0:	70736b72 2f656361 2d554e47 6c6f6f74     rkspace/GNU-tool
100193e0:	69616863 72612f6e 32312d6d 6372732f     chain/arm-12/src
100193f0:	77656e2f 2d62696c 77677963 6e2f6e69     /newlib-cygwin/n
10019400:	696c7765 696c2f62 732f6362 696c6474     ewlib/libc/stdli
10019410:	706d2f62 2e636572 00000063              b/mprec.c...

1001941c <p05.0>:
1001941c:	00000005 00000019 0000007d              ........}...

10019428 <__mprec_bigtens>:
10019428:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
10019438:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
10019448:	7f73bf3c 75154fdd                       <.s..O.u

10019450 <__mprec_tens>:
10019450:	00000000 3ff00000 00000000 40240000     .......?......$@
10019460:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
10019470:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
10019480:	00000000 412e8480 00000000 416312d0     .......A......cA
10019490:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
100194a0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
100194b0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
100194c0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
100194d0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
100194e0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
100194f0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
10019500:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
10019510:	79d99db4 44ea7843                       ...yCx.D

10019518 <_init>:
10019518:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001951a:	bf00      	nop
1001951c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1001951e:	bc08      	pop	{r3}
10019520:	469e      	mov	lr, r3
10019522:	4770      	bx	lr

10019524 <_fini>:
10019524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10019526:	bf00      	nop
10019528:	bcf8      	pop	{r3, r4, r5, r6, r7}
1001952a:	bc08      	pop	{r3}
1001952c:	469e      	mov	lr, r3
1001952e:	4770      	bx	lr

10019530 <__EH_FRAME_BEGIN__>:
10019530:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
10019540:	0c1b 000d 0038 0000 0018 0000 9eb4 ffff     ....8...........
10019550:	009e 0000 5100 100e 0484 0385 0286 0187     .....Q..........
10019560:	c75b c5c6 0ec4 4c00 420a 0a0b 0b42 100e     [......L.B..B...
10019570:	0484 0385 0286 0187 c751 c5c6 0ec4 0000     ........Q.......
10019580:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
10019590:	0c1b 000d 0014 0000 0018 0000 9f04 ffff     ................
100195a0:	0134 0000 0200 0a71 0b43 0000 0010 0000     4.....q.C.......
100195b0:	0000 0000 7a01 0052 7c02 010e 0c1b 000d     .....zR..|......
100195c0:	001c 0000 0018 0000 a038 ffff 00d8 0000     ........8.......
100195d0:	4100 080e 0185 0284 4902 4a0a c4c5 0b41     .A.......I.J..A.

100195e0 <__FRAME_END__>:
100195e0:	0000 0000                                   ....
